var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_views","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","field_by_name","fields_as_series","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_series","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_nulls","head","init","init","init_rand","inner_dtype","inner_dtype","interior_mut_metadata","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","slice","sort","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","sort_with","split_at","split_at","std","std_reduce","std_reduce","std_reduce","struct_fields","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","into_iter","into_iter","into_iter","new","new","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructOwned","StructType","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast_leaf","cast_time_unit","cast_time_unit","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_scalar","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_str","last","leaf_dtype","len","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new_logical","newest","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","oldest","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","physical","precision","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","round","round","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_scale","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","lazy","len","max_horizontal","mean_horizontal","min_horizontal","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","CLUSTER_WITH_COLUMNS","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","ExclusiveOr","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","InterSect","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","SmartString","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","Sum","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_join_suffix_name","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","arr_from_iter_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","buffer","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cat","cat","cause","cbrt","ceil","ceil","center","century","check_bound","check_schema","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","complement","compression","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_page_size","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","difference","display","distinct_count","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_no_validate","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","empty","empty","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","explode","explode","explode_and_offsets","expr","extend","extend_constant","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","fields_to_cast","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full","full_join","full_join","full_null","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_glob_start_idx","get_metadata","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","get_names_and_dtypes","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_nulls","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_file_paths","include_file_paths","include_header","include_header","increment_strong_count","increment_strong_count_in","index","index","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_all","is_arithmetic","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_names","join","join","join","join","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","line_terminator","list","lit","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","max_value","maybe_decompress_bytes","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batch","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","on","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","overwrite_schema","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","replace_strict","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","sub","sub","sub_assign","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","symmetric_difference","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","to_writer","to_writer","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_project","try_serialize","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","union","unique","unique","unique","unique","unique","unique","unique_generic","unique_stable","unique_stable","unique_stable","unique_stable","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value","value_counts","value_counts","value_name","value_name","value_unchecked","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cloud_options","with_cloud_options","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compat_level","with_compat_level","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_include_file_path","with_include_file_path","with_include_file_paths","with_include_file_paths","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_new_streaming","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_paths","with_paths","with_paths","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","write_df_to_file","write_partitioned_dataset","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","is_compressed","magic","GZIP","ZLIB0","ZLIB1","ZLIB2","ZSTD","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructOwned","StructType","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_array","reshape_list","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[852,"polars::chunked_array::arithmetic"],[880,"polars::chunked_array::builder"],[1141,"polars::chunked_array::builder::list"],[1158,"polars::chunked_array::cast"],[1188,"polars::chunked_array::collect"],[1202,"polars::chunked_array::float"],[1204,"polars::chunked_array::from_iterator_par"],[1208,"polars::chunked_array::iterator"],[1263,"polars::chunked_array::iterator::par"],[1265,"polars::chunked_array::metadata"],[1551,"polars::chunked_array::object"],[1628,"polars::chunked_array::object::builder"],[1651,"polars::chunked_array::object::registry"],[1679,"polars::chunked_array::ops"],[1886,"polars::chunked_array::ops::arity"],[1922,"polars::chunked_array::ops::float_sorted_arg_max"],[1924,"polars::chunked_array::ops::gather"],[1927,"polars::chunked_array::ops::search_sorted"],[1958,"polars::chunked_array::ops::sort"],[1965,"polars::chunked_array::ops::sort::arg_bottom_k"],[1966,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1974,"polars::chunked_array::ops::sort::options"],[1987,"polars::chunked_array::temporal"],[1995,"polars::chunked_array::temporal::conversion"],[1998,"polars::datatypes"],[3407,"polars::datatypes::categorical"],[3424,"polars::datatypes::categorical::revmap"],[3430,"polars::datatypes::categorical::string_cache"],[3449,"polars::docs"],[3451,"polars::error"],[3540,"polars::error::PolarsError"],[3544,"polars::error::constants"],[3547,"polars::frame"],[3809,"polars::frame::explode"],[3838,"polars::frame::group_by"],[4077,"polars::frame::group_by::GroupByMethod"],[4078,"polars::frame::group_by::GroupsProxy"],[4080,"polars::frame::group_by::aggregations"],[4093,"polars::frame::group_by::expr"],[4096,"polars::frame::row"],[4206,"polars::functions"],[4208,"polars::prelude"],[9543,"polars::prelude::AggExpr"],[9550,"polars::prelude::BooleanFunction"],[9553,"polars::prelude::DslPlan"],[9607,"polars::prelude::Expr"],[9642,"polars::prelude::FunctionExpr"],[9664,"polars::prelude::GroupByMethod"],[9665,"polars::prelude::GroupsProxy"],[9667,"polars::prelude::LiteralValue"],[9670,"polars::prelude::PolarsError"],[9674,"polars::prelude::StringFunction"],[9688,"polars::prelude::TemporalFunction"],[9690,"polars::prelude::aggregations"],[9703,"polars::prelude::arity"],[9739,"polars::prelude::array"],[9758,"polars::prelude::binary"],[9775,"polars::prelude::buffer"],[9849,"polars::prelude::buffer::Buffer"],[9852,"polars::prelude::cat"],[9853,"polars::prelude::chunkedarray"],[9919,"polars::prelude::chunkedarray::string"],[9959,"polars::prelude::chunkedarray::string::infer"],[9990,"polars::prelude::cloud"],[10040,"polars::prelude::cloud::options"],[10049,"polars::prelude::compression"],[10051,"polars::prelude::compression::magic"],[10056,"polars::prelude::datatypes"],[10329,"polars::prelude::datatypes::categorical"],[10346,"polars::prelude::datatypes::categorical::revmap"],[10352,"polars::prelude::datatypes::categorical::string_cache"],[10356,"polars::prelude::datetime"],[10359,"polars::prelude::default_arrays"],[10365,"polars::prelude::dt"],[10417,"polars::prelude::expr"],[10420,"polars::prelude::fixed_size_list"],[10440,"polars::prelude::float_sorted_arg_max"],[10442,"polars::prelude::function_expr"],[10615,"polars::prelude::function_expr::BooleanFunction"],[10618,"polars::prelude::function_expr::FunctionExpr"],[10640,"polars::prelude::function_expr::StringFunction"],[10654,"polars::prelude::function_expr::TemporalFunction"],[10656,"polars::prelude::function_expr::cat"],[10658,"polars::prelude::function_expr::pow"],[10662,"polars::prelude::function_expr::rolling"],[10692,"polars::prelude::function_expr::rolling_by"],[10722,"polars::prelude::gather"],[10725,"polars::prelude::interpolate"],[10729,"polars::prelude::interpolate_by"],[10730,"polars::prelude::mode"],[10731,"polars::prelude::nan_propagating_aggregate"],[10736,"polars::prelude::null"],[10767,"polars::prelude::schema_inference"],[10794,"polars::prelude::search_sorted"],[10800,"polars::prelude::series"],[10822,"polars::prelude::sort"],[10829,"polars::prelude::sort::arg_bottom_k"],[10830,"polars::prelude::sort::arg_sort_multiple"],[10838,"polars::prelude::sort::options"],[10851,"polars::prelude::strings"],[10905,"polars::prelude::udf"],[10911,"polars::prelude::utf8"],[10915,"polars::series"],[11350,"polars::series::amortized_iter"],[11374,"polars::series::arithmetic"],[11395,"polars::series::arithmetic::checked"],[11401,"polars::series::ops"],[11429,"dyn_clone::sealed"],[11430,"polars_core::datatypes"],[11431,"polars_core::chunked_array"],[11432,"polars_error"],[11433,"core::result"],[11434,"polars_core::series"],[11435,"core::ops::function"],[11436,"num_traits"],[11437,"num_traits::cast"],[11438,"polars_core::series::arithmetic::borrowed"],[11439,"polars_core::frame::group_by::proxy"],[11440,"polars_core::chunked_array::object"],[11441,"core::option"],[11442,"polars_arrow::array"],[11443,"alloc::boxed"],[11444,"core::iter::traits::iterator"],[11445,"polars_core::chunked_array::list::iterator"],[11446,"core::marker"],[11447,"alloc::borrow"],[11448,"polars_core::series::amortized_iter"],[11449,"alloc::string"],[11450,"polars_core::datatypes::dtype"],[11451,"polars_arrow::array::binview::view"],[11452,"polars_core::chunked_array::ops::sort::options"],[11453,"polars_core::chunked_array::cast"],[11454,"polars_core::series::arithmetic::borrowed::checked"],[11455,"core::slice::iter"],[11456,"core::iter::adapters::map"],[11457,"alloc::vec"],[11458,"polars_core::chunked_array::metadata"],[11459,"core::iter::traits::double_ended"],[11460,"polars_arrow::offset"],[11461,"core::fmt"],[11462,"core::iter::traits::collect"],[11463,"polars_arrow::bitmap::immutable"],[11464,"core::borrow"],[11465,"polars_core::chunked_array::from_iterator"],[11466,"core::convert"],[11467,"polars_arrow::pushable"],[11468,"rayon::iter"],[11469,"polars_arrow::trusted_len"],[11470,"polars_core::datatypes::any_value"],[11471,"polars_arrow::array::binary"],[11472,"std::sync::rwlock"],[11473,"polars_core::chunked_array::logical"],[11474,"polars_core::datatypes::time_unit"],[11475,"core::iter::traits::exact_size"],[11476,"polars_core::series::series_trait"],[11477,"polars_core::chunked_array::iterator"],[11478,"polars_core::scalar"],[11479,"polars_core::chunked_array::metadata::guard"],[11480,"polars_core::chunked_array::metadata::interior_mutable"],[11481,"alloc::sync"],[11482,"polars_core::chunked_array::metadata::md_trait"],[11483,"core::ops::range"],[11484,"polars_core::datatypes::field"],[11485,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11486,"polars_core::chunked_array::ops::rolling_window"],[11487,"polars_ops::chunked_array::scatter"],[11488,"polars_utils::index"],[11489,"ahash::random_state"],[11490,"polars_utils::hashing"],[11491,"ndarray"],[11492,"ndarray::dimension::dim"],[11493,"ndarray::data_repr"],[11494,"either"],[11495,"core::any"],[11496,"polars_core::frame"],[11497,"polars_core::chunked_array::arithmetic::numeric"],[11498,"polars_core::chunked_array::builder::list::anonymous"],[11499,"polars_core::chunked_array::builder::list::boolean"],[11500,"polars_core::chunked_array::builder::list::primitive"],[11501,"polars_core::chunked_array::builder::list"],[11502,"polars_core::chunked_array::builder"],[11503,"polars_core::chunked_array::builder::list::binary"],[11504,"polars_core::chunked_array::builder::list::null"],[11505,"polars_core::chunked_array::builder::string"],[11506,"polars_arrow::array::binview"],[11507,"polars_core::chunked_array::builder::boolean"],[11508,"polars_core::chunked_array::builder::null"],[11509,"polars_core::chunked_array::builder::primitive"],[11510,"core::clone"],[11511,"polars_core::series::implementations::null"],[11512,"core::hash"],[11513,"polars_core::chunked_array::collect"],[11514,"polars_core::chunked_array::float"],[11515,"polars_core::chunked_array::from_iterator_par"],[11516,"polars_arrow::array::boolean"],[11517,"polars_arrow::array::fixed_size_list"],[11518,"polars_core::chunked_array::metadata::env"],[11519,"polars_core::chunked_array::metadata::collect"],[11520,"bitflags::iter"],[11521,"std::fs"],[11522,"std::sync::mutex"],[11523,"polars_arrow::datatypes"],[11524,"polars_arrow::bitmap::utils::iterator"],[11525,"polars_arrow::bitmap::utils::zip_validity"],[11526,"polars_core::chunked_array::object::builder"],[11527,"polars_core::chunked_array::object::registry"],[11528,"polars_core::chunked_array::ops"],[11529,"polars_arrow::legacy::array::slice"],[11530,"polars_core::chunked_array::ops::arity"],[11531,"polars_arrow::array::static_array"],[11532,"core::error"],[11533,"polars_arrow::array::primitive"],[11534,"polars_core::chunked_array::ops::search_sorted"],[11535,"polars_core::utils"],[11536,"polars_row::row"],[11537,"chrono::naive::datetime"],[11538,"chrono_tz::timezones"],[11539,"chrono::naive::time"],[11540,"polars_core::chunked_array::logical::categorical"],[11541,"polars_core::chunked_array::logical::categorical::builder"],[11542,"polars_arrow::array::static_array_collect"],[11543,"bytemuck::zeroable"],[11544,"polars_core::chunked_array::logical::categorical::revmap"],[11545,"polars_core::chunked_array::logical::categorical::merge"],[11546,"polars_arrow::datatypes::physical_type"],[11547,"polars_arrow::types"],[11548,"chrono::time_delta"],[11549,"chrono::naive::date"],[11550,"smartstring::config"],[11551,"smartstring"],[11552,"polars_core::datatypes::into_scalar"],[11553,"core::cmp"],[11554,"polars_core::chunked_array::logical::categorical::string_cache"],[11555,"polars_error::warning"],[11556,"alloc::collections"],[11557,"polars_parquet::parquet::error"],[11558,"planus::errors"],[11559,"simdutf8::basic"],[11560,"regex::error"],[11561,"std::io::error"],[11562,"polars_core::schema"],[11563,"polars_core::series::from"],[11564,"hashbrown::set"],[11565,"polars_arrow::datatypes::schema"],[11566,"polars_core::frame::row"],[11567,"polars_core::frame::group_by"],[11568,"polars_time::group_by::dynamic"],[11569,"polars_lazy::frame"],[11570,"polars_core::chunked_array::ndarray"],[11571,"polars_arrow::array::struct_"],[11572,"polars_arrow::record_batch"],[11573,"polars_time::windows::duration"],[11574,"polars_core::frame::explode"],[11575,"polars_utils::idx_vec"],[11576,"rayon::iter::plumbing"],[11577,"polars_plan::plans::aexpr"],[11578,"polars_core::frame::group_by::into_groups"],[11579,"core::iter::adapters::copied"],[11580,"core::iter::adapters::zip"],[11581,"polars_utils::float"],[11582,"polars_arrow::types::native"],[11583,"polars_core::frame::group_by::aggregations::agg_list"],[11584,"polars_core::frame::group_by::aggregations"],[11585,"polars_core::frame::group_by::expr"],[11586,"polars_core::frame::row::av_buffer"],[11587,"polars_utils::arena"],[11588,"polars_plan::plans::ir"],[11589,"polars_ops::frame::join::hash_join"],[11590,"polars_ops::frame::join::args"],[11591,"polars_ops::chunked_array::gather::chunked"],[11592,"polars_ops::frame"],[11593,"polars_io::csv::read::reader"],[11594,"polars_io::predicates"],[11595,"polars_io::mmap"],[11596,"polars_plan::dsl::expr"],[11597,"polars_plan::dsl::selector"],[11598,"polars_plan::frame::opt_state"],[11599,"core::alloc"],[11600,"polars_plan::plans::anonymous_scan"],[11601,"polars_lazy::scan::anonymous_scan"],[11602,"polars_plan::dsl::expr_dyn_fn"],[11603,"polars_plan::plans::visitor"],[11604,"polars_plan::dsl::function_expr"],[11605,"polars_ops::series::ops::arg_min_max"],[11606,"polars_plan::dsl::array"],[11607,"polars_plan::dsl::list"],[11608,"polars_plan::dsl::function_expr::schema"],[11609,"polars_io::ipc::ipc_stream"],[11610,"std::io"],[11611,"polars_ops::chunked_array::binary"],[11612,"polars_time::chunkedarray::string"],[11613,"std::os::fd::owned"],[11614,"polars_ops::chunked_array::list"],[11615,"std::os::fd::raw"],[11616,"polars_ops::series::ops"],[11617,"polars_ops::chunked_array::strings"],[11618,"core::mem::maybe_uninit"],[11619,"polars_ops::chunked_array::strings::namespace"],[11620,"polars_io::csv::read::read_impl::batched"],[11621,"polars_io::csv::write::writer"],[11622,"polars_io::ipc::write"],[11623,"polars_io::parquet::read::reader"],[11624,"polars_io::parquet::read::read_impl"],[11625,"polars_io::parquet::write::writer"],[11626,"polars_io::parquet::write::batched_writer"],[11627,"polars_plan::dsl::binary"],[11628,"polars_plan::dsl::udf"],[11629,"polars_lazy::frame::exitable"],[11630,"hashbrown::map"],[11631,"polars_plan::dsl::cat"],[11632,"polars_ops::series::ops::round"],[11633,"polars_time::series"],[11634,"polars_lazy::scan::csv"],[11635,"polars_lazy::scan::ipc"],[11636,"polars_lazy::scan::ndjson"],[11637,"polars_lazy::scan::parquet"],[11638,"polars_time::chunkedarray::rolling_window"],[11639,"polars_time::windows::bounds"],[11640,"polars_time::windows::group_by"],[11641,"polars_time::windows::window"],[11642,"polars_io::csv::read::options"],[11643,"polars_io::csv::write::options"],[11644,"polars_io::ipc::ipc_file"],[11645,"polars_ops::frame::join::asof"],[11646,"polars_io::json"],[11647,"polars_ops::series::ops::interpolation::interpolate"],[11648,"polars_io::parquet::read::options"],[11649,"polars_ops::series::ops::is_between"],[11650,"polars_ops::series::ops::rank"],[11651,"polars_io::parquet::write::options"],[11652,"polars_plan::plans"],[11653,"polars_plan::dsl::arity"],[11654,"polars_plan::dsl::function_expr::boolean"],[11655,"polars_plan::dsl::function_expr::cat"],[11656,"polars_plan::dsl::function_expr::datetime"],[11657,"polars_plan::dsl::function_expr::pow"],[11658,"polars_plan::dsl::function_expr::strings"],[11659,"polars_plan::dsl::function_expr::struct_"],[11660,"polars_plan::dsl::functions::temporal"],[11661,"polars_plan::dsl::options"],[11662,"polars_parquet::arrow::write"],[11663,"polars_plan::plans::lit"],[11664,"polars_parquet::parquet::metadata::file_metadata"],[11665,"polars_plan::plans::options"],[11666,"polars_arrow::legacy::kernels::rolling"],[11667,"polars_arrow::legacy::kernels::time"],[11668,"polars_lazy::scan::file_list_reader"],[11669,"polars_io::cloud::options"],[11670,"polars_parquet::parquet::metadata::column_order"],[11671,"polars_ops::chunked_array::binary::namespace"],[11672,"polars_io::ndjson::core"],[11673,"std::path"],[11674,"polars_ops::frame::join::cross_join"],[11675,"polars_lazy::dsl::eval"],[11676,"polars_time::chunkedarray::date"],[11677,"polars_time::chunkedarray::datetime"],[11678,"polars_time::chunkedarray::duration"],[11679,"core::ffi::c_str"],[11680,"core::default"],[11681,"polars_parquet::parquet::metadata::row_metadata"],[11682,"polars_core::series::ops"],[11683,"polars_plan::dsl::dt"],[11684,"polars_ops::series::ops::various"],[11685,"polars_arrow::scalar"],[11686,"polars_lazy::dsl::list"],[11687,"crossterm::command"],[11688,"polars_plan::dsl::struct_"],[11689,"polars_io::shared"],[11690,"polars_plan::plans::apply"],[11691,"polars_plan::dsl::function_expr::range"],[11692,"polars_plan::dsl::function_expr::list"],[11693,"polars_plan::dsl::function_expr::array"],[11694,"polars_plan::dsl::function_expr::binary"],[11695,"polars_parquet::arrow::read::statistics"],[11696,"std::ffi::os_str"],[11697,"alloc::ffi::c_str"],[11698,"polars_arrow::array::struct_::mutable"],[11699,"polars_arrow::array::growable::structure"],[11700,"polars_arrow::legacy::array::default_arrays"],[11701,"polars_arrow::buffer::immutable"],[11702,"polars_arrow::array::list"],[11703,"polars_core::named_from"],[11704,"polars_ops::frame::join"],[11705,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11706,"polars_time::chunkedarray::time"],[11707,"core::num::nonzero"],[11708,"parquet_format_safe::parquet_format"],[11709,"polars_arrow::array::struct_::iterator"],[11710,"polars_ops::frame::join::asof::groups"],[11711,"polars_ops::chunked_array::list::namespace"],[11712,"polars_plan::dsl::name"],[11713,"polars_core::utils::supertype"],[11714,"polars_io::options"],[11715,"polars_core::chunked_array::ops::aggregate"],[11716,"polars_core::chunked_array::ops::aggregate::quantile"],[11717,"polars_arrow::legacy::index"],[11718,"polars_ops::chunked_array::strings::split"],[11719,"core::pin"],[11720,"core::io::borrowed_buf"],[11721,"parquet_format_safe::thrift::varint::decode"],[11722,"polars_time::chunkedarray::rolling_window::dispatch"],[11723,"polars_time::round"],[11724,"polars_parquet::parquet::metadata::schema_descriptor"],[11725,"polars_core::chunked_array::ops::aggregate::var"],[11726,"polars_plan::dsl::string"],[11727,"polars_ops::series::ops::to_dummies"],[11728,"polars_time::truncate"],[11729,"polars_io::csv::read::schema_inference"],[11730,"polars_time::upsample"],[11731,"polars_core::hashing::vector_hasher"],[11732,"alloc::collections::btree::map"],[11733,"polars_ops::chunked_array::array::namespace"],[11734,"polars_ops::chunked_array::array"],[11735,"polars_io::csv::read::buffer"],[11736,"polars_time::chunkedarray::string::patterns"],[11737,"polars_time::chunkedarray::string::infer"],[11738,"polars_arrow::legacy::array::fixed_size_list"],[11739,"polars_plan::dsl::function_expr::rolling"],[11740,"polars_plan::dsl::function_expr::rolling_by"],[11741,"polars_arrow::legacy::array::null"],[11742,"polars_arrow::bitmap::mutable"],[11743,"polars_arrow::array::utf8"],[11744,"polars_core::series::iterator"],[11745,"alloc::rc"],[11746,"polars_core"],[11747,"polars_core::chunked_array::struct_"],[11748,"polars_core::chunked_array::iterator::par"],[11749,"polars_core::chunked_array::object::extension"],[11750,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11751,"polars_core::chunked_array::ops::gather"],[11752,"polars_core::chunked_array::ops::sort"],[11753,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11754,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11755,"polars_core::chunked_array::temporal"],[11756,"polars_core::chunked_array::temporal::conversion"],[11757,"polars_core::chunked_array::temporal::time"],[11758,"polars_core::chunked_array::logical::date"],[11759,"polars_core::chunked_array::logical::datetime"],[11760,"polars_core::chunked_array::logical::decimal"],[11761,"polars_core::chunked_array::logical::duration"],[11762,"polars_core::datatypes::aliases"],[11763,"polars_utils::aliases"],[11764,"polars_core::chunked_array::logical::time"],[11765,"polars_error::constants"],[11766,"polars_core::functions"],[11767,"polars_core::frame::horizontal"],[11768,"polars_io::utils::other"],[11769,"polars_io::parquet::metadata"],[11770,"polars_arrow::legacy::prelude"],[11771,"polars_arrow::legacy::array"],[11772,"polars_io::path_utils"],[11773,"polars_ops::series::ops::rolling"],[11774,"polars_parquet::parquet::write"],[11775,"polars_io::utils"],[11776,"polars_ops::frame::join::general"],[11777,"polars_ops::series::ops::abs"],[11778,"polars_plan::dsl::functions::selectors"],[11779,"polars_plan::dsl::functions::horizontal"],[11780,"polars_plan::dsl::functions::arity"],[11781,"polars_plan::dsl"],[11782,"polars_plan::dsl::functions::range"],[11783,"polars_plan::dsl::functions::index"],[11784,"polars_ops::chunked_array"],[11785,"polars_plan::dsl::functions::coerce"],[11786,"polars_plan::dsl::functions::syntactic_sugar"],[11787,"polars_time::base_utc_offset"],[11788,"polars_io::csv::read"],[11789,"polars_time"],[11790,"polars_ops::series::ops::clip"],[11791,"polars_io"],[11792,"polars_ops::series::ops::horizontal"],[11793,"polars_lazy::dsl::functions"],[11794,"polars_plan::dsl::functions::concat"],[11795,"polars_ops::series::ops::index"],[11796,"polars_io::csv::read::parser"],[11797,"polars_ops::series::ops::cum_agg"],[11798,"polars_ops::series::ops::diff"],[11799,"polars_time::dst_offset"],[11800,"polars_ops::series::ops::floor_divide"],[11801,"polars_ops::chunked_array::strings::concat"],[11802,"polars_ops::series::ops::duration"],[11803,"polars_ops::chunked_array::datetime::replace_time_zone"],[11804,"polars_time::date_range"],[11805,"polars_ops::series::ops::interpolation"],[11806,"polars_ops::series::ops::interpolation::interpolate_by"],[11807,"polars_io::utils::compression"],[11808,"polars_ops::series::ops::is_first_distinct"],[11809,"polars_ops::series::ops::is_in"],[11810,"polars_ops::series::ops::is_last_distinct"],[11811,"polars_io::parquet::read::utils"],[11812,"polars_ops::series::ops::negate"],[11813,"polars_ops::series::ops::not"],[11814,"polars_ops::series::ops::int_range"],[11815,"polars_plan::dsl::functions::repeat"],[11816,"polars_ops::chunked_array::repeat_by"],[11817,"polars_ops::series::ops::replace"],[11818,"polars_ops::chunked_array::strings::strip"],[11819,"polars_io::partition"],[11820,"polars_time::chunkedarray"],[11821,"polars_io::cloud"],[11822,"polars_io::utils::compression::magic"],[11823,"polars_ops::chunked_array::mode"],[11824,"polars_ops::chunked_array::nan_propagating_aggregate"],[11825,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}````````{{{f{c}}h}b{}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{l{Aj}}{l{Aj}}}}{{{l{Al}}{l{Al}}}}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{l{c}}e}{}An{B`Bb}}{{{f{{l{c}}}}e}{}An{B`Bb}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}{{{l{Bd}}{l{Bd}}}}{{{f{{l{Bd}}}}{f{Bf}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}}{{{f{{l{Aj}}}}{f{{Bj{Bh}}}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{{Bn{c}}}}}}{f{C`}}}AbCb}{{{f{{l{j}}}}{f{C`}}}Ab}{{{f{{l{Cd}}}}{f{C`}}}Ab}{{{f{{l{Ah}}}}{f{C`}}}Ab}{{{f{{l{Aj}}}}{f{C`}}}Ab}{{{f{{l{Bd}}}}{f{C`}}}Ab}{{{f{{l{Al}}}}{f{C`}}}Ab}{{{f{{l{c}}}}{f{C`}}}AbAn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{Cf{d}}}}{{{f{{l{Cd}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Cd}}}}{f{Bf}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Ah}}}}{f{Bf}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}54{{{f{Db{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dh{}{{Dd{Df}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dj{{Cf{Ab}}}{{Ad{{Cf{Ab}}}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}An{{Dj{Cf}{{Ad{Cf}}}}Dl}}{{{f{{l{Al}}}}c}{{l{Al}}}{{Dj{{Cf{d}}}{{Ad{{Cf{d}}}}}}Dl}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dj{{Cf{{f{Bf}}}}}{{Ad{{Cf{{Dn{Bf}}}}}}}}Dl}}{{{f{{l{{Bn{c}}}}}}e}{{l{{Bn{c}}}}}Cb{{Dj{{Cf{{f{c}}}}}{{Ad{{Cf{c}}}}}}Dl}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dj{{Cf{{f{{Bj{Bh}}}}}}}{{Ad{{Cf{{Dn{{Bj{Bh}}}}}}}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{E`}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Cf{E`}}}{{Ad{{Cf{c}}}}}}Dl}Dh}{{{f{{l{Cd}}}}e}{{l{g}}}{}{{Af{{Cf{E`}}}{{Ad{{Cf{c}}}}}}Dl}Dh}{{{f{{l{Cd}}}}c}{{l{Cd}}}{{Af{E`}{{Ad{Ab}}}}}}{{{f{{l{Eb}}}}c}Ab{{Dj{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ed}}}}c}Ab{{Dj{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}An{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{c}}}}e}{{l{Bd}}}Dh{{Af{{f{DbEf}}}}}}{{{f{{l{c}}}}{f{Dj}}}{{l{c}}}An}{{{f{{l{Bd}}}}{f{Dj}}}{{l{Bd}}}}{{{f{{l{Al}}}}{f{Dj}}}{{l{Al}}}}{{{f{{l{Aj}}}}{f{Dj}}}{{l{Aj}}}}{{{f{{l{Bd}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{Aj}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{Al}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{c}}}}{f{Dj}}}{{l{e}}}AnDh}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Af{{f{{Bj{Bh}}}}}{{Ad{{f{{Bj{Bh}}}}}}}}}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Af{{f{Bf}}}{{Ad{{f{Bf}}}}}}}}{{{f{Db{l{c}}}}e}bAn{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{c}}}}Ehg}{{l{i}}}Dh{}{{Af{}{{Ad{e}}}}}Dh}{{{f{{l{Cd}}}}{f{Dj}}}{{A`{{l{Cd}}n}}}}{{{f{{l{Ah}}}}{f{Dj}}}{{A`{{l{Ah}}n}}}}{{{f{{l{Aj}}}}e{f{Db{Bj{c}}}}}b{}{{Dj{{Cf{{f{{Bj{Bh}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bd}}}}e{f{Db{Bj{c}}}}}b{}{{Dj{{Cf{{f{Bf}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}e{f{Db{Bj{c}}}}}b{}{{Dj{{Cf{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{c}}}}g{f{Db{Bj{e}}}}}bAn{}{{Dj{Cf{f{e}}}{{Ad{e}}}}}}{{{f{{l{{Bn{c}}}}}}g{f{Db{Bj{e}}}}}bCb{}{{Dj{{Cf{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{Al}}}}e{f{Db{Bj{c}}}}}b{}{{Dj{{Cf{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{{Bn{c}}}}}}e}{{l{{Bn{c}}}}}Cb{{Dj{{f{c}}}{{Ad{c}}}}Dl}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dj{{f{{Bj{Bh}}}}}{{Ad{{Dn{{Bj{Bh}}}}}}}}Dl}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dj{{f{Bf}}}{{Ad{{Dn{Bf}}}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dj{Ab}{{Ad{Ab}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}An{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{Al}}}}c}{{l{Al}}}{{Dj{d}{{Ad{d}}}}Dl}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Af{Ej{f{Bf}}}{{Ad{Ej}}}}Dl}}{{{f{{l{El}}}}En}{{l{F`}}}}{{{f{{l{Bd}}}}En}{{l{F`}}}}{{{f{{l{Aj}}}}En}{{l{F`}}}}{{{f{{l{c}}}}En}{{l{F`}}}An}{{{f{{l{j}}}}En}{{l{F`}}}}{{{f{{l{Al}}}}En}{{l{F`}}}}{{{f{{l{Bd}}}}{f{{Bj{Ab}}}}{f{Fb}}}{{A`{{l{F`}}n}}}}{{{f{{l{c}}}}{f{{Bj{Ab}}}}{f{Fb}}}{{A`{{l{F`}}n}}}An}{{{f{{l{Al}}}}{f{{Bj{Ab}}}}{f{Fb}}}{{A`{{l{F`}}n}}}}{{{f{{l{Aj}}}}{f{{Bj{Ab}}}}{f{Fb}}}{{A`{{l{F`}}n}}}}{{{f{{l{El}}}}{f{{Bj{Ab}}}}{f{Fb}}}{{A`{{l{F`}}n}}}}{{{f{{l{{Bn{c}}}}}}}{{A`{{l{F`}}n}}}Cb}{{{f{{l{c}}}}}{{A`{{l{F`}}n}}}An}{{{f{{l{Bd}}}}}{{A`{{l{F`}}n}}}}{{{f{{l{Aj}}}}}{{A`{{l{F`}}n}}}}{{{f{{l{Al}}}}}{{A`{{l{F`}}n}}}}`{{{f{{l{Cd}}}}}{{f{{l{Cd}}}}}}{{{f{{l{Bd}}}}}{{l{Aj}}}}{{{f{{l{Aj}}}}}{{f{{l{Aj}}}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dh}{{{f{{l{c}}}}}{{f{Eh}}}Dh}{{{f{{l{Bd}}}}}{{f{{l{Bd}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DhDh{{Af{{Cf{E`}}CfCf}{{Ad{{Cf{Ab}}}}}}}}{{{l{Al}}{l{Al}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fd}210102{{{f{c}}}{{f{e}}}{}{}}0{{{f{Dbc}}}{{f{Dbe}}}{}{}}0``{{{f{{l{j}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}An{{Dj{}{{Ad{}}}}Dl}An}{{{f{{l{Aj}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Eh}}}{{A`{Abn}}}An}{{{f{{l{Cd}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{Al}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{El}}}}{f{Eh}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Eh}}Ff}{{A`{Abn}}}An}{{{f{{l{Bd}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{Cd}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{j}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{Aj}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{El}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{Al}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Fh}{{{f{{l{c}}}}e}{{A`{Abn}}}FhBb}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{Fj}}}}}}}Dh}{{{f{{l{c}}}}}{{G`{{Fl{{Cl{Cj}}}}{Fn{{f{{Cl{Cj}}}}}{{Ad{Fj}}}}}}}Dh}{{{f{{l{c}}}}}{{f{{Gb{{Cl{Cj}}}}}}}Dh}{{{f{Db{l{c}}}}}{{f{Db{Gb{{Cl{Cj}}}}}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Dh}0{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Db{l{c}}}}}b{DhAn}}`{{{f{{l{c}}}}}{{A`{{f{Bj}}n}}}An}{{{f{Db{l{c}}}}{f{{l{c}}}}Gd}bDh}{{{f{Db{l{c}}}}{f{{l{e}}}}Gd}bDhDh}{{{f{{l{c}}}}}{{`{Gf}}}An}{{}{{l{c}}}Dh}{Fj{{f{c}}}{}}0{Fj{{f{Dbc}}}{}}0{{{f{{l{c}}}}e}{}An{B`Bb}}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{l{c}}e}{}An{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{Db{l{c}}}}}bDh}{Fjb}0{{{f{{l{c}}}}}{{l{c}}}Dh}{{{f{{l{c}}}}}{{f{Eh}}}Dh}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Al}}}An}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Al}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Al}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Al}}}}{{{f{{l{c}}}}e}{{l{Al}}}AnBb}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Al}}}}{{{f{{l{Aj}}}}{f{{Bj{Bh}}}}}{{l{Al}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{Cd}}}}{f{{l{Cd}}}}}{{l{Al}}}}{{{f{{l{Bd}}}}{f{Bf}}}{{l{Al}}}}9487620135{{{f{{l{Cd}}}}}{{A`{{Gl{Ab{Gj{Gh}}}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Gl{Ab{Gj{Gh}}}}n}}}}{{{f{Db{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}An}{{{f{{l{j}}}}{f{Bf}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gb{Ab}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}An}{{{f{{l{Aj}}}}{f{{Bj{Bh}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{Al}}}}d}{{A`{{l{Al}}n}}}}{{{f{{l{{Bn{c}}}}}}{f{{l{Al}}}}}{{A`{{l{{Bn{c}}}}n}}}Cb}{{{f{{l{c}}}}{f{{l{Al}}}}}{{A`{{l{c}}n}}}{{Dh{}{{Gn{Df}}{H`{Df}}}}}}{{{f{{l{Aj}}}}{f{{l{Al}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{Bd}}}}{f{{l{Al}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}}{{Cf{Fj}}}Dh}`{{{f{{l{Bd}}}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{l{Cd}}}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{l{Al}}}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{l{c}}}}{f{DbHb}}}{{A`{bHd}}}An}{{{f{{l{Aj}}}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{l{{Bn{c}}}}}}{f{DbHb}}}{{A`{bHd}}}Cb}{{{f{{l{Ah}}}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{l{c}}}}e}bDh{{Af{Cf}}}}{{{f{{l{Ah}}}}c}b{{Af{{Cf{E`}}}}}}{{{f{{l{Cd}}}}c}b{{Af{{Cf{E`}}}}}}{cc{}}{c{{l{e}}}Cj{{Dh{}{{Hf{c}}}}}}1{{{f{Bf}}c}{{l{e}}}Hh{{Dh{}{{Hf{}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}{{Dh{}{{Hf{}}}}Dh}Hh}{{{f{Bf}}{Gb{{Cl{Cj}}}}}{{l{c}}}Dh}{{{f{Bf}}{Gb{{Cl{Cj}}}}Eh}{{l{c}}}Dh}{e{{l{{Bn{c}}}}}Cb{{Hh{}{{Ch{{Cf{c}}}}}}}}{c{{l{e}}}{{Hh{}{{Ch{{Gl{Gb{Cf{Hj}}}}}}}}}An}{c{{l{Ah}}}{{Hh{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}{c{{l{Ah}}}{{Hh{}{{Ch{{Cf{Ab}}}}}}}}{e{{l{Ah}}}{{Hl{Ab}}}{{Hh{}{{Ch{c}}}}}}{e{{l{Aj}}}{{Hn{{Bj{Bh}}}}}{{Hh{}{{Ch{c}}}}}}{e{{l{Aj}}}{{I`{{Bj{Bh}}}}}{{Hh{}{{Ch{{Cf{c}}}}}}}}{e{{l{Bd}}}{{Hn{Bf}}}{{Hh{}{{Ch{c}}}}}}{e{{l{Bd}}}{{I`{Bf}}}{{Hh{}{{Ch{{Cf{c}}}}}}}}{c{{l{Al}}}{{Hh{}{{Ch{d}}}}}}{c{{l{Al}}}{{Hh{}{{Ch{{Cf{d}}}}}}}}{c{{l{e}}}{{Hh{}{{Ch{Cf}}}}}An}{{{f{Bf}}e}{{l{{Bn{c}}}}}Cb{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bf}}e}{{l{Aj}}}{{I`{{Bj{Bh}}}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bf}}c}{{l{e}}}{{Cn{}{{Ch{Cf}}}}}An}{{{f{Bf}}c}{{l{Al}}}{{Cn{}{{Ch{{Cf{d}}}}}}}}{{{f{Bf}}e}{{l{Bd}}}{{I`{Bf}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}76=<95{e{{l{{Bn{c}}}}}Cb{{Hh{}{{Ch{{Cf{c}}}}}}}}{e{{l{El}}}{{I`{{Bj{Bh}}}}}{{Hh{}{{Ch{{Cf{c}}}}}}}}:={e{{l{El}}}{{Hn{{Bj{Bh}}}}}{{Hh{}{{Ch{c}}}}}}={{{f{Bf}}c}{{l{e}}}{{Cn{}{{Ch{}}}}}An}{{{f{Bf}}c}{{l{Al}}}{{Cn{}{{Ch{d}}}}}}{{{f{Bf}}e}{{l{{Bn{c}}}}}Cb{{Cn{}{{Ch{c}}}}}}{{{f{Bf}}e}{{l{Aj}}}{{I`{{Bj{Bh}}}}}{{Cn{}{{Ch{c}}}}}}{{{f{Bf}}e}{{l{Bd}}}{{I`{Bf}}}{{Cn{}{{Ch{c}}}}}}`{e{{l{Bd}}}{{Hn{Bf}}IbIdIf}{{Ih{}{{Ch{c}}}}}}{c{{l{e}}}{{Ih{}{{Ch{Cf}}}}}An}{c{{l{Al}}}{{Ih{}{{Ch{d}}}}}}{e{{l{Aj}}}{{Hn{{Bj{Bh}}}}IbIdIf}{{Ih{}{{Ch{c}}}}}}{e{{l{Bd}}}{{I`{Bf}}IbId}{{Ih{}{{Ch{{Cf{c}}}}}}}}{c{{l{Al}}}{{Ih{}{{Ch{{Cf{d}}}}}}}}{e{{l{Aj}}}{{I`{{Bj{Bh}}}}IbId}{{Ih{}{{Ch{{Cf{c}}}}}}}}{c{{l{Ah}}}{{Ih{}{{Ch{{Cf{Ab}}}}}}}}{{c{f{Bf}}Eh}{{l{Ah}}}{{Ih{}{{Ch{{Cf{Ab}}}}}}}}{{{f{Bf}}{f{{Bj{Ab}}}}}{{A`{{l{j}}n}}}}{{{f{Bf}}{f{{Bj{c}}}}}{{l{Bd}}}{{I`{Bf}}}}{{{f{Bf}}{f{Bj}}}{{l{c}}}An}{{{f{Bf}}{f{{Bj{c}}}}}{{l{Aj}}}{{I`{{Bj{Bh}}}}}}{{{f{Bf}}{f{{Bj{d}}}}}{{l{Al}}}}{{{f{Bf}}{f{{Bj{c}}}}}{{l{{Bn{c}}}}}Cb}{{{f{Bf}}{f{{Bj{Cf}}}}}{{l{c}}}An}{{{f{Bf}}{f{{Bj{{Cf{c}}}}}}}{{l{Aj}}}{{I`{{Bj{Bh}}}}}}{{{f{Bf}}{f{{Bj{{Cf{c}}}}}}}{{l{Bd}}}{{I`{Bf}}}}{{{f{Bf}}{f{{Bj{{Cf{d}}}}}}}{{l{Al}}}}{{{f{Bf}}{f{{Bj{{Cf{c}}}}}}}{{l{{Bn{c}}}}}Cb}{c{{l{e}}}{{Ij{}{{Ch{Cf}}}}}An}{c{{l{Al}}}{{Ij{}{{Ch{{Cf{d}}}}}}}}{{{f{Bf}}Gb}{{l{c}}}An}{{{f{Bf}}Gb{Cf{Hj}}}{{l{c}}}An}{{{f{Bf}}Fj}{{l{c}}}An}{{{f{Bf}}{f{Ab}}Fj}{{l{Ah}}}}{{{f{Bf}}cFj}{{l{{Bn{c}}}}}Cb}{{{f{Bf}}{f{Ab}}Fj}{{l{Cd}}}}{{{f{Bf}}{f{Bf}}Fj}{{l{Bd}}}}{{{f{Bf}}{f{{Bj{Bh}}}}Fj}{{l{Aj}}}}{{{f{Bf}}dFj}{{l{Al}}}}{{{f{Bf}}{f{{Bj{Bh}}}}Fj}{{l{El}}}}{{{f{Bf}}Fj}{{l{Cd}}}}{{{f{Bf}}Fj}{{l{El}}}}{{{f{Bf}}Fj}{{l{Al}}}}{{{f{Bf}}Fj}{{l{Bd}}}}{{{f{Bf}}Fj}{{l{Ah}}}}<{{{f{Bf}}Fj}{{l{Aj}}}}{{{f{Bf}}Fj}{{l{j}}}}{{{f{Bf}}Fj}{{l{{Bn{c}}}}}Cb}{{{f{{l{c}}}}Fj}{{l{c}}}Dh}{{{f{Bf}}Fj{f{Eh}}Fj}{{l{Cd}}}}{{{f{Bf}}Fj{f{Eh}}}{{l{Ah}}}}{{{f{{l{c}}}}Fj}CfDh}{{{f{{l{Bd}}}}Fj}{{A`{Iln}}}}{{{f{{l{j}}}}Fj}{{A`{Iln}}}}{{{f{{l{Al}}}}Fj}{{A`{Iln}}}}{{{f{{l{{Bn{c}}}}}}Fj}{{A`{Iln}}}Cb}{{{f{{l{c}}}}Fj}{{A`{Iln}}}An}{{{f{{l{Cd}}}}Fj}{{A`{Iln}}}}{{{f{{l{Ah}}}}Fj}{{A`{Iln}}}}{{{f{{l{El}}}}Fj}{{A`{Iln}}}}{{{f{{l{Aj}}}}Fj}{{A`{Iln}}}}{{{f{{l{j}}}}Fj}Il}{{{f{{l{Aj}}}}Fj}Il}{{{f{{l{El}}}}Fj}Il}{{{f{{l{Ah}}}}Fj}Il}{{{f{{l{c}}}}Fj}IlAn}{{{f{{l{Cd}}}}Fj}Il}{{{f{{l{Al}}}}Fj}Il}{{{f{{l{Bd}}}}Fj}Il}{{{f{{l{{Bn{c}}}}}}Fj}IlCb}{{{f{{l{Cd}}}}Fj}{{Cf{Ab}}}}{{{f{{l{Ah}}}}Fj}{{Cf{Ab}}}}{{{f{{l{c}}}}}{{Cf{In}}}Dh}{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}}J`Dh}{{{f{{l{Cd}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{c}}}}}CfDh}0{{{f{{l{{Bn{c}}}}}}Fj}{{Cf{{f{Jb}}}}}Cb}0{{{f{{l{j}}}}En}{{A`{{l{El}}n}}}}{{{f{{l{j}}}}En}{{A`{{Jd{Gh}}n}}}}{{{f{{l{c}}}}Fj}CfDh}{{{f{{l{El}}}}}Fj}{{{f{{l{Cd}}}}}Fj}{{{f{{l{Bd}}}}}Fj}{{{f{{l{Ah}}}}}Fj}{{{f{{l{El}}}}dd}{{A`{C`n}}}}{{{f{{l{Bd}}}}dd}{{A`{C`n}}}}{{{f{{l{Aj}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}dd}{{A`{C`n}}}An}{{{f{{l{Ah}}}}dd}{{A`{C`n}}}}{{{f{{l{Cd}}}}dd}{{A`{C`n}}}}{{{f{{l{{Bn{c}}}}}}dd}{{A`{C`n}}}Cb}{{{f{{l{Al}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}FjdFj}C`Fd}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Al}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Al}}}}{{{f{{l{Bd}}}}{f{Bf}}}{{l{Al}}}}{{{f{{l{Cd}}}}{f{{l{Cd}}}}}{{l{Al}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Al}}}An}{{{f{{l{Aj}}}}{f{{Bj{Bh}}}}}{{l{Al}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{c}}}}e}{{l{Al}}}AnBb}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Al}}}}460785213{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}{Cf{Fj}}}{{l{c}}}Dh}{{}Fj}0{{FjJf{Cf{Jh}}}{{l{c}}}An}{{{f{{l{Ah}}}}}{{f{Eh}}}}{{{f{{l{Cd}}}}}{{f{Eh}}}}{{{f{{l{c}}}}}{{Jl{{Jj{c}}}}}Dh}{ce{}{}}0{{{l{Jn}}}{{Kb{K`Jn}}}}{{{l{Kd}}Kf{Cf{Ef}}}{{Kb{KhKd}}}}{{{l{Kj}}{Cf{Fj}}Fj}{{A`{{Kb{KlKj}}n}}}}{{{l{Kj}}{Cf{Fj}}Fj}{{Kb{KlKj}}}}{{{l{Kd}}Kf}{{Kb{KnKd}}}}{{{f{{l{{Bn{c}}}}}}}{}Cb}{{{f{{l{Cd}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{El}}}}}}{{{f{{l{Aj}}}}}}{{{f{{l{c}}}}}{}An}{{{f{{l{Al}}}}}}{{{f{{l{Bd}}}}}}{{{f{{l{c}}}}}{{`{IbIdL`GfIj}}}An}{{{l{Kj}}}Ab}{{{l{c}}}AbDh}{{{l{Kd}}}{{Kb{LbKd}}}}{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}}{{l{Al}}}Ld}000{{{f{{l{c}}}}}{{l{Al}}}Dh}02{{{f{{l{c}}}}}LfDh}{{{f{{l{c}}}}}{{`{Lh}}}Dh}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{{l{c}}}}}}}}}Dh}{{{f{{l{Ah}}}}}{{`{{Cn{}{{Ch{Gh}}}}}}}}{{{f{{l{c}}}}}{{G`{{Fl{{Cl{Cj}}}}{Fn{{f{{Cl{Cj}}}}}{{Ad{{Cf{{f{Hj}}}}}}}}}}}Dh}`{{{f{{l{c}}}}}CfDh}{{{f{{l{c}}}}}{{Cf{Fj}}}Dh}{{{f{{l{c}}}}}{{Lj{c}}}Dh}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}}{}An}{{{l{c}}}{}An}10{{{f{{l{c}}}}}FjDh}0{{{f{{l{c}}}}e}{{l{c}}}An{B`Ll}}00{{{f{{l{c}}}}Fj}{{l{c}}}Dh}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Al}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Al}}}}{{{f{{l{Cd}}}}{f{{l{Cd}}}}}{{l{Al}}}}{{{f{{l{c}}}}e}{{l{Al}}}AnBb}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Al}}}An}{{{f{{l{Bd}}}}{f{Bf}}}{{l{Al}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{Aj}}}}{f{{Bj{Bh}}}}}{{l{Al}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Al}}}}467012538{{{f{{l{c}}}}}CfAn}{{{f{{l{Al}}}}}{{Cf{d}}}}{{{f{{l{Aj}}}}}Ln}{{{f{{l{c}}}}}LnAn}{{{f{{l{Al}}}}}Ln}{{{f{{l{Bd}}}}}Ln}{{{f{{l{c}}}}}{{Cf{M`}}}An}{{{f{{l{Al}}}}}{{Cf{M`}}}}{{{f{{l{Eb}}}}}{{Cf{M`}}}}{{{f{{l{Ed}}}}}{{Cf{Jf}}}}{{{f{{l{c}}}}}{{Cf{M`}}}Fd}{{{f{{l{Ed}}}}}Ln}{{{f{{l{c}}}}}LnFd}{{{f{{l{Eb}}}}}Ln}{{{f{Db{l{c}}}}{Jj{c}}}bDh}`{{{f{{l{c}}}}}{{Mb{c}}}Dh}{{{f{{l{c}}}}}{{f{{Mf{{Md{c}}}}}}}Dh}{{{f{{l{c}}}}}{{Cf{{Mj{Mh}}}}}Dh}{{{f{Db{l{c}}}}}{{f{Db{Mf{{Md{c}}}}}}}Dh}{{{f{{l{c}}}}}{{Mf{{Md{c}}}}}Dh}{{{f{{l{Al}}}}}{{Cf{d}}}}{{{f{{l{c}}}}}CfAn}{{{f{{l{c}}}}}{{Cf{Gl}}}An}{{{f{{l{Aj}}}}}Ln}{{{f{{l{Bd}}}}}Ln}{{{f{{l{c}}}}}LnAn}{{{f{{l{Al}}}}}Ln}{{{f{Bf}}{f{{Bj{Bh}}}}FjFj}{{l{Al}}}}{{{f{Bf}}{f{Bj}}}{{l{c}}}An}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{l{c}}e}{}An{B`Bb}}{{{f{{l{c}}}}e}{}An{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{c}}}}}FjDh}{{{f{{l{Aj}}}}}{{A`{Fjn}}}}{{{f{{l{Bd}}}}}{{A`{Fjn}}}}{{{f{{l{c}}}}}{{A`{Fjn}}}An}{{{f{{l{c}}}}}{{f{Bf}}}Dh}{{{f{Bf}}c}{{l{F`}}}{{I`{{Bj{{Cf{In}}}}}}}}{{{f{Bf}}c}{{l{Jn}}}{{I`{{Bj{{Cf{Ml}}}}}}}}{{{f{Bf}}c}{{l{Bd}}}{{I`{{Bj{{Cf{{Dn{Bf}}}}}}}}}}{{{f{Bf}}c}{{l{Bd}}}{{I`{{Bj{{Dn{Bf}}}}}}}}{{{f{Bf}}c}{{l{Bd}}}{{I`{{Bj{{Cf{{f{Bf}}}}}}}}}}{{{f{Bf}}c}{{l{Bd}}}{{I`{{Bj{{f{Bf}}}}}}}}{{{f{Bf}}{Mn{In}}}{{l{F`}}}}{{{f{Bf}}c}{{l{N`}}}{{I`{{Bj{{Cf{Nb}}}}}}}}{{{f{Bf}}c}{{l{Aj}}}{{I`{{Bj{{Cf{{Dn{{Bj{Bh}}}}}}}}}}}}{{{f{Bf}}{Mn{Jh}}}{{l{Nd}}}}{{{f{Bf}}c}{{l{Nf}}}{{I`{{Bj{{Cf{Nh}}}}}}}}{{{f{Bf}}{f{{Bj{c}}}}}{{l{{Bn{c}}}}}Cb}{{{f{Bf}}c}{{l{Nj}}}{{I`{{Bj{{Cf{Nl}}}}}}}}{{{f{Bf}}c}{{l{Bd}}}{{I`{{Bj{{Cf{Ef}}}}}}}}{{{f{Bf}}c}{{l{Eb}}}{{I`{{Bj{M`}}}}}}{{{f{Bf}}c}{{l{Aj}}}{{I`{{Bj{{f{{Bj{Bh}}}}}}}}}}{{{f{Bf}}{Mn{Ml}}}{{l{Jn}}}}{{{f{Bf}}c}{{l{Ed}}}{{I`{{Bj{Jf}}}}}}{{{f{Bf}}c}{{l{Kj}}}{{I`{{Bj{Nn}}}}}}{{{f{Bf}}c}{{l{Aj}}}{{I`{{Bj{{Cf{{Gb{Bh}}}}}}}}}}{{{f{Bf}}{Mn{Gh}}}{{l{Kd}}}}{{{f{Bf}}c}{{l{Nd}}}{{I`{{Bj{{Cf{Jh}}}}}}}}{{{f{Bf}}c}{{l{O`}}}{{I`{{Bj{{Cf{Bh}}}}}}}}{{{f{Bf}}c}{{l{Aj}}}{{I`{{Bj{{Dn{{Bj{Bh}}}}}}}}}}{{{f{Bf}}c}{{l{Eb}}}{{I`{{Bj{{Cf{M`}}}}}}}}{{{f{Bf}}c}{{l{Aj}}}{{I`{{Bj{{Cf{{f{{Bj{Bh}}}}}}}}}}}}{{{f{Bf}}e}{{l{{Bn{c}}}}}Cb{{I`{{Bj{{Cf{c}}}}}}}}{{{f{Bf}}c}{{l{Kd}}}{{I`{{Bj{Gh}}}}}}{{{f{Bf}}c}{{l{Ed}}}{{I`{{Bj{{Cf{Jf}}}}}}}}{{{f{Bf}}c}{{l{Kj}}}{{I`{{Bj{{Cf{Nn}}}}}}}}{{{f{Bf}}c}{{l{Jn}}}{{I`{{Bj{Ml}}}}}}{{{f{Bf}}c}{{l{Nj}}}{{I`{{Bj{Nl}}}}}}{{{f{Bf}}c}{{l{N`}}}{{I`{{Bj{Nb}}}}}}{{{f{Bf}}c}{{l{Nd}}}{{I`{{Bj{Jh}}}}}}{{{f{Bf}}c}{{l{F`}}}{{I`{{Bj{In}}}}}}{{{f{Bf}}c}{{l{Nf}}}{{I`{{Bj{Nh}}}}}}{{{f{Bf}}c}{{l{O`}}}{{I`{{Bj{Bh}}}}}}{{{f{Bf}}c}{{l{Al}}}{{I`{{Bj{d}}}}}}{{{f{Bf}}c}{{l{Kd}}}{{I`{{Bj{{Cf{Gh}}}}}}}}{{{f{Bf}}c}{{l{Aj}}}{{I`{{Bj{{Gb{Bh}}}}}}}}{{{f{Bf}}c}{{l{Bd}}}{{I`{{Bj{Ef}}}}}}{{{f{Bf}}c}{{l{Al}}}{{I`{{Bj{{Cf{d}}}}}}}}{{{f{Bf}}}{{l{{Bn{c}}}}}Cb}{{{f{{l{{Bn{c}}}}}}FjFj}{{l{{Bn{c}}}}}Cb}{{{f{{l{c}}}}FjFj}{{l{c}}}An}{{{f{{l{Cd}}}}FjFj}{{l{Cd}}}}{{{f{{l{j}}}}FjFj}{{l{j}}}}{{{f{{l{Ah}}}}FjFj}{{l{Ah}}}}{{{f{{l{El}}}}FjFj}{{l{El}}}}{{{f{{l{Aj}}}}FjFj}{{l{Aj}}}}{{{f{{l{Bd}}}}FjFj}{{l{Bd}}}}{{{f{{l{Al}}}}FjFj}{{l{Al}}}}{{{f{Bf}}{Gb{c}}}{{l{{Bn{c}}}}}Cb}{{{f{Bf}}{Gb{c}}Hj}{{l{{Bn{c}}}}}Cb}{{{f{Bf}}Gb}{{l{c}}}An}{{{Mf{Ob}}{Gb{{Cl{Cj}}}}InIn}{{l{c}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Ld}{{{f{{l{Al}}}}}}{{{l{Al}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Al}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Al}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Al}}}}{{{f{{l{c}}}}e}{{l{Al}}}AnBb}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Al}}}}{{{f{{l{Aj}}}}{f{{Bj{Bh}}}}}{{l{Al}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{Bd}}}}{f{Bf}}}{{l{Al}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Al}}}An}{{{f{{l{Cd}}}}{f{{l{Cd}}}}}{{l{Al}}}}9124{{{f{{l{Cd}}}}{f{{l{Cd}}}}}}98674{{{f{{l{c}}}}}FjDh}`{{{f{{l{Cd}}}}}{{A`{{Gj{Gh}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Gj{Gh}}n}}}}`{{{f{{l{Bd}}}}}{{`{{Od{}{{Ch{{Cf{{f{Bf}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{`{{Od{}{{Ch{{Cf{Ab}}}}}}}}}}{{{f{{l{Bd}}}}}{{`{Of}}}}{{{f{Db{l{Ah}}}}}{{`{Of}}}}{{{f{{l{c}}}}}LnAn}{{{f{Db{l{c}}}}}bDh}{{{f{{l{c}}}}M`Oh}{{A`{{Cf{M`}}n}}}Fd}{{{f{{l{Eb}}}}M`Oh}{{A`{{Cf{M`}}n}}}}{{{f{{l{Ed}}}}M`Oh}{{A`{{Cf{Jf}}n}}}}{{{f{{l{Eb}}}}M`Oh}{{A`{Lnn}}}}{{{f{{l{Ed}}}}M`Oh}{{A`{Lnn}}}}{{{f{{l{c}}}}M`Oh}{{A`{Lnn}}}Fd}{{{f{Bf}}FjM`}{{A`{{l{Al}}n}}}}{{{f{Bf}}FjM`M`}{{A`{{l{c}}n}}}An}{{{f{Bf}}Fj}{{l{c}}}An}{{{f{Bf}}FjM`M`}{{l{c}}}An}{{{f{{l{c}}}}}{{l{c}}}Dh}{{{f{{l{c}}}}}{{f{Ob}}}Dh}{{{f{{l{Nj}}}}}Ab}{{{f{{l{N`}}}}}Ab}{{{f{{l{Ed}}}}}Ab}{{{f{{l{Kd}}}}}Ab}{{{f{{l{Eb}}}}}Ab}{{{f{{l{Nd}}}}}Ab}{{{f{{l{Jn}}}}}Ab}{{{f{{l{O`}}}}}Ab}{{{f{{l{Nf}}}}}Ab}{{{f{{l{F`}}}}}Ab}{{{f{{l{Ah}}}}}Ab}327:6194580{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{l{c}}e}{}An{B`Bb}}{{{f{{l{c}}}}e}{}An{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{Db{l{c}}}}{f{Bf}}}bDh}{{{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{Cd}}}}}{{l{Cd}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{El}}}}}{{l{El}}}}{{{f{{l{Al}}}}}{{l{Al}}}}{{{f{{l{c}}}}}{{l{c}}}An}{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{{Bn{c}}}}}}}{{l{{Bn{c}}}}}Cb}{{{f{{l{c}}}}{f{Dj}}Oj}{{A`{Abn}}}An}{{{f{{l{c}}}}Fje}{{A`{{l{c}}n}}}Ld{{Af{{f{Db{l{c}}}}}{{Ad{Cf}}}}}}{{{f{{l{c}}}}M`dd{Cf{Jh}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{c}}}}Fjdd{Cf{Jh}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{Al}}}}{f{{Bj{In}}}}c}{{A`{Abn}}}{{Hh{}{{Ch{{Cf{d}}}}}}}}{{{f{{l{Bd}}}}{f{{Bj{In}}}}c}{{A`{Abn}}}{{Hh{}{{Ch{{Cf{{f{Bf}}}}}}}}}}{{{f{Db{l{c}}}}{f{{Bj{In}}}}e}{{A`{Abn}}}Ol{{Hh{}{{Ch{Cf}}}}}}{{{f{{l{c}}}}eCf}{{A`{{l{c}}n}}}An{{Hh{}{{Ch{In}}}}}}{{{f{{l{Al}}}}c{Cf{d}}}{{A`{{l{Al}}n}}}{{Hh{}{{Ch{In}}}}}}{{{f{{l{Aj}}}}c{Cf{{f{{Bj{Bh}}}}}}}{{A`{{l{Aj}}n}}}{{Hh{}{{Ch{In}}}}}}{{{f{{l{Bd}}}}c{Cf{{f{Bf}}}}}{{A`{{l{Bd}}n}}}{{Hh{}{{Ch{In}}}}}}{{{f{{l{Al}}}}ce}{{A`{{l{Al}}n}}}{{Hh{}{{Ch{In}}}}}{{Dj{{Cf{d}}}{{Ad{{Cf{d}}}}}}}}{{{f{{l{Aj}}}}ce}{{A`{{l{Aj}}n}}}{{Hh{}{{Ch{In}}}}}{{Dj{{Cf{{f{{Bj{Bh}}}}}}}{{Ad{{Cf{{Gb{Bh}}}}}}}}}}{{{f{{l{Bd}}}}ce}{{A`{{l{Bd}}n}}}{{Hh{}{{Ch{In}}}}}{{Dj{{Cf{{f{Bf}}}}}{{Ad{{Cf{Ef}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}An{{Hh{}{{Ch{In}}}}}{{Dj{Cf}{{Ad{Cf}}}}}}{{{f{{l{c}}}}{f{{l{Al}}}}Cf}{{A`{{l{c}}n}}}An}{{{f{{l{Aj}}}}{f{{l{Al}}}}{Cf{{f{{Bj{Bh}}}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{Al}}}}{f{{l{Al}}}}{Cf{d}}}{{A`{{l{Al}}n}}}}{{{f{{l{Bd}}}}{f{{l{Al}}}}{Cf{{f{Bf}}}}}{{A`{{l{Bd}}n}}}}{{{f{Db{l{Ah}}}}}b}{{{f{Db{l{c}}}}d}bDh}{{{f{Db{l{Ah}}}}Eh}b}{{{f{Db{l{c}}}}In}bDh}{{{f{Db{l{c}}}}Lf}bDh}{{{f{{l{Bd}}}}Gh}{{l{Bd}}}}{{{f{{l{j}}}}Gh}{{l{j}}}}{{{f{{l{c}}}}Gh}{{l{c}}}An}{{{f{{l{Aj}}}}Gh}{{l{Aj}}}}{{{f{{l{El}}}}Gh}{{l{El}}}}{{{f{{l{Ah}}}}Gh}{{l{Ah}}}}{{{f{{l{Cd}}}}Gh}{{l{Cd}}}}{{{f{{l{{Bn{c}}}}}}Gh}{{l{{Bn{c}}}}}Cb}{{{f{{l{Al}}}}Gh}{{l{Al}}}}{{{f{{l{{Bn{c}}}}}}Gh{Cf{{Bn{c}}}}}{{l{{Bn{c}}}}}Cb}{{{f{{l{c}}}}GhCf}{{l{c}}}An}{{{f{{l{Cd}}}}Gh{Cf{{f{Ab}}}}}{{l{Cd}}}}{{{f{{l{Ah}}}}Gh{Cf{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{El}}}}Gh{Cf{{f{{Bj{Bh}}}}}}}{{l{El}}}}{{{f{{l{Aj}}}}Gh{Cf{{f{{Bj{Bh}}}}}}}{{l{Aj}}}}{{{f{{l{Bd}}}}Gh{Cf{{f{Bf}}}}}{{l{Bd}}}}{{{f{{l{Al}}}}Gh{Cf{d}}}{{l{Al}}}}{{{f{Db{l{c}}}}}bDh}{{{f{{l{c}}}}GhFj}{{l{c}}}Dh}0{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{El}}}}d}{{l{El}}}}{{{f{{l{c}}}}d}{{l{c}}}An}{{{f{{l{Aj}}}}d}{{l{Aj}}}}{{{f{{l{Al}}}}d}{{l{Al}}}}{{{f{{l{Bd}}}}d}{{l{Bd}}}}{{{f{{l{Al}}}}En}{{l{Al}}}}{{{f{{l{Bd}}}}En}{{l{Bd}}}}{{{f{{l{Aj}}}}En}{{l{Aj}}}}{{{f{{l{c}}}}En}{{l{c}}}An}{{{f{{l{j}}}}En}{{l{j}}}}{{{f{{l{El}}}}En}{{l{El}}}}{{{f{{l{c}}}}Gh}{{Gl{{l{c}}{l{c}}}}}Dh}0{{{f{{l{c}}}}Bh}{{Cf{M`}}}An}{{{f{{l{Ed}}}}Bh}Ln}{{{f{{l{c}}}}Bh}LnFd}{{{f{{l{Eb}}}}Bh}Ln}{{{f{{l{j}}}}}{{f{{Bj{Ob}}}}}}{{{f{{l{c}}}}e}{}An{B`Bb}}{{{l{c}}e}{}An{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{c}}}}}CfAn}{{{f{{l{Al}}}}}{{Cf{In}}}}{{{f{{l{c}}}}}LnAn}{{{f{{l{Al}}}}}Ln}{{{f{{l{Aj}}}}}Ln}{{{f{{l{c}}}}{Cf{Fj}}}{{l{c}}}Dh}{{{f{{l{c}}}}{f{{l{F`}}}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dh{{I`{{Bj{In}}}}On}}{{{f{{l{c}}}}{f{{Bj{A@`}}}}Lf}{{l{c}}}Dh}{{{f{{l{c}}}}{f{{Bj{A@`}}}}}{{l{c}}}Dh}{{{f{{l{c}}}}{f{{l{F`}}}}}{{l{c}}}{{Dh{}{{Gn{Df}}{A@b{Df}}}}Dh}}{{{f{{l{Bd}}}}{f{c}}}{{l{Bd}}}{{I`{{Bj{In}}}}On}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dh{}{{Gn{Df}}{A@b{Df}}}}Dh}{{I`{{Bj{In}}}}On}}{{{f{{l{Aj}}}}{f{c}}}{{l{Aj}}}{{I`{{Bj{In}}}}On}}{{{f{{l{Aj}}}}{f{{l{F`}}}}}{{l{Aj}}}}{{{f{{l{Bd}}}}{f{{l{F`}}}}}{{l{Bd}}}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{I`{{Bj{In}}}}On}}{{{f{{l{j}}}}{f{{l{F`}}}}}{{l{j}}}}`{{{f{{l{c}}}}dA@d}{{Gb{{Gb{A@f}}}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Ld}{{{f{{l{Bd}}}}Fj}{{A`{Abn}}}}{{{f{Db{l{Cd}}}}Eh}b}{{{f{Db{l{Ah}}}}Eh}b}{{{f{{l{c}}}}}{{A`{{A@n{{A@h{f}}{A@l{{A@j{Fj}}}}}}n}}}An}{{{f{{l{Ah}}}}}{{A`{{A@n{AA`{A@l{{A@j{Fj}}}}}}n}}}}{{{f{c}}}e{}{}}{{{f{{l{Aj}}}}}{{l{Bd}}}}{{{f{{l{c}}}}}{{Gb{Cf}}}An}{{{f{{l{c}}}}}{{AAb{Gb{Gb{Cf}}}}}An}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}{{{f{{l{c}}}}}{}An}{{{l{c}}}{}An}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cd}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{E`}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dl}Dh}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{E`}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dl}Dh}{{{f{{l{Cd}}}}c}{{A`{{l{Cd}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cd}}}}c}{{A`{{l{Ah}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{Bd}}e}}}Dh{}{{Af{{f{DbEf}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{c{{A`{e}}}{}{}}0{{{f{Bf}}g}{{A`{{l{i}}e}}}Cj{}{{Hh{}{{Ch{{A`{ce}}}}}}}{{Dh{}{{Hf{c}}}}Dh}}11{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{A`{{Cf{Ab}}n}}}}}}}}{{{f{c}}}AAd{}}0{{{f{{l{Al}}}}}{{A`{{l{Al}}n}}}}{{{f{{l{Aj}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{Bd}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}An}{{{f{{l{{Bn{c}}}}}}}{{A`{{l{{Bn{c}}}}n}}}Cb}{{{l{j}}}AAf}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dh}{{{f{Db{l{c}}}}}bDh}{{{f{{l{c}}}}Fj}{}Dh}{{{f{{l{c}}}}Bh}{{Cf{M`}}}An}{{{f{{l{Eb}}}}Bh}Ln}{{{f{{l{Ed}}}}Bh}Ln}{{{f{{l{c}}}}Bh}LnFd}{{{f{{l{Nj}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Aj}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{F`}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{N`}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Eb}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Jn}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{{Bn{c}}}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}Cb}{{{f{{l{Ed}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Al}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kj}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kd}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{El}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{{l{El}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{Aj}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kd}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kj}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{N`}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{Ed}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{F`}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{Eb}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{Al}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{Jn}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{{Bn{c}}}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}Cb}{{{f{{l{O`}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}{ce{}{}}0{{{f{{l{Cd}}}}}Fj}{{{f{Bf}}c}{{l{e}}}Cj{{Dh{}{{Hf{c}}}}Dh}}{{{f{{l{e}}}}c}{{l{e}}}Cj{{Dh{}{{Hf{c}}}}Dh}}{{{f{{l{c}}}}{Gb{{Cl{Cj}}}}}{{l{c}}}Dh}{{{l{c}}{f{Bf}}}{{l{c}}}Dh}{{{f{{Bj{AAh}}}}e}c{}{{AAj{{f{{l{F`}}}}}{{Ad{c}}}}}}{{{l{j}}{Cf{Hj}}}{{l{j}}}}{{{l{j}}{l{Al}}}{{l{j}}}}{{{f{{l{c}}}}Lf}{{l{c}}}Dh}{{{l{c}}}{}An}{{{f{{l{c}}}}}{}An}{{{l{c}}{l{c}}}{}An}{{{f{{l{c}}}}{f{{l{c}}}}}{}An}32103232102323102323013232013232{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{{l{Cd}}}}{f{{l{c}}}}e}{{l{Cd}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{Db{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{j}}}}{f{{l{Al}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}{{{f{{l{c}}}}{f{{l{Al}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dh{}{{A@b{Df}}}}}}````{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}g{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{DbABd}}{f{Cj}}}b}{{{f{DbABd}}}b}{{{f{DbABf}}}b}{{{f{DbABh}}c}b{{Cn{}{{Ch{{Cf{d}}}}}}Ij}}{{{f{Db{ABj{c}}}}e}bAn{{Cn{}{{Ch{Cf}}}}Ij}}{{{f{Db{ABj{c}}}}e}bAn{{Cn{}{{Ch{}}}}Ij}}{{{f{DbABl}}}b}{{{f{DbABn}}}b}65{{{f{DbAC`}}}b}{{{f{DbACb}}}b}{{{f{DbABh}}}b}{{{f{DbACd}}}b}{{{f{Db{ABj{c}}}}}bAn}{{{f{Db{ACf{c}}}}}b{AChOn}}{{{f{DbACj}}}b}{{{f{DbACl}}}b}{{{f{Db{ACn{c}}}}}bAn}{{{f{DbABd}}{Cf{{f{Cj}}}}}b}{{{f{DbABd}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{Db{ABj{c}}}}{Cf{{f{Bj}}}}}bAn}{{{f{Db{ACf{c}}}}{Cf{e}}}b{AChOn}{{I`{c}}}}{{{f{DbABn}}{Cf{c}}}b{}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABd}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABf}}{f{Ab}}}{{A`{bn}}}}{{{f{DbAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DbACb}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABh}}{f{Ab}}}{{A`{bn}}}}{{{f{DbACd}}{f{Ab}}}{{A`{bn}}}}{{{f{Db{ABj{c}}}}{f{Ab}}}{{A`{bn}}}An}{{{f{Db{ABj{c}}}}{f{Bj}}}bAn}{{{f{DbAC`}}c}b{{Cn{}{{Ch{{Cf{{f{Bf}}}}}}}}Ij}}{{{f{DbACb}}c}b{{Cn{}{{Ch{{Cf{{f{{Bj{Bh}}}}}}}}}}Ij}}{{{f{DbABn}}c}b{}}{{{f{Db{ACf{c}}}}e}b{AChOn}{{I`{c}}}}{{{f{DbACj}}d}b}{{{f{Db{ACn{c}}}}}bAn}{{{f{DbAC`}}c}b{{Cn{}{{Ch{{f{Bf}}}}}}}}{{{f{DbACb}}c}b{{Cn{}{{Ch{{f{{Bj{Bh}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000000`{{{f{{ACf{c}}}}}{{ACf{c}}}{AChOn}}{{{f{ACj}}}ACj}{{{f{ACl}}}ACl}{{{f{{ACn{c}}}}}{{ACn{c}}}{AD`An}}{{{f{c}}{f{Dbe}}}b{}{}}000{{{f{c}}}b{}}000{{}ABd}{{}ABf}{Fj{{f{c}}}{}}0000000000{Fj{{f{Dbc}}}{}}0000000000{Fjb}0000000000{{{f{AC`}}}d}{{{f{ACb}}}d}{{{f{ABh}}}d}{{{f{{ABj{c}}}}}dAn}{{{f{ABl}}}d}{{{f{AC`}}}{{f{Ob}}}}{{{f{ACb}}}{{f{Ob}}}}{{{f{ABh}}}{{f{Ob}}}}{{{f{{ABj{c}}}}}{{f{Ob}}}An}{{{f{ABl}}}{{f{Ob}}}}{ABn{{l{c}}}Dh}{{{f{DbABd}}}{{l{Ah}}}}{{{f{DbABf}}}{{l{Ah}}}}{{{f{DbACd}}}{{l{Ah}}}}{{{f{DbABl}}}{{l{Ah}}}}{{{ACf{{Bj{Bh}}}}}{{l{Aj}}}}{{{ACf{Bf}}}{{l{Bd}}}}{ACj{{l{Al}}}}{AClADb}{{{ACn{c}}}{{l{c}}}An}`{cc{}}0000000000{{{f{Bf}}e}ADd{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bf}}e}ADd{}{{Cn{}{{Ch{c}}}}}}{{{f{Bf}}{f{{Bj{c}}}}}ADd{}}{{{f{Bf}}{f{{Bj{{Cf{c}}}}}}}ADd{}}{{{f{Eh}}FjFj{f{Bf}}}{{A`{{Cl{ABl}}n}}}}{{}Fj}0000000000{{{f{DbAC`}}}{{Cl{Cj}}}}{{{f{DbACb}}}{{Cl{Cj}}}}{{{f{DbABh}}}{{Cl{Cj}}}}{{{f{Db{ABj{c}}}}}{{Cl{Cj}}}An}{{{f{DbABl}}}{{Cl{Cj}}}}{ce{}{}}0000000000`{{{f{Bf}}Fj{Cf{Eh}}}ABd}{{{f{Bf}}Fj{Cf{Eh}}}ABf}{{{f{Bf}}FjFj}AC`}{{{f{Bf}}FjFj}ACb}{{{f{Bf}}FjFj}ABh}{{{f{Bf}}Fj}ACd}{{{f{Bf}}FjFjEh}{{ABj{c}}}An}{{{f{Bf}}Fj}{{ACf{c}}}{AChOn}}{{{f{Bf}}Fj}ACj}{{{f{Bf}}Fj}ACl}{{{f{Bf}}Fj}{{ACn{c}}}An}{{{f{Bf}}FjFjEhEh}{{ABj{c}}}An}{{{f{DbABn}}}b}{{{f{DbACj}}}b}{{{f{DbACl}}}b}{{{f{Db{ACn{c}}}}}bAn}{{{f{c}}}e{}{}}000{c{{A`{e}}}{}{}}000000000000000000000{{{f{c}}}AAd{}}0000000000{ce{}{}}0000000000````````{{{f{DbABl}}}b}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}`{{{f{ABl}}}d}{{{f{ABl}}}{{f{Ob}}}}{{{f{DbABl}}}{{l{Ah}}}}{{{f{Eh}}FjFj{f{Bf}}}{{A`{{Cl{ABl}}n}}}}{{{f{DbABl}}}{{Cl{Cj}}}}````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{Ff}}}Ff}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}Ff}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{Ff}}{f{Ff}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Ff}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{Ff}}{f{Dbc}}}bADf}{{}Fj}{ce{}{}}{{{f{Ff}}}d}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4``{{ADh{f{Bf}}}{{l{c}}}Dh}{{ADj{f{{l{c}}}}}{{l{c}}}Dh}10{{ADj{f{Bf}}Eh}{{l{c}}}Dh}0{{ADh{f{Bf}}}{{A`{{l{c}}e}}}Dh{}}{{ADj{f{{l{c}}}}}{{A`{{l{c}}e}}}Dh{}}10{{ADj{f{Bf}}Eh}{{A`{{l{c}}e}}}Dh{}}0`{ADlADl}``{{ADn{f{Bf}}Eh}e{}{{AE`{c}}}}{{e{f{Bf}}Eh}AE`{}{{Ih{}{{Ch{c}}}}}}````{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{Fj{{f{c}}}{}}00{Fj{{f{Dbc}}}{}}00{Fjb}00{cc{}}00{{}Fj}00{ce{}{}}00000{{{f{AEb}}}AEd}{{{f{AEf}}Eh}AEh}{{{f{DbAEd}}}Cf}{{{f{DbAEh}}}Cf}{{{f{Db{AEj{c}}}}}CfCn}21{{{f{Db{AEj{c}}}}}CfGf}`{{{f{AEd}}}{{Gl{Fj{Cf{Fj}}}}}}{{{f{AEh}}}{{Gl{Fj{Cf{Fj}}}}}}{{{f{{AEj{c}}}}}{{Gl{Fj{Cf{Fj}}}}}Cn}{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00;;;`````````````````````````{{{f{c}}h}b{}}0000{{}Gd}{{}J`}{{GdGd}Gd}{{J`J`}J`}{{{f{DbGd}}Gd}b}{{{f{DbJ`}}J`}b}3210{{{f{Gd}}}In}0{{{f{J`}}}Bh}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000000{{{f{{Md{c}}}}}{{Md{c}}}Dh}{{{f{{Jj{c}}}}}{{Jj{c}}}Dh}{{{f{AEl}}}AEl}{{{f{Gd}}}Gd}{{{f{J`}}}J`}{{{f{c}}{f{Dbe}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{DbAEn}}}b}{GdGd}{J`J`}{{{f{Gd}}Gd}d}{{{f{J`}}J`}d}{{}{{Md{c}}}Dh}{{}{{Jj{c}}}Dh}{{}Gd}{{}J`}{{{f{{Mb{c}}}}}fDh}{Fj{{f{c}}}{}}000000{Fj{{f{Dbc}}}{}}000000{{GdGd}Gd}{{J`J`}J`}{{}d}{{{f{Mh}}}{{Cf{In}}}}{{{f{{Jj{c}}}}}{{Cf{In}}}Dh}{{{Jj{c}}In}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{In}}}{{Jj{c}}}Dh}{Fjb}000000<;5{{{f{Gd}}{f{Gd}}}d}{{{f{J`}}{f{J`}}}d}7{{{f{DbGd}}c}b{{Hh{}{{Ch{Gd}}}}}}{{{f{DbJ`}}c}b{{Hh{}{{Ch{J`}}}}}}{{{Jj{c}}d}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{d}}}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}Gd}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}Gd}{{Jj{e}}}DhDh}{{{Jj{c}}J`}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{J`}}}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}{f{DbHb}}}{{A`{bHd}}}Dh}{{{f{AEl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Gd}}{f{DbHb}}}{{A`{bHd}}}}0000{{{f{J`}}{f{DbHb}}}{{A`{bHd}}}}0000{cc{}}000000{In{{Cf{Gd}}}}{Bh{{Cf{J`}}}}{InGd}0{BhJ`}010{cGd{{Hh{}{{Ch{Gd}}}}}}{cJ`{{Hh{}{{Ch{J`}}}}}}{{{f{Bf}}}{{Cf{Gd}}}}{{{f{Bf}}}{{Cf{J`}}}}{{{f{{Jj{c}}}}}{{Cf{In}}}Dh}{{{f{{Jj{c}}}}}dDh}{{{f{J`}}}d}{{{f{Mh}}}J`}{{{f{{Jj{c}}}}}J`Dh}0{{{f{{Jj{c}}}}}{{Cf{f}}}Dh}0{{{f{Db{Md{c}}}}}{{f{Db{Jj{c}}}}}Dh}{{{f{J`}}}Lf}{{}Fj}000000{{{f{DbGd}}Gd}b}{{{f{DbJ`}}J`}b}{{GdGd}Gd}{{J`J`}J`}{{{f{Gd}}Gd}d}{{{f{J`}}J`}d}{ce{}{}}000000{Gd}{J`}{{{f{Gd}}}d}{{{f{J`}}}d}{{{f{{Jj{c}}}}}dDh}21{{{f{{Jj{c}}}}}LfDh}111{{{f{Gd}}}{{AF`{Gd}}}}{{{f{J`}}}{{AF`{J`}}}}{{{f{Gd}}}{{AFb{Gd}}}}{{{f{J`}}}{{AFb{J`}}}}{{}d}{{}{{f{{AFf{AFd}}}}}}{{{f{Mh}}}{{Cf{Ln}}}}{{{Jj{c}}}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}}{{Cf{Ln}}}Dh}{{{Jj{c}}Cf}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}{Jj{c}}}{{AFh{c}}}Dh}4231{{{Jj{c}}}{{Md{c}}}Dh}{GdGd}{J`J`}{{{f{{Md{c}}}}}{{Mj{{Jj{c}}}}}Dh}{{{f{DbGd}}Gd}b}{{{f{DbJ`}}J`}b}{{{f{DbGd}}Gdd}b}{{{f{DbJ`}}J`d}b}{{{f{Db{Jj{c}}}}{Cf{In}}}bDh}{{{f{Db{Jj{c}}}}d}bDh}{{{f{DbJ`}}d}b}{{{f{Db{Jj{c}}}}J`}bDh}{{{f{Db{Jj{c}}}}Cf}bDh}033{{{f{Db{Jj{c}}}}Lf}bDh}{{{f{DbJ`}}Lf}b}{{{Jj{c}}Lf}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{Lf}}}{{Jj{c}}}Dh}{{GdGd}Gd}{{J`J`}J`}>=10{{{Md{c}}}{{Jj{c}}}Dh}{{{f{c}}}e{}{}}0000{{{f{DbGd}}Gd}b}{{{f{DbJ`}}J`}b}{c{{A`{e}}}{}{}}0000000000000{{{f{{Md{c}}}}}{{Cf{{Mj{{Jj{c}}}}}}}Dh}{{{f{{Md{c}}}}}{{Cf{{Jl{{Jj{c}}}}}}}Dh}{{{f{c}}}AAd{}}00000098{{{f{{Md{c}}}}}{{f{{AFj{Mh}}}}}Dh}{ce{}{}}000000{AEnAEn}{{{f{{Md{c}}}}}{{Jl{{Jj{c}}}}}Dh}````{{{f{c}}h}b{}}{{{f{{AFl{c}}}}Fj}{{Gl{{AFl{c}}{AFl{c}}}}}Cb}{e{{AFl{c}}}Cb{{Hh{}{{Ch{{Cf{{f{c}}}}}}}}}}{e{{AFl{c}}}Cb{{Hh{}{{Ch{{f{c}}}}}}}}{{AFne}g{}{{Hh{}{{Ch{c}}}}}{}}0{{{f{Jb}}}{{f{AG`}}}}{{{f{{AFl{c}}}}}{{f{AG`}}}Cb}{{{f{Db{AFl{c}}}}}{{f{DbAG`}}}Cb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}`{{{f{{AFl{c}}}}Fj}dCb}{{{f{{AFl{c}}}}}{{AFl{c}}}{AD`Cb}}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{{AFl{c}}}}}{{f{AFn}}}Cb}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{{f{Jb}}}}{f{{f{Jb}}}}}d}{{{f{Jb}}{f{Jb}}}d}{{{f{{AFl{c}}}}{f{DbHb}}}{{A`{bHd}}}{AGbCb}}{cc{}}{{FjAFn}{{AFl{c}}}Cb}{{{f{{AFl{c}}}}Fj}{{Cf{{f{c}}}}}Cb}{{}AFn}{{{f{Hj}}{f{{AFl{c}}}}{f{{AFl{c}}}}}{{AFl{c}}}Cb}{{AFn{f{Hj}}}{{AFl{c}}}Cb}{{{f{Hj}}{f{{AFl{c}}}}}{{AFl{c}}}Cb}0{{}Fj}{ce{}{}}{{{f{{AFl{c}}}}}{}Cb}{{{f{{AFl{c}}}}Fj}dCb}{{{f{c}}Fj}d{}}1{{{f{{AFl{c}}}}}{{AGf{AGd}}}Cb}{{{f{{AFl{c}}}}}{{AGf{{f{c}}{Fl{c}}AGd}}}Cb}{{{f{{AFl{c}}}}}FjCb}0`{db}{{{f{Db{AFl{c}}}}{Cf{Hj}}}bCb}{{{f{Db{AFl{c}}}}FjFj}bCb}{{{f{c}}FjFj}e{}{}}01{{{f{{AFl{c}}}}Fj}{{Gl{{Cl{Cj}}{Cl{Cj}}}}}Cb}0{{{f{Jb}}}{{Cl{Jb}}}}{{{f{{AFl{c}}}}}{{Cl{Cj}}}Cb}{{{f{c}}}e{}{}}{g{{A`{{AFl{c}}e}}}Cb{}{{Hh{}{{Ch{{A`{{f{c}}e}}}}}}}}{g{{A`{{AFl{c}}e}}}Cb{}{{Hh{}{{Ch{{A`{{Cf{{f{c}}}}e}}}}}}}}{{AFng}{{A`{ie}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{{f{Jb}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{AFl{c}}}}}{{Cf{{f{Hj}}}}}Cb}{{{f{{AFl{c}}}}Fj}{{f{c}}}Cb}{{{f{{AFl{c}}}}Fj}{}Cb}1{{{f{{AFl{c}}}}}{{f{{Mf{{Gb{c}}}}}}}Cb}{{{f{{AFl{c}}}}}{}Cb}{{{f{{AFl{c}}}}}{{Fl{c}}}Cb}{ce{}{}}{{{f{{AFl{c}}}}{Cf{Hj}}}{{Cl{Cj}}}Cb}{{{AFl{c}}{Cf{Hj}}}{{AFl{c}}}Cb}0`{{{f{Db{AGh{c}}}}}bCb}0{{{f{Db{AGh{c}}}}{Cf{c}}}bCb}{{{f{Db{AGh{c}}}}{f{AG`}}}bCb}{{{f{Db{AGh{c}}}}c}bCb}{{{f{Db{AGh{c}}}}{f{AG`}}}{{A`{bn}}}Cb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}{{AGh{c}}}Cb}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{AGh{c}}}{{l{{Bn{c}}}}}Cb}{cc{}}{{}Fj}{ce{}{}}{{{f{Bf}}Fj}{{AGh{c}}}Cb}{{{f{Db{AGh{c}}}}}AbCb}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````{{{f{DbAGj}}}b}{{{f{DbAGj}}{Cf{{f{AG`}}}}}b}{{{f{DbAGj}}{f{AG`}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}`?>={{{f{AGl}}{f{DbHb}}}{{A`{bHd}}}}<{{{f{Bf}}Fj}{{Cl{AGj}}}}{{}{{Mf{Dj}}}}{{}AFn}>={{}d}`{{{Cl{Dj}}{Mf{Dj}}AFn}b}{{{f{DbAGj}}}Ab}==<{ce{}{}}``````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dl}}{{{f{AHb}}{f{Dj}}}AHb}{{{f{AHb}}{f{Dj}}}{{l{c}}}Dh}{{{f{{AH`{}{{AGn{c}}}}}}i{f{Db{Bj{g}}}}}b{}{}{}{{Dj{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{e}{{Ad{c}}}}Dl}}{{{f{AHd}}En}{{l{F`}}}}{{{f{AHd}}{f{{Bj{Ab}}}}{f{Fb}}}{{A`{{l{F`}}n}}}}{{{f{AHf}}}{{A`{{l{F`}}n}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{{{f{AHh}}{f{Eh}}}{{A`{Abn}}}}0{{{f{AHh}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{En}}}En}{{{f{Fb}}}Fb}{{{f{AHj}}}AHj}{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}0000{{}En}{{}Fb}{Fj{{f{c}}}{}}00{Fj{{f{Dbc}}}{}}00``{Fjb}00{{{f{En}}{f{En}}}d}{{{f{Fb}}{f{Fb}}}d}{{{f{AHj}}{f{AHj}}}d}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AHn}}}{{A`{Abn}}}}{{{f{AHn}}}{{A`{{Gl{Ab{Gj{Gh}}}}n}}}}`{{{f{AI`}}c}{{A`{AI`n}}}{}}{{{f{AIb}}{f{{l{Al}}}}}{{A`{{l{c}}n}}}Dh}`{{{f{En}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Fb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{AHj}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{Fb}}}En}1{{{f{En}}}Fb}2`{{{f{Bf}}cFj}AId{}}{{{f{Bf}}Fj}AIf}`{{{f{AIh}}Fj}{{A`{Iln}}}}{{{f{AIh}}Fj}Il}??{{{f{En}}{f{Dbc}}}bADf}{{{f{Fb}}{f{Dbc}}}bADf}{{{f{AHj}}{f{Dbc}}}bADf}{{}Fj}00{ce{}{}}00{{{f{AIj}}}{{A`{{l{Al}}n}}}}{{{f{AIl}}}{{A`{{l{Al}}n}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0``{{{f{AIn}}}{{Cf{c}}}{}}{{{f{AIn}}}{{Cf{M`}}}}{{{f{AJ`}}}{{Cf{c}}}{}}2{{{f{AIn}}}{{Cf{{Gl{cc}}}}}{}}``{{{f{AHf}}}{{A`{Fjn}}}}{{}En}{{}Fb}{{{f{AJb}}FjFj}{{l{c}}}Dh}88``{{{f{AHn}}}{{A`{{Gj{Gh}}n}}}}{{{f{AJ`}}M`Oh}{{A`{{Cf{c}}n}}}{}}{{{f{AJd}}}Ab}0{{{f{AJf}}}AJf}{{{f{AJh}}{f{Dj}}Oj}{{A`{Abn}}}}{{{f{AJj}}c{Cf{e}}}{{A`{AJjn}}}{{Hh{}{{Ch{In}}}}}{}}{{{f{AJj}}ci}{{A`{AJjn}}}{{Hh{}{{Ch{In}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}`{{{f{AJj}}{f{{l{Al}}}}{Cf{c}}}{{A`{AJjn}}}{}}{{{f{AJl}}Gh}{{l{c}}}Dh}{{{f{AJn}}Ghc}{{l{e}}}{}Dh}{{{f{AK`}}FjFj}AK`}0`{{{f{AHd}}d}{{l{c}}}Dh}{{{f{AHd}}En}{{l{c}}}Dh}{{{f{AKb}}Bh}{{Cf{M`}}}}{{{f{AIn}}}{{Cf{c}}}{}}{{{f{AKd}}{f{c}}}{{A`{AKdn}}}On}{{{f{AKf}}{f{c}}}AKfOn}{{{f{AKh}}}{{Gb{{f{{Bj{Bh}}}}}}}}{{{f{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00{{{f{AHf}}}{{A`{AHfn}}}}8{ce{}{}}00{{End}En}{{Fbd}Fb}1010{{Fbc}Fb{{Hh{}{{Ch{d}}}}}}210{EnEn}{FbFb}`{{{f{AKj}}{f{{l{Al}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DhDh{{Dj{ff}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}Dh}{{{l{c}}{l{e}}gik}{{l{m}}}DhDh{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DhDh{{AKl{CfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}g}bDhDh{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bd}}}DhDh{{Af{{f{DbEf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDh{}{{Af{}{{Ad{g}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}DhDh{CjAKn}{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DhDhCj{{Af{}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDh{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DhDhDh{{AL`{CfCfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hf{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DhDhALb{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DhDhDh{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{CjAKn}ALb{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dh{}{{Hf{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dh{{ALd{Cf}}}Dh}{{{f{{l{c}}}}e}{{l{g}}}DhALdDh}{{{f{{l{c}}}}g}{{l{i}}}DhCj{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}{{{l{c}}g}{{l{i}}}DhCj{{Af{}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{CjAKn}{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}0{{{f{{l{c}}}}}FjAn}0{{LfLf}Lf}{{{f{{l{F`}}}}In}{{A`{bn}}}}{{{f{{ALf{In}}}}In}{{A`{bn}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eALhd}{{Gb{In}}}Dh{{Cn{}{{Ch{Cf}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{ALh}}}ALh}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}ALh}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{ALh}}{f{ALh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{ALh}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{ALh}}{f{Dbc}}}bADf}{{}Fj}{ce{}{}}{{{f{{Bj{f}}}}cIne}{{Gb{In}}}{{Cn{}{{Ch{Cf}}}}}{{Dj{fFjf}{{Ad{d}}}}}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4`{{Fj{f{Db{Gb{d}}}}}b}```{{{f{AK`}}FjFj}AK`}0{{Fj{f{{Bj{Ab}}}}{f{DbFb}}}{{A`{{ALj{{l{F`}}}}n}}}}{{{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{ALln}}}}{{{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{Jd{Gh}}n}}}}{{{f{Bf}}{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{l{El}}n}}}}{{{f{Bf}}{f{{Bj{Ab}}}}}{{A`{{l{El}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{Bj{Ab}}}}}{{A`{ALln}}}}{{{f{{Bj{Ab}}}}}{{A`{{l{El}}n}}}}0```````````88`{ALnGh}00{{{f{Bf}}}{{A`{Efn}}}}{{{f{Bf}}}{{A`{AM`n}}}}{{{f{AMb}}}Gh}{{{f{Bf}}}{{A`{bn}}}}444``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000{{{f{AMd}}}d}{{{f{Il}}}{{`{{Cn{}{{Ch{Il}}}}}}}}{{{f{Il}}{f{Db{Gb{Il}}}}}b}{{AMdd}AMd}{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{Il}}{f{Il}}}Il}{{{f{{l{Cd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Aj}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Al}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbAMf}}{Cf{{f{Bf}}}}}b}{{{f{DbAMd}}{f{AMd}}}{{A`{bn}}}}{{{f{DbAMf}}}b}{{{f{DbAMf}}{f{Bf}}}b}{{{f{AMd}}En}{{l{F`}}}}{eAMh{}{{Hh{}{{Ch{c}}}}}}0{{AFne}AMj{}{{Hh{}{{Ch{c}}}}}}0{{{f{Il}}}Il}{{{f{{Kb{K`Jn}}}}}{{`{Ij}}}}{{{f{{Kb{KhKd}}}}}{{`{Ij}}}}{{{f{Eh}}}{{f{Eh}}}}{{{f{Ob}}}{{f{Eh}}}}{{{f{AMl}}}{{f{Eh}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bj{c}}}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{{Kb{LbKd}}}}}{{`{Ij}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000000000000000000000000000000000000000000{Eh{{Cl{Eh}}}}{{{ANh{Bf}}}ANj}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{ANn}}{f{Eh}}}{{A`{Abn}}}}{{{f{Il}}{f{Eh}}}Il}{{{f{Eh}}Eh}Eh}{{{f{{Kb{KhKd}}}}Kf}{{Kb{KhKd}}}}{{{f{{Kb{KnKd}}}}Kf}{{Kb{KnKd}}}}{{{f{ANn}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{Kb{KhKd}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{Kb{LbKd}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{Kb{KlKj}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{Kb{KnKd}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{{Kb{K`Jn}}}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{AMd}}{f{Eh}}Ff}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Ed}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Eb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{Kb{ce}}}}}{{Kb{ce}}}DhDh}{{{f{AO`}}}AO`}{{{f{ANj}}}ANj}{{{f{AMd}}}AMd}{{{f{AOb}}}AOb}{{{f{Il}}}Il}{{{f{AOd}}}AOd}{{{f{Eh}}}Eh}{{{f{AOf}}}AOf}{{{f{Ob}}}Ob}{{{f{Kf}}}Kf}{{{f{O`}}}O`}{{{f{Nf}}}Nf}{{{f{F`}}}F`}{{{f{Nd}}}Nd}{{{f{N`}}}N`}{{{f{Nj}}}Nj}{{{f{Jn}}}Jn}{{{f{Kd}}}Kd}{{{f{Ed}}}Ed}{{{f{Eb}}}Eb}{{{f{K`}}}K`}{{{f{Lb}}}Lb}{{{f{Bd}}}Bd}{{{f{Aj}}}Aj}{{{f{El}}}El}{{{f{Al}}}Al}{{{f{Kl}}}Kl}{{{f{Kh}}}Kh}{{{f{Kn}}}Kn}{{{f{AOh}}}AOh}{{{f{AFn}}}AFn}{{{f{AOj}}}AOj}{{{f{c}}{f{Dbe}}}b{}{}}00000000000000000000000000000000{{{f{c}}}b{}}000000000000000000000000000000000000000000000000000000000{{{f{DbOb}}Eh}b}{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{{f{Eh}}}d}00{{{ANh{Bf}}}Eh}{{{f{Ob}}}{{f{Eh}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{{}AOn}{{}AO`}{{}ANj}{{}Il}{{}AOd}{{}Eh}{{}AFn}{Fj{{f{c}}}{}}00{{{f{{Kb{ce}}}}}fDhDh}1111111111111111111111111111111111111111{Fj{{f{Dbc}}}{}}0{{{f{Db{Kb{ce}}}}}{{f{Db}}}DhDh}11111111111111111111111111111111111111111{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{Cd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMfc}AMd{{Hh{}{{Ch{{Cf{{f{Bf}}}}}}}}}}{Fjb}000000000000000000000000000000000000000000{{{f{ANn}}}{{f{Eh}}}}{{{f{{Kb{K`Jn}}}}}{{f{Eh}}}}{{{f{{Kb{LbKd}}}}}{{f{Eh}}}}{{{f{{Kb{KhKd}}}}}{{f{Eh}}}}{{{f{{Kb{KlKj}}}}}{{f{Eh}}}}{{{f{{Kb{KnKd}}}}}{{f{Eh}}}}{{{f{AMd}}}{{f{Eh}}}}{{{f{Il}}}Eh}`{{{f{AO`}}{f{AO`}}}d}{{{f{Il}}{f{Il}}}d}{{{f{AOd}}{f{AOd}}}d}{{{f{Eh}}{f{Eh}}}d}{{{f{Eh}}{f{AFn}}}d}{{{f{AOf}}{f{AOf}}}d}{{{f{Ob}}{f{Ob}}}d}{{{f{Kf}}{f{Kf}}}d}{{{f{AFn}}{f{AFn}}}d}{{{f{AOj}}{f{AOj}}}d}{{{f{Il}}{f{Il}}d}d}{{{f{AMd}}{f{{l{Bd}}}}}}{{{f{AMd}}{f{Bf}}}}{{{f{AMd}}{f{AMd}}}}210{{{f{c}}{f{e}}}d{}{}}00000000000000000000000{{{f{{Kb{ce}}}}}ObDhDh}{{{f{ANj}}{f{Bf}}}{{Cf{In}}}}{{ANl{f{{l{F`}}}}{f{{l{F`}}}}}{{A`{{l{F`}}n}}}}{AMfAMd}{AOn{{Mf{ANj}}}}{{{f{AO`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{ANj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{AOb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Il}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{AOd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Eh}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{AOf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Ob}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Kf}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{AFn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{AOj}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}00{{{l{Jn}}}{{Kb{K`Jn}}}}{{{l{Kd}}}{{Kb{LbKd}}}}222222222222{{{f{{Bj{Bh}}}}}Il}{{{Cf{c}}}Il{{B@`{Il}}}}{{{f{Bf}}}Il}{cIlB@b}{dIl}77{IlEh}{{{f{Il}}}Eh}9{{{f{AFn}}}Eh}:{{{f{Il}}}Ob}{{{f{B@d}}}Ob}<<{{{f{AOj}}}Kf}===================={B@fAFn}>{B@hAFn}?{{{f{AFn}}d}Eh}{{{l{F`}}{Mf{ANj}}dAO`}AMd}{{{f{Bf}}cKf}{{Kb{KnKd}}}{{Hh{}{{Ch{B@j}}}}}}{{{f{Bf}}cKf}{{Kb{KnKd}}}{{Hh{}{{Ch{{Cf{B@j}}}}}}}}{{{l{F`}}AO`}AMd}{{{f{Bf}}c}{{Kb{K`Jn}}}{{Hh{}{{Ch{B@l}}}}}}{{{f{Bf}}c}{{Kb{K`Jn}}}{{Hh{}{{Ch{{Cf{B@l}}}}}}}}{{{f{Bf}}cKf}{{Kb{KhKd}}}{{Hh{}{{Ch{ALn}}}}}}{{{f{Bf}}cKf}{{Kb{KhKd}}}{{Hh{}{{Ch{{Cf{ALn}}}}}}}}{{{f{Bf}}c}{{Kb{LbKd}}}{{Hh{}{{Ch{AMb}}}}}}{{{f{Bf}}c}{{Kb{LbKd}}}{{Hh{}{{Ch{{Cf{AMb}}}}}}}}{{{BA`{B@n}}Eh}Ob}{{{f{{l{Bd}}}}{f{{ANh{Bf}}}}AO`}{{A`{AMdn}}}}{{{Gb{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{Gb{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gf{}{{Ch{e}}}}IjIbId}}{{FjcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{FjAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{Bf}}dFjAO`}AMd}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{ANj}}In}{{f{Bf}}}}{{{f{{Kb{KhKd}}}}Fj}{{A`{Iln}}}}{{{f{{Kb{LbKd}}}}Fj}{{A`{Iln}}}}{{{f{{Kb{KlKj}}}}Fj}{{A`{Iln}}}}{{{f{{Kb{K`Jn}}}}Fj}{{A`{Iln}}}}{{{f{{Kb{KnKd}}}}Fj}{{A`{Iln}}}}{{{f{ANn}}Fj}{{A`{Iln}}}}{{{f{AMd}}Fj}{{A`{Iln}}}}{{{f{{Kb{KnKd}}}}Fj}Il}{{{f{{Kb{LbKd}}}}Fj}Il}{{{f{{Kb{KhKd}}}}Fj}Il}{{{f{{Kb{KlKj}}}}Fj}Il}{{{f{{Kb{K`Jn}}}}Fj}Il}{{{f{ANn}}Fj}Il}{{{f{AMd}}Fj}Il}{{{f{ANj}}}{{f{{ANh{Bf}}}}}}{{}Eh}0000000000000000000000000{{{f{ANj}}In}{{Cf{{f{Bf}}}}}}{{{f{AMd}}}{{f{{Mf{ANj}}}}}}{{{f{Eh}}}{{Cf{{Gb{Fj}}}}}}{{{f{Il}}}{{Cf{{f{Bf}}}}}}{{{f{BAb}}Fj}Il}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{AMd}}{f{Bf}}}}{{{f{AMd}}{f{AMd}}}}{{{f{AMd}}{f{{l{Bd}}}}}}120{{{f{Il}}{f{Dbc}}}bADf}{{{f{AOd}}{f{Dbc}}}bADf}{{{f{Eh}}{f{Dbc}}}bADf}{{{f{Ob}}{f{Dbc}}}bADf}{{{f{Kf}}{f{Dbc}}}bADf}{{{f{AFn}}{f{Dbc}}}bADf}{{{f{AOj}}{f{Dbc}}}bADf}{{{f{Il}}{f{Dbc}}d}bADf}{{{f{{Kb{LbKd}}}}}{{l{N`}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{EhEh}{{}Fj}000000000000000000000000000000000000000000{{{f{Eh}}}{{Cf{{f{Eh}}}}}}{{{f{AFn}}}{{Cf{{f{AFn}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{BAdEh}{{A`{Lnn}}}}{{{Kb{KlKj}}}Ab}{{{Kb{KnKd}}}Ab}{{{Kb{K`Jn}}}Ab}{{{Kb{LbKd}}}Ab}{{{Kb{KhKd}}}Ab}{AMdAb}{Il{{A`{Iln}}}}{{{f{Eh}}}d}00{{{f{Il}}}d}111{{{f{AMd}}}d}0212{{{f{ANj}}}d}23330332323233332333323{{{f{AFn}}}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{AMd}}}BAf}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{Eh}}}{{f{Eh}}}}{{{f{ANj}}}Fj}{{{f{AMd}}}Fj}{{{f{AMd}}{f{Bf}}}}{{{f{AMd}}{f{{l{Bd}}}}}}{{{f{AMd}}{f{AMd}}}}012{{{f{AMd}}{f{AMd}}}{{A`{{Gl{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gl{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Eh}}{f{Eh}}}{{A`{dn}}}}{{{f{AOd}}}{{Cf{Eh}}}}{{{f{AMd}}}Ln}{{{f{Eh}}{f{Eh}}}{{A`{Ehn}}}}{{{f{DbAOn}}{f{{Mf{ANj}}}}}{{A`{bn}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}03{{{f{{Kb{LbKd}}}}}{{l{N`}}}}1{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{Cd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMd}}}{{A`{Fjn}}}}{{{f{AMd}}}{{f{Bf}}}}{{{f{Ob}}}{{f{{BA`{B@n}}}}}}`{{{f{{Kb{LbKd}}}}}{{l{Jn}}}}8{{}c{}}0{{{f{Bf}}FjAO`}AMf}{{{f{Bf}}c}{{Kb{K`Jn}}}{{I`{{Bj{B@l}}}}}}{{{f{Bf}}c}{{Kb{K`Jn}}}{{I`{{Bj{{Cf{B@l}}}}}}}}{{{f{Bf}}c}{{Kb{KnKd}}}{{I`{{Bj{B@j}}}}}}{{{f{Bf}}c}{{Kb{KhKd}}}{{I`{{Bj{{Cf{ALn}}}}}}}}{{{f{Bf}}c}{{Kb{KhKd}}}{{I`{{Bj{ALn}}}}}}{{{f{Bf}}c}{{Kb{LbKd}}}{{I`{{Bj{{Cf{AMb}}}}}}}}{{{f{Bf}}c}{{Kb{KnKd}}}{{I`{{Bj{{Cf{B@j}}}}}}}}{{{f{Bf}}c}{{Kb{LbKd}}}{{I`{{Bj{AMb}}}}}}{{{Mf{ANj}}}AOn}{{{f{Bf}}Eh}Ob}{{{l{c}}}{{Kb{ec}}}DhDh}{{}AOf}{{{f{DbBAf}}}Cf}{{{f{AMd}}{f{{l{Bd}}}}}}{{{f{AMd}}{f{AMd}}}}{{{f{AMd}}{f{Bf}}}}021{{{f{AMd}}}Fj}5{{{f{Bf}}{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kb{K`Jn}}}}{{{f{Bf}}{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kb{LbKd}}}}{{{f{Il}}{f{Il}}}{{Cf{BAh}}}}{{{f{Kf}}{f{Kf}}}{{Cf{BAh}}}}{{{f{{Kb{ce}}}}}{{f{{l{e}}}}}DhDh}{{{f{AMd}}}{{f{{l{F`}}}}}}{{{f{{Kb{KlKj}}}}}{{Cf{Fj}}}}{{{f{DbAMf}}{f{Bf}}}{{Gl{Ind}}}}{{{f{{l{Cd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kb{K`Jn}}}}{f{{l{Bd}}}}{Cf{{f{AM`}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{{Kb{KhKd}}}}{f{{l{Bd}}}}{Cf{{f{AM`}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{ANj}}{f{ANj}}}d}{{{f{{Kb{KlKj}}}}}Fj}{{{f{{Kb{LbKd}}}}}{{l{N`}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{{{f{DbOb}}{BA`{B@n}}}b}{{{f{Db{Kb{KhKd}}}}Kf}b}{{{f{Db{Kb{KnKd}}}}Kf}b}{{{f{Db{Kb{KhKd}}}}KfEf}{{A`{bn}}}}{{{f{Db{Kb{KhKd}}}}Ef}{{A`{bn}}}}{{{f{BAf}}}{{Gl{Fj{Cf{Fj}}}}}}{{{f{AMd}}d}AMd}{{{f{AMd}}En}AMd}{{{f{{Kb{LbKd}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{Kb{KhKd}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{{Kb{K`Jn}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{Il}}{f{Eh}}}{{Cf{Il}}}}{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{Cd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kb{KnKd}}}}}Kf}{{{f{{Kb{KhKd}}}}}Kf}{{{f{{Kb{KhKd}}}}}{{f{{Cf{Ef}}}}}}{{{f{AMd}}AOfd}{{Cl{Cj}}}}{{{f{Eh}}AOf}AFn}{{{f{Ob}}AOf}B@d}{KfAOj}{{{f{Eh}}{f{Bf}}AOf}B@d}{Kf{{f{Bf}}}}{{{f{AMd}}{f{{ANh{Bf}}}}BAj}AMd}{{{f{AMd}}}{{A`{AMdn}}}}{{{f{AMd}}}AMd}{{{f{AFn}}}{{f{AFn}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000{{{f{Eh}}}Eh}{{{f{AFn}}}BAl}{{{f{{Kb{KlKj}}}}Fj}{{A`{{Dn{{Kb{KlKj}}}}n}}}}{{{f{{Kb{KhKd}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{{Kb{LbKd}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{Kb{K`Jn}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{c}}}Ef{}}00{{{f{Il}}{f{Il}}}d}{{{f{{Kb{K`Jn}}}}{Cf{{f{AM`}}}}{f{{l{Bd}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{AM`}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{g{{A`{AMhe}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}0{{AFng}{{A`{AMje}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}0{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{{f{Il}}}{{A`{cn}}}Ll}{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Il}}{f{Eh}}}{{A`{Iln}}}}{{{f{Eh}}AOf}{{A`{AFnn}}}}{{{f{c}}}AAd{}}000000000000000000000000000000000000000000{{{f{AFn}}}AFn}{{{f{AMd}}}{{A`{AMdn}}}}{{{f{AMd}}}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}cAD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{AMd}}}{{A`{AAfn}}}}1{{{f{Eh}}Il}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{ce{}{}}000000000000000000000000000000000000000000{Fjc{}}0{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hj}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{Eh}}}Il}```````````{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{ANl{f{{l{F`}}}}{f{{l{F`}}}}}{{A`{{l{F`}}n}}}}{{{f{AMd}}{f{AMd}}}{{A`{{Gl{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gl{{l{Ah}}{l{Ah}}}}n}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}BAn}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{{}b}{{{f{DbBAn}}}b}{Fjb}2{cc{}}6{{}Fj}{ce{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{}d}3``````````````````````````{{{f{BB`}}}{{f{Bf}}}}>>>===`{{nBB`}n}{nn}={{{f{BB`}}}f}>>===:::`{{{f{BBb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BB`}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{n}}{f{DbHb}}}{{A`{bHd}}}}0<{cBB`{{B@`{{Dn{Bf}}}}}}={BBdn}{BBfn}{BBhn}{BBjn}{BBln}{BBnn}{cc{}}{{}{{Fn{{f{Bf}}BBb}{{Ad{b}}}}}}{{}Fj}00{ce{}{}}00{cnALb}{{{f{Bf}}}BB`}````{{{Fn{{f{Bf}}BBb}{{Ad{b}}}}}b}{cnBC`}{{{f{c}}}Ef{}}0{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00777``````````````````{{{f{c}}h}b{}}00{{{f{DbAAf}}{Gb{Ab}}{f{BCb}}}{{A`{bn}}}}{{{f{AAf}}{f{Dj}}}{{Gb{Ab}}}}0{{{f{AAf}}{f{{l{Al}}}}}{{A`{AAfn}}}}{{{f{AAf}}{f{{Bj{{BA`{B@n}}}}}}}{{A`{AAfn}}}}0{{{f{AAf}}GhFj}AAf}{{{f{DbAAf}}}{{f{DbAAf}}}}{{{f{DbAAf}}{f{Bf}}e}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{c}}}}}}{{{f{DbAAf}}Fje}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000{{{f{AAf}}}{{`{{Cn{}{{Ch{Fj}}}}}}}}{{{f{AAf}}}AAf}{{{f{BCf}}}BCf}{{{f{BCh}}}BCh}2{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{AAf}}{f{Bf}}}{{A`{{f{Ab}}n}}}}{{{f{AAf}}e}{{A`{{Gb{{f{Ab}}}}n}}}{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{{}BCh}{{}AAf}{Fj{{f{c}}}{}}0000{Fj{{f{Dbc}}}{}}0000{Fjb}000{{{f{AAf}}{f{Bf}}}{{A`{AAfn}}}}1{{{f{DbAAf}}{f{Bf}}}{{A`{Abn}}}}{{{f{AAf}}{f{{Bj{c}}}}}AAf{{I`{Bf}}}}{{{f{AAf}}{f{{BCj{{f{Bf}}A@d}}}}}AAf}{{{f{AAf}}{Cf{{f{{Bj{c}}}}}}}{{A`{AAfn}}}{{I`{Bf}}}}{{{f{AAf}}}{{Gb{Eh}}}}9{{{f{BCl}}}AAf}{{{f{BCb}}}AAf}{{{f{BCh}}{f{BCh}}}d}{{{f{AAf}}{f{AAf}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{AAf}}}Fj}`{{{f{AAf}}e}{{A`{AAfn}}}{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{{{f{AAf}}{Gb{Ab}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{AAf}}}{{A`{bn}}}}{{{f{AAf}}}{{Gb{Ob}}}}{{{f{AAf}}AHj}{{A`{AAfn}}}}{{{f{AAf}}{f{{l{Al}}}}}{{A`{AAfn}}}}{{{f{BCf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BCh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{AAf}}{f{DbHb}}}{{A`{bHd}}}}0{cc{}}0000{cAAf{{Hh{}{{Ch{Ab}}}}}}{{{f{{Bj{BCn}}}}}{{A`{AAfn}}}}{{{f{{Bj{BCn}}}}{f{BCb}}}{{A`{AAfn}}}}{{c{f{BCb}}}{{A`{AAfn}}}{{Cn{}{{Ch{{f{BCn}}}}}}}}{{{f{AAf}}Fj}{{Cf{{Gb{Il}}}}}}{{{f{AAf}}{f{Bf}}}{{Cf{Fj}}}}{{{f{AAf}}}{{Gb{{f{Bf}}}}}}{{{f{AAf}}}{{Gb{{BA`{B@n}}}}}}{{{f{AAf}}}{{f{{Bj{Ab}}}}}}{{{f{DbAAf}}}{{f{Db{Gb{Ab}}}}}}{{{f{AAf}}Fj}{{A`{BCnn}}}}{{{f{AAf}}Fj{f{DbBCn}}}{{A`{bn}}}}{{{f{AAf}}Fj{f{DbBCn}}}b}{{{f{AAf}}}{{Cf{{A`{Ehn}}}}}}`{{{f{AAf}}e}{{A`{BD`n}}}{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{{{f{AAf}}{Gb{Ab}}{f{BDb}}}{{A`{{Gl{Ab{Gb{Ab}}C`}}n}}}}1{{{f{AAf}}{Gb{Ab}}dd}{{A`{BD`n}}}}{{{f{BCh}}{f{Dbc}}}bADf}{{{f{AAf}}{Cf{Fj}}}AAf}{{{f{AAf}}}Fj}{{{f{AAf}}{f{{Bj{Ab}}}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{{Bj{Ab}}}}}{{A`{{f{DbAAf}}n}}}}{{{f{DbAAf}}{f{{Bj{Ab}}}}}{{f{DbAAf}}}}{{{f{AAf}}{Mn{Fj}}}f}{{{f{AAf}}{BDd{Fj}}}f}{{{f{AAf}}BDf}f}{{{f{AAf}}Fj}f}{{{f{AAf}}{f{Bf}}}f}{{{f{AAf}}{BDh{Fj}}}f}{{{f{AAf}}{BDj{Fj}}}f}{{{f{AAf}}{BDl{Fj}}}f}{{}Fj}0000{{{f{DbAAf}}Fjc}{{A`{{f{DbAAf}}n}}}BCd}{ce{}{}}000000{{AAf{f{Bf}}}{{l{j}}}}{{{f{AAf}}}{{A`{{l{Al}}n}}}}{{{f{AAf}}}d}1{{{f{AAf}}}{{Fl{Ab}}}}{{{f{AAf}}}{{`{{Cn{}{{Ch{AAf}}}}}}}}{{{f{AAf}}AOfd}BDn}{{{f{AAf}}}BE`}{AAfBEb}{{{f{AAf}}}Fj}{{{f{AAf}}}{{A`{{Cf{Ab}}n}}}}{{{f{AAf}}BCf}{{A`{{Cf{Ab}}n}}}}122{{{Gb{c}}}{{A`{AAfn}}}BCd}{{{Gb{Ab}}}AAf}{{{Gb{Ab}}}{{A`{AAfn}}}}{{{f{DbBDn}}}Cf}{{{f{DbBE`}}}Cf}{{{f{AAf}}}AAf}{{AAfe}{{A`{cn}}}{}{{Dj{AAf}{{Ad{{A`{cn}}}}}}}}{{{f{DbAAf}}e}{{A`{cn}}}{}{{Dj{{f{DbAAf}}}{{Ad{{A`{cn}}}}}}}}{{AAfgc}{{A`{en}}}{}{}{{Dj{AAfc}{{Ad{{A`{en}}}}}}}}{{{f{DbAAf}}}{{Cf{Ab}}}}{{{f{AAf}}{f{AAf}}}d}{{{f{DbAAf}}{f{Bf}}{f{Bf}}}{{A`{{f{DbAAf}}n}}}}{{{f{DbAAf}}{f{Bf}}c}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}Fjc}{{A`{{f{DbAAf}}n}}}BCd}18{{{f{AAf}}{Gb{Ab}}{f{BEd}}}{{A`{{Gl{Ab{Gb{Ab}}C`}}n}}}}`{{{f{AAf}}{f{Ab}}dd{Cf{Jh}}}{{A`{AAfn}}}}0{{{f{AAf}}Fjdd{Cf{Jh}}}{{A`{AAfn}}}}{{{f{AAf}}}BCb}{{{f{AAf}}{f{AAf}}}{{A`{bn}}}}{{{f{AAf}}e}{{A`{AAfn}}}{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{{{f{AAf}}Fj}{{Cf{{f{Ab}}}}}}{{{f{AAf}}c}{{A`{AAfn}}}{{BEf{Fj}}}}2{{{f{AAf}}c}{{A`{{Gb{Ab}}n}}}{{BEh{{BA`{B@n}}}}}}{{{f{AAf}}e{f{{Mf{BCb}}}}}{{A`{AAfn}}}{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{{{f{AAf}}e{f{BCb}}}{{A`{AAfn}}}{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{{{f{DbAAf}}{f{{Bj{c}}}}}{{A`{bn}}}{{I`{Bf}}}}{{{f{AAf}}}{{Gl{FjFj}}}}{{{f{AAf}}Gh}AAf}{{{f{AAf}}}d}{{{f{DbAAf}}}b}{{{f{BDn}}}{{Gl{Fj{Cf{Fj}}}}}}{{{f{BE`}}}{{Gl{Fj{Cf{Fj}}}}}}{{{f{AAf}}GhFj}AAf}00{{{f{AAf}}cFb}{{A`{AAfn}}}{{BEh{{BA`{B@n}}}}}}{{{f{DbAAf}}cFb}{{A`{{f{DbAAf}}n}}}{{BEh{{BA`{B@n}}}}}}{{{f{AAf}}Gh}{{Gl{AAfAAf}}}}0{{{f{DbAAf}}}{{`{{Cn{}{{Ch{AAf}}}}}}}}{{AAfFjd}{{Gb{AAf}}}}{{{f{AAf}}BCf}{{A`{{Cf{Ab}}n}}}}{{{f{AAf}}{Cf{Fj}}}AAf}{{{f{AAf}}{f{{l{F`}}}}}{{A`{AAfn}}}}{AAf{{Gb{Ab}}}}{{{f{AAf}}{f{{l{F`}}}}}AAf}{{{f{AAf}}{f{{l{F`}}}}d}AAf}{{{f{AAf}}}{{f{AAf}}}}{{{f{AAf}}BEj}{{A`{{A@n{AA`{A@l{{A@j{Fj}}}}}}n}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Ef{}}{{{f{DbAAf}}{Cf{{f{Bf}}}}{Cf{{AAb{Ef{Gb{Ef}}}}}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{Bf}}e}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DbAAf}}Fje}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}000{BEl{{A`{AAfn}}}}{{{Gl{{BEn{{Cl{Cj}}}}{f{{Bj{B@d}}}}}}}{{A`{AAfn}}}}2{{c{f{BCb}}}{{A`{AAfn}}}{{Cn{}{{Ch{{A`{{f{BCn}}n}}}}}}}}{{{f{AAf}}{f{Bf}}}{{A`{Fjn}}}}44444{{{f{c}}}AAd{}}0000{{{f{AAf}}{Cf{{f{{Bj{Ef}}}}}}BCh{Cf{{Gl{GhFj}}}}}{{A`{AAfn}}}}{{{f{AAf}}d{Cf{{f{{Bj{Ef}}}}}}BCh{Cf{{Gl{GhFj}}}}}{{A`{AAfn}}}}1{{{f{AAf}}c}{{A`{AAfn}}}{{BEh{Ef}}}}{{{f{AAf}}c{f{Bf}}BF`}{{A`{AAfn}}}{{BEh{Ef}}}}0{{{f{AAf}}{f{AAf}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{AAf}}}{{A`{{f{DbAAf}}n}}}}{{{f{DbAAf}}{f{AAf}}}b}{ce{}{}}0000{{{f{AAf}}}Fj}{{{f{DbAAf}}c}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}c{f{BCb}}}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}Ab}{{f{DbAAf}}}}{{{f{AAf}}{f{Bf}}{Cf{In}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{Bf}}{Cf{In}}}{{f{DbAAf}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{BFb}}}BFb}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}BFb}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{BFb}}{f{BFb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BFb}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{BFb}}{f{Dbc}}}bADf}`{{}Fj}{ce{}{}}`{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BD`}}}{{A`{AAfn}}}}`{{{f{BFd}}}{{f{{Bj{{BFf{In}}}}}}}}{{{f{BD`}}c}{{A`{AAfn}}}{{Af{AAf}{{Ad{{A`{AAfn}}}}}}IbId}}{{{f{C`}}}{{l{Ah}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000{{{f{BFd}}}BFd}{{{f{C`}}}C`}{{{f{BD`}}}BD`}{{{f{BFh}}}BFh}{{{f{c}}{f{Dbe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BFd}{{}C`}{Fj{{f{c}}}{}}000{{{f{BFj}}}f}1111{Fj{{f{Dbc}}}{}}0000000`{{BFlc}{}BFn}{Fjb}000{{{f{DbBFd}}}b}1111{{{f{BFd}}{f{BFd}}}d}{{{f{C`}}{f{C`}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BG`}}}In}{{{f{BFd}}}{{f{{Bj{In}}}}}}{{{f{BD`}}}{{A`{AAfn}}}}{{{f{DbBFd}}}{{f{Db{Gb{In}}}}}}{{{f{BFd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{C`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BD`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BFh}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{Bf}}BFh}Ef}{cc{}}000{{{Gb{{Gb{{Gl{In{BFf{In}}}}}}}}}BFd}{{{Gb{{Gl{In{BFf{In}}}}}}}BFd}{{{Gb{{Gl{{Gb{In}}{Gb{{BFf{In}}}}}}}}}BFd}3{BFdC`}444{BGbBFh}{cBFd{{Hh{}{{Ch{{Gl{In{BFf{In}}}}}}}}}}{cBFd{{Ih{}{{Ch{{Gl{In{BFf{In}}}}}}}}}}{{{f{C`}}Fj}BG`}{{{f{BD`}}}{{f{C`}}}}{{{f{DbBD`}}}{{f{DbC`}}}}{{{f{C`}}}{{l{F`}}}}{{{f{BGd}}dd}{{A`{C`n}}}}{{{f{BD`}}}{{A`{AAfn}}}}{{{f{DbC`}}}{{f{DbBFd}}}}{{}Fj}0000000{ce{}{}}0000000{C`BFd}1{{{f{BFd}}}}{BFd}310{{{f{BG`}}}d}{{{f{C`}}}d}{{{f{BFd}}}d}{{{f{BFd}}}{{BGh{{BGf{{Fl{In}}}}{Fl{{BFf{In}}}}}}}}{{{f{C`}}}BGj}{{{f{BD`}}}{{Gb{Ab}}}}{{{f{BD`}}{Cf{{Gl{GhFj}}}}}{{Gb{Ab}}}}={{{f{BG`}}}Fj}{{{f{C`}}}Fj}?????{{{Gb{In}}{Gb{{BFf{In}}}}d}BFd}{{{f{AAf}}{Gb{Ab}}C`{Cf{{Gb{Ef}}}}}BD`}{{{f{DbBGj}}}Cf}{{{f{DbBGj}}Fj}Cf}{{{f{BD`}}c}{{A`{AAfn}}}{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IbId}}{{{f{c}}}{}{}}{{{f{C`}}}BFl}{{{f{BD`}}M`Oh}{{A`{AAfn}}}}{{BD`e}BD`{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{{{f{C`}}GhFj}BFj}{{{f{DbBFd}}}b}{{{f{DbC`}}}b}{{{f{BD`}}Bh}{{A`{AAfn}}}}{{{f{BD`}}}{{A`{AAfn}}}}{C`{{Gb{In}}}}0{BD`C`}{{{f{DbBD`}}}C`}{{{f{c}}}e{}{}}000{{{f{c}}}Ef{}}{c{{A`{e}}}{}{}}000000000000000{{{f{c}}}AAd{}}0000000{C`C`}{{{f{C`}}}{{f{BFd}}}}{{{f{C`}}}{{f{{Gb{{A@j{In}}}}}}}};{ce{}{}}0000000`````{{{f{BFd}}c}Ab{{Dj{{Gl{In{f{{BFf{In}}}}}}}{{Ad{Cf}}}}IbId}}{{{f{BFd}}c}Ab{{Dj{{Gl{In{f{{BFf{In}}}}}}}{{Ad{}}}}IbId}}{{{f{{Bj{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{Cf}}}}IbId}}{{{f{{Bj{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{}}}}IbId}}{{{f{{Bj{c}}}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gl{InIn}}}}}}Ij}}{{{f{{Bj{c}}}}{f{Hj}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gl{InIn}}}}}}Ij}}{{{f{{l{c}}}}InIn}{{l{c}}}Dh}{{{f{{Gb{{A@j{In}}}}}}{f{{Bj{{Cl{Cj}}}}}}}d}{{{f{BH`}}{f{C`}}}Ab}{{BHbBHb}BHb}0`{{{f{BHd}}{f{AAf}}{f{C`}}}{{A`{Abn}}}}{{{f{BHd}}}{{A`{{f{Bf}}n}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{DbBHf}}Il}{{Cf{b}}}}{{{f{DbBHh}}{f{Il}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{{{f{BHf}}}BHf}{{{f{BHh}}}BHh}{{{f{BCn}}}BCn}{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Bj{c}}}}}Eh{{Hl{Eh}}}}{{}BCn}{Fj{{f{c}}}{}}00{Fj{{f{Dbc}}}{}}00{Fjb}00{{{f{BCn}}{f{BCn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCn}}{f{DbHb}}}{{A`{bHd}}}}{{{Gl{{f{Eh}}Fj}}}BHf}{cc{}}0{{{Gl{{f{Eh}}Fj}}}BHh}1{{eFj}BCb{{B@`{Eh}}}{{Cn{}{{Ch{{Gb{{Gl{Efc}}}}}}}}}}{{}Fj}00{ce{}{}}00{BHfAb}{BHhAb}{{{f{Eh}}Fj}BHf}{{{f{Eh}}Fj}BHh}{{{Gb{Il}}}BCn}{{{f{DbBHf}}Fj}Ab}{{{f{DbBHh}}Fj}Ab}{{{f{{Bj{BCn}}}}{Cf{Fj}}}{{A`{BCbn}}}}0{{{f{{Bj{BCn}}}}{Cf{Fj}}}{{A`{{Gb{Eh}}n}}}}{{{f{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00<<<{{{f{{Bj{AAf}}}}}{{A`{AAfn}}}}{{{f{{Bj{AAf}}}}d}{{A`{AAfn}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAf{f{{Bj{{f{Bf}}}}}}{f{{Bj{{f{Bf}}}}}}{Cf{{f{Bf}}}}{f{AAf}}}AAf}{{BEbc}{{A`{AAfn}}}{{Dj{BHj{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BIb}}{f{{Bj{In}}}}dd}AAf}{{{f{BIb}}{f{AAf}}{f{Ab}}{f{Ab}}BId}{{A`{AAfn}}}}{{{f{Bf}}{f{Bf}}}Ef}{{{f{BEl}}Fj}{{Gl{BElBEl}}}}{{{f{BIf}}{f{{Bj{A@`}}}}Lf}AAf}0{{{f{BIf}}{f{{Bj{A@`}}}}}AAf}0{{{f{BIh}}{Cf{{Gb{{f{Bf}}}}}}{Cf{{f{Bf}}}}d}{{A`{AAfn}}}}{{BEbd}BEb}{{{BIj{c}}{Cf{{Mf{BIl}}}}}{{BIj{c}}}BIn}{{{f{Ab}}}{{A`{Abn}}}}{BJ`BJ`}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{BJdBJd}}{{{f{BF`}}Gh{Cf{{f{AM`}}}}}{{A`{Ghn}}}}0{{{f{BJf}}{f{Ab}}}{{A`{Abn}}}}1{{BJhc}BEb{{I`{{Bj{BJ`}}}}}}6`{{BJ`{f{Bf}}}BJ`}{{}BJ`}{{BJ`d}BJ`}{{}BJj}{c{{A`{BJ`n}}}{{I`{{Bj{BJ`}}}}}}{{{f{{Mf{ce}}}}}{{f{e}}}OnBJl}{{BJnd}BJn}`{{{f{BK`}}}d}00`{{BJ`c}BJ`{{B@`{BJ`}}}}{{{Mf{BK`}}BKb}{{A`{BEbn}}}}75{{BJ`cd}BJ`{{B@`{BJ`}}}}{{{f{DbABl}}}b}{{{f{DbABn}}}b}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABn}}{Cf{c}}}b{}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABn}}c}b{}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dl}}{{BJhc{Mf{BCb}}}BEb{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IbId}}{{BJ`c{BKf{{Mf{BKd}}}}}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{BJ`BJ`c{BKf{{Mf{BKd}}}}}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{{f{BJ`}}{f{Dbc}}f}{{A`{BKhn}}}{{Af{{f{BJ`}}f}{{Ad{{A`{BKhn}}}}}}}}{{{f{AHb}}{f{Dj}}}AHb}{{{f{AHb}}{f{Dj}}}{{l{c}}}Dh}{{BJ`c{f{{Bj{BJ`}}}}{BKf{{Mf{BKd}}}}}BJ`{{Dj{{f{Db{Bj{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{BJ`BKj{f{{Bj{BJ`}}}}dd}BJ`}{{ce{BKf{{Mf{BKd}}}}d}BJ`{{Dj{{f{Db{Bj{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}{{I`{{Bj{BJ`}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}i{f{Db{Bj{g}}}}}b{}{}{}{{Dj{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{e}{{Ad{c}}}}Dl}}{{BJ`BJ`GhEh}BJ`}{BEl{{Mf{Cj}}}}{{{f{BKl}}}{{Cf{Fj}}}}{BKnBJ`}{BL`BJ`}{BJ`BJ`}3210{{{f{AHd}}En}{{l{F`}}}}{{BJ`En}BJ`}{{{f{BLb}}En}{{l{F`}}}}{{cFb}BJ`{{I`{{Bj{BJ`}}}}}}{{{f{AHd}}{f{{Bj{Ab}}}}{f{Fb}}}{{A`{{l{F`}}n}}}}{{{f{AHf}}}{{A`{{l{F`}}n}}}}6{{{f{BLb}}}{{A`{{l{F`}}n}}}}{cBJ`{{B@`{BJ`}}}}{{{f{BLd}}}{{f{{Bj{Ob}}}}}}``{BJ`BKn}{eAMh{}{{Hh{}{{Ch{c}}}}}}{cBEl{{Hh{}{{Ch{{Cf{b}}}}}}}}{cBEl{{Hh{}{{Ch{b}}}}}}2{{AFne}AMj{}{{Hh{}{{Ch{c}}}}}}0{{AFnc}BEl{{Hh{}{{Ch{{Cf{b}}}}}}}}{{AFnc}BEl{{Hh{}{{Ch{b}}}}}}`{{{f{Db{BLf{c}}}}}{{A`{BCln}}}BLh}{{{f{BK`}}}{{f{AG`}}}}{{{f{BLb}}}{{f{AG`}}}}{{{f{BLj}}}{{f{AG`}}}}{{{f{BEl}}}{{f{AG`}}}}{{{f{DbBLb}}}{{f{DbAG`}}}}{{{f{DbBEl}}}{{f{DbAG`}}}}{{{f{Ln}}}Il}{{{f{BLl}}}{{f{{l{Aj}}}}}}{{{f{BLn}}{Cf{{f{Bf}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLn}}{Cf{{f{Bf}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLn}}{Cf{{f{Bf}}}}Kfdd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLn}}{Cf{{f{Bf}}}}Kfd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{{Mf{c}}}}}BM`{BMbOn}}{{{f{BMd}}}{{f{{l{Ah}}}}}}{{{f{{Mf{ce}}}}}{}OnBJl}{{{f{{Mf{c}}}}}MlBMf}{{{f{BMh}}}{{f{BJ`}}}}{{{f{{Mf{ce}}}}}{{f{c}}}OnBJl}{{{f{AMl}}}{{f{Eh}}}}{{{f{BMj}}}{{f{Ab}}}}{{{f{DbBLb}}}{{A`{Fjn}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bj{c}}}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{BMl}}}{{f{{l{Bd}}}}}}{{{Gb{BJ`}}}BJ`}{{{f{BLn}}{Cf{{f{Bf}}}}d}{{A`{{Kb{LbKd}}n}}}}{{{Mf{{Bj{{BMn{c}}}}e}}}{{Mf{{Bj{c}}e}}}{}BJl}{{{Mf{{BMn{c}}e}}}{{Mf{ce}}}{}BJl}{{{f{Bf}}}BJ`}{{BJ`{Cf{In}}}BJ`}{{{f{BN`}}}{{A`{{l{Bd}}n}}}}{{{f{BN`}}}{{l{Bd}}}}{{{f{{Kb{KhKd}}}}{f{Kf}}{f{AM`}}}{{Kb{KnKd}}}}`{{{BIj{{Cl{BIn}}}}{Cf{{Mf{BCb}}}}}{{A`{BNbn}}}}{{{BNd{c}}{f{BCb}}}{{A`{{BNf{c}}n}}}BNh}{{{BNj{c}}{f{BCb}}}{{A`{{BNl{c}}n}}}BNh}{{{BNn{c}}Fj}{{A`{BO`n}}}BIn}{{{BOb{c}}{f{BCb}}}{{A`{{BOd{c}}n}}}BNh}{{{f{Db{BIj{c}}}}}{{A`{BOfn}}}BIn}`{BJ`BOh}{{BJ`BOjBJ`}BJ`}{{BJdBJd}}{{BJjBJj}BJj}{{{f{BLb}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbBJj}}BJj}b}210{{{f{BJj}}}In}04321{{{f{c}}}{{f{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mf{ce}}}}}{{f{c}}}OnBJl}1111111111111111{{{f{Dbc}}}{{f{Dbe}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BEbIncFb}BEb{{I`{{Bj{BJ`}}}}}}{BEl{{Cl{Cj}}}}``{BEbBEb}```{{{f{BOl}}{f{Bf}}}{{A`{Efn}}}}{{BOn{Gb{BJ`}}}{{A`{BJ`n}}}}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{BLj}}{f{Db{Bj{Ab}}}}}{{A`{{Cf{Ab}}n}}}}{{{f{C@`}}AbAb}{{A`{Abn}}}}{{BOn{Gb{BJ`}}}BJ`}{{{f{C@b}}}b}{{BJ`Eh}BJ`}{{{f{BLb}}{f{Eh}}Ff}{{A`{Abn}}}}{{BEb{C@d{{f{Bf}}EhA@d}}d}BEb}{{{f{AHh}}{f{Eh}}}{{A`{Abn}}}}3{{{f{ANn}}{f{Eh}}}{{A`{Abn}}}}{{BEbEhd}BEb}2{{{f{AHh}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{ANn}}{f{Eh}}Ff}{{A`{Abn}}}}{{BJ`EhFf}BJ`}`{BJ`C@f}{{{f{{Mf{c}}}}}{{Cf{{f{ALb}}}}}{ALbOn}}{BJ`BJ`}{{{f{C@h}}}{{A`{Abn}}}}1`{{{f{C@j}}}{{A`{{l{Jn}}n}}}}{{{f{BEl}}Fj}d}{{{BNn{c}}{f{BCl}}}{{A`{{BNn{c}}n}}}BIn}{{{f{C@l}}{f{Ab}}}{{A`{Abn}}}}{{{f{BLb}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@l}}c}{{A`{Abn}}}Bb}{{{f{BLb}}}{{G`{{Fl{{Cl{Cj}}}}{Fn{{f{{Cl{Cj}}}}}{{Ad{Fj}}}}}}}}``{{{f{BLb}}}{{f{{Gb{{Cl{Cj}}}}}}}}{{{f{DbBLb}}}{{f{Db{Gb{{Cl{Cj}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BJ`BJ`BJ`}BJ`}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BJ`BJ`}BJ`}10{{{f{C@b}}}C@b}{{{f{BEb}}}BEb}{{{f{BJh}}}BJh}{{{f{BKb}}}BKb}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{BDb}}}BDb}{{{f{BEd}}}BEd}{{{f{CAh}}}CAh}{{{f{BF`}}}BF`}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{AAh}}}AAh}{{{f{A@`}}}A@`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{BId}}}BId}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{BMh}}}BMh}{{{f{BJ`}}}BJ`}{{{f{CFd}}}CFd}{{{f{BOj}}}BOj}{{{f{{BKf{c}}}}}{{BKf{c}}}AD`}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{BKj}}}BKj}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{BJd}}}BJd}{{{f{BOn}}}BOn}{{{f{BJj}}}BJj}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{{Mf{ce}}}}}{{Mf{ce}}}On{BJlAD`}}{{{f{CHh}}}CHh}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{Oj}}}Oj}{{{f{BEj}}}BEj}{{{f{BEl}}}BEl}{{{f{Ln}}}Ln}{{{f{BCb}}}BCb}{{{f{B@d}}}B@d}{{{f{BCl}}}BCl}{{{f{Oh}}}Oh}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{BLb}}}{{Mf{BLb}}}}{{{f{c}}{f{Dbe}}}b{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{c}}}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CId}}}{{Cf{{f{CIf}}}}}}{{{f{C@n}}}{{Cf{{f{CIf}}}}}}{{{f{CAb}}}{{Cf{{f{CIf}}}}}}``{{{f{BF`}}{f{BF`}}}BAh}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}BAh{CIhOn}BJl}{{{f{{Bj{BJ`}}}}}BJ`}{{BJnCC`}BJn}{{{f{CC`}}{f{CCd}}}d}`{{{f{{Bj{Ab}}}}}{{A`{Abn}}}}{{{f{Bf}}}BJ`}{BEb{{A`{AAfn}}}}{c{{A`{{Gb{AAf}}n}}}{{Ih{}{{Ch{BEb}}}}}}{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{ADh{f{Bf}}}{{l{c}}}Dh}{{ADj{f{{l{c}}}}}{{l{c}}}Dh}10{{ADj{f{Bf}}Eh}{{l{c}}}Dh}0{BEb{{A`{C@bn}}}}{cBJ`{{BEh{Ef}}}}{{{f{CHh}}Fj}CIj}``{{{f{BIh}}{Gb{{f{Bf}}}}{Cf{{f{Bf}}}}d}{{A`{AAfn}}}}`{{{f{c}}{f{e}}}BAh{}{}}0{BJjBJj}```{{{f{CEj}}}{{A`{{Mf{BCb}}n}}}}{{cCHl}{{A`{BEbn}}}{{I`{{Bj{BEb}}}}}}{{{f{BN`}}{f{{l{Bd}}}}}{{l{Bd}}}}{{ed}{{A`{BJ`n}}}{{B@`{BJ`}}AD`}{{I`{{Bj{c}}}}}}{{{f{CId}}{Gb{BEb}}}{{A`{BEbn}}}}{{{f{C@n}}{Gb{BEb}}}{{A`{BEbn}}}}44{e{{A`{BJ`n}}}{{B@`{BJ`}}AD`}{{I`{{Bj{c}}}}}}{{c{f{Bf}}d}BJ`{{I`{{Bj{BJ`}}}}}}{{BKnc}BJ`{{B@`{BJ`}}}}{{{f{CIl}}{f{{Bj{Bh}}}}}{{l{Al}}}}{{{f{BN`}}{f{Bf}}d}{{A`{{l{Al}}n}}}}{{BL`c}BJ`{{B@`{BJ`}}}}{{{f{BJj}}BJj}d}{{{f{BCb}}{f{Bf}}}d}{{{f{CIl}}{f{{l{Aj}}}}}{{l{Al}}}}{{{f{BN`}}{f{{l{Bd}}}}dd}{{A`{{l{Al}}n}}}}{{{f{BN`}}{f{Bf}}}{{A`{{l{Al}}n}}}}{{{f{Cj}}{f{AFn}}}{{Cl{Cj}}}}{{{f{Ab}}Fj}{{A`{{l{F`}}n}}}}{BEbBEb}{{{CIn{c}}}{{A`{Fjn}}}BIn}{BJ`BJ`}{{{f{BN`}}{f{Bf}}d}{{A`{{l{F`}}n}}}}{{{f{BN`}}{f{{l{Bd}}}}d}{{A`{{l{F`}}n}}}}{{{f{CJ`}}Bh{Cf{Bh}}{Cf{{f{CBh}}}}Bhd}{{A`{Fjn}}}}{{{ANh{Bf}}}Eh}{{{f{BIb}}{f{{Bj{A@`}}}}d}AAf}`{{BEbBEb{Cf{Ef}}}BEb}{{{f{CJb}}{f{AAf}}{Cf{{f{Bf}}}}{Cf{{Gl{GhFj}}}}}{{A`{AAfn}}}}{{{f{CJb}}{f{AAf}}{Cf{{Gl{GhFj}}}}d}{{A`{{Gl{AAfAAf}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BJ`d}BJ`}{{BJ`ced}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbIdAD`}{{I`{{Bj{BJ`}}}}}}212121{{ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbIdAD`}{{I`{{Bj{BJ`}}}}}}32{{CJdBJ`Fjd}BJ`}`{{{f{BEl}}}{{f{AFn}}}}{{{f{B@d}}}{{f{AFn}}}}```{{BJ`BJ`BF`CAj}BJ`}`{CGbBJ`}`{{BJ`BJ`BF`CAj{Cf{Kf}}{Cf{Ef}}}BJ`}0{ALnGh}00{{{f{CJf}}}{{l{N`}}}}{{{f{CJh}}}{{l{N`}}}}{{{f{C@j}}}{{A`{{l{N`}}n}}}}`{{{f{CJj}}}{{l{Kd}}}}{{{f{BF`}}}Gh}`{{{f{BF`}}}d}```{{}b}{cbBJl}{{}BEb}{{}BKb}{{}CA`}{{}CAd}{{}CJl}{{}BDb}{{}BEd}{{}CAn}{{}CBb}{{}CBd}{{}CBf}{{}CBl}{{}BId}{{}CBn}{{}CC`}{{}CCb}{{}CCh}{{}CCj}{{}CCl}{{}CCn}{{}CD`}{{}CDb}{{}CDh}{{}CDj}{{}CDn}{{}CE`}{{}CEb}{{}CEj}{{}BJ`}{{}{{BKf{{Mf{BKd}}}}}}{{}{{BKf{{Mf{CJn}}}}}}{{}{{BKf{{Mf{C@`}}}}}}{{}CGb}{{}CGd}{{}CGh}{{}CGj}{{}CGl}{{}CGn}{{}CHb}{{}BJj}{{}CHd}{{}{{Mf{CK`}}}}{{}{{Mf{Bf}}}}{{}{{Mf{c}}}CKb}{{}{{Mf{{Bj{c}}}}}{}}{{}CHj}{{}CHl}{{}Oj}{{}BEj}{{}BCb}{{}B@d}{{}BCl}{{}Oh}`{{}{{AAb{{Gb{AAh}}{Gb{A@`}}}}}}{Fj{{f{c}}}{}}00{{{f{{ALj{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BKf{c}}}}}f{}}22222222222222222222222{{{f{{Mf{ce}}}}}{{f{c}}}OnBJl}333333333333333{Fj{{f{Dbc}}}{}}0{{{f{Db{ALj{c}}}}}{{f{Db}}}{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CEj}}}{{A`{Efn}}}}{{{f{BEb}}}{{A`{Efn}}}}0001{{{f{{Mf{c}}}}}{{f{Bf}}}{ALbOn}}{{{f{B@d}}{f{CKd}}}{{A`{CKfn}}}}```{{{f{Ab}}GhCKh}{{A`{Abn}}}}{{BL`GhCKh}BJ`}{{BJ`GhCKh}BJ`}{{BJjBJj}BJj}{{{f{CEj}}}{{A`{{`{BC`}}n}}}}``{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BJf}}{f{Ab}}}{{A`{Abn}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{Mf{AG`c}}}{{A`{{Mf{ec}}{Mf{AG`c}}}}}BJl{AG`IbId}}{{{Mf{AG`c}}}{{Mf{ec}}}BJl{AG`IbId}}{{{f{{Mf{ce}}}}}{{CKj{ce}}}On{AD`BJl}}{Fjb}0000000{{{f{DbC@b}}}b}1{{BEbe}BEb{{B@`{BJd}}}{{Hh{}{{Ch{c}}}}}}222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Db{Mf{ce}}}}}bOnBJl}3333333333333333{BJ`BJ`}2{{BEb{Cf{{Gb{BJ`}}}}}BEb}1{{{f{BLb}}}Ab}{{{f{{Kb{KhKd}}}}{f{Kf}}{f{AM`}}}{{Kb{KnKd}}}}`{BJ`CKl}{{{f{ANn}}}{{f{Eh}}}}{{{f{BLb}}}{{f{Eh}}}}{{{f{Ln}}}{{f{Eh}}}}`{{{f{Eh}}}BJ`}{cBJ`{{I`{{Bj{Eh}}}}}}`{CGdBJ`}{{}BJj}{{}CHd}{{{f{c}}}e{}{{CL`{CKn}}}}0`{{{f{CIl}}{f{{Bj{Bh}}}}}{{l{Al}}}}{{{f{CIl}}{f{{l{Aj}}}}}{{l{Al}}}}{{BF`{f{Eh}}{f{Bf}}}{{A`{bn}}}}{{BF`{Cf{{f{Bf}}}}{f{Bf}}}{{A`{bn}}}}{{{f{c}}{f{c}}}{{A`{bn}}}CLb}{{{f{CLd}}{f{Bf}}}{{A`{bn}}}}`{{{f{CAf}}{f{CAf}}}d}{{{f{BDb}}{f{BDb}}}d}{{{f{BEd}}{f{BEd}}}d}{{{f{BF`}}{f{BF`}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{AAh}}{f{AAh}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{BId}}{f{BId}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{BMh}}{f{BMh}}}d}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{BJ`}}{f{BJ`}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{BOj}}{f{BOj}}}d}{{{f{{BKf{Ab}}}}{f{{BKf{Ab}}}}}d}{{{f{{BKf{{Mf{c}}}}}}{f{{BKf{{Mf{c}}}}}}}dOn}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{BKj}}{f{BKj}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CGn}}{f{CGn}}}d}{{{f{CH`}}{f{CH`}}}d}{{{f{CHb}}{f{CHb}}}d}{{{f{BJd}}{f{BJd}}}d}{{{f{CKf}}{f{CKf}}}d}{{{f{CHd}}{f{CHd}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{{Mf{CLf}}}}{f{CLf}}}d}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{CLhOn}BJl}{{{f{{Mf{Cj}}}}{f{Cj}}}d}{{{f{CHj}}{f{CHj}}}d}{{{f{CHl}}{f{CHl}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{BEj}}{f{BEj}}}d}{{{f{BEl}}{f{BEl}}}d}{{{f{BEl}}{f{{f{Cj}}}}}d}{{{f{BCb}}{f{BCb}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{BCl}}{f{BCl}}}d}{{{f{Oh}}{f{Oh}}}d}{{{f{CIb}}{f{CIb}}}d}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CLjBJ`d}BJ`}``{{BJ`c}BJ`{{BEh{Ef}}}}{{BJ`c}BJ`{{I`{{Bj{Eh}}}}}}{{{f{Dbc}}e}{{A`{{f{Dbg}}BBn}}}{}CLl{}}{{{f{{Bj{CJ`}}}}d{Cf{{f{CIf}}}}}{{A`{{Mf{{Gb{CJ`}}}}n}}}}{{{f{{Bj{CJ`}}}}d{Cf{{f{CIf}}}}d}{{A`{{Gl{{Mf{{Gb{CJ`}}}}Fj}}n}}}}{{{f{{Bj{c}}}}{f{{Bj{c}}}}}d{{I`{CLn}}}}{{{f{BEb}}d}{{A`{Efn}}}}{{BEbe}BEb{{B@`{BJd}}AD`}{{I`{{Bj{c}}}}}}{{{f{AHn}}}{{A`{Abn}}}}{BJ`BJ`}{{{f{AHn}}}{{A`{{Gl{Ab{Gj{Gh}}}}n}}}}`{{{f{DbBJj}}c}b{{Hh{}{{Ch{BJj}}}}}}{{BJ`BJ`BJ`}BJ`}{{{f{BN`}}{f{{l{Bd}}}}Fj}{{A`{{l{Bd}}n}}}}{A@`{{Gl{InIn}}}}{{{f{BN`}}{f{Bf}}}{{A`{{l{Ah}}n}}}}{{{f{BN`}}{f{{l{Bd}}}}}{{A`{{l{Ah}}n}}}}{{{f{BN`}}{f{Bf}}{f{Eh}}}{{A`{Abn}}}}{{{f{ABl}}}d}{{{f{C@b}}}{{Cf{{A`{AAfn}}}}}}{{BEbFj}{{A`{AAfn}}}}{{{f{C@b}}}{{A`{AAfn}}}}{{{f{ABl}}}{{f{Ob}}}}{{{f{BLb}}}{{Dn{Ob}}}}{{CM`Gh}BJ`}{{CM`{f{Bf}}}BJ`}{{CM`{f{{Bj{c}}}}}BJ`{{I`{Bf}}}}{{{f{BEl}}}{{f{{Bj{B@d}}}}}}``{{BEbc}BEb{{B@`{BJ`}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}`10{{BJ`AHj}BJ`}{{{f{AI`}}c}{{A`{AI`n}}}{}}{{{f{AIb}}{f{{l{Al}}}}}{{A`{{l{c}}n}}}Dh}{{{f{BLb}}{f{{l{Al}}}}}{{A`{Abn}}}}{{BEbBJ`}BEb}5{{BClc}BCl{{Dj{Fj{f{B@d}}}{{Ad{d}}}}}}{{{f{BN`}}{f{Bf}}d}{{A`{{l{F`}}n}}}}{{{f{BN`}}{f{{l{Bd}}}}dd}{{A`{{l{F`}}n}}}}{{{f{BN`}}{f{Bf}}}{{A`{{l{F`}}n}}}}{CMb{{A`{AAfn}}}}{{{f{DbCMd}}{f{DbAAf}}}{{A`{bn}}}}{ABn{{l{c}}}Dh}{{ANl{f{{l{F`}}}}{f{{l{F`}}}}}{{A`{{l{F`}}n}}}}{BJnBEb}{CId{{A`{BEbn}}}}{{{BIj{c}}}{{A`{AAfn}}}BIn}{C@n{{A`{BEbn}}}}{CAb{{A`{BEbn}}}}{{{f{Db{BNd{c}}}}{f{DbAAf}}}{{A`{bn}}}BNh}{{{CMf{c}}}{{A`{AAfn}}}BIn}{{{BLf{c}}}{{A`{AAfn}}}BLh}{{{f{Db{CMh{c}}}}{f{DbAAf}}}{{A`{bn}}}BNh}{{{f{Db{BNj{c}}}}{f{DbAAf}}}{{A`{bn}}}BNh}{{{f{Db{CMj{c}}}}{f{DbAAf}}}{{A`{bn}}}BNh}{{{CMl{c}}}{{A`{AAfn}}}BIn}{{{CIn{c}}}{{A`{AAfn}}}BIn}{{{BNn{c}}}{{A`{AAfn}}}BIn}{{{BOb{c}}{f{DbAAf}}}{{A`{Jhn}}}BNh}{{{f{DbABl}}}{{l{Ah}}}}><;{{{CMf{c}}{Cf{{Mf{BIl}}}}d}{{A`{AAfn}}}BIn}{{{f{BO`}}Fj}d}{{}BJ`}{BEbBEb}{BL`BJ`}{BJ`BJ`}`0```{{}{{BKf{{Mf{BKd}}}}}}{{{f{C@h}}}{{A`{Abn}}}}2{{BJ`BJ`}BJ`}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Db{Mf{AFd}}}}}{{A`{bBBn}}}}{{{f{BLj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{C@`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BOl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CAf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BDb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BEd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CAh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BF`}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CAj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CAl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CAn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{AAh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{A@`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BK`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CMn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BId}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CBn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CC`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CCb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CCd}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CCf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CCh}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CCj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CCl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CCn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CD`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CDn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CE`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CEb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CEd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CEf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CEh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BJ`}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CFd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BOj}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{{BKf{c}}}}{f{DbHb}}}{{A`{bHd}}}{}}{{{f{CFf}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CFh}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CFj}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CFl}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CFn}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CG`}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{BKj}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{CGb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CGd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CGf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CGh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CGj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CGl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CGn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CH`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BJd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BOn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BJj}}{f{DbHb}}}{{A`{bHd}}}}0000{{{f{CKf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHd}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{{Mf{ce}}}}{f{DbHb}}}{{A`{bHd}}}OnBJl}{{{f{{Mf{ce}}}}{f{DbHb}}}{{A`{bHd}}}{BC`On}BJl}{{{f{{Mf{ce}}}}{f{DbHb}}}{{A`{bHd}}}{AGbOn}BJl}{{{f{CHh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Oj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BEj}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BEl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BCb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{B@d}}{f{DbHb}}}{{A`{bHd}}}}{{{f{BCl}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Oh}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CHn}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CI`}}{f{DbHb}}}{{A`{bHd}}}}{{{f{CIb}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Bf}}BFh}Ef}```{{BJ`ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbIdAD`}{{I`{{Bj{BJ`}}}}}}{{BJnd}BJn}``{{{f{Bf}}c}{{A`{BJ`n}}}{{I`{{Bj{BJ`}}}}}}{{BJ`{Cf{In}}}BJ`}{cc{}}00000000{BJhBEb}{CEjBEb}222222222222222222222222222222222{InAAh}33333333{{{f{Bf}}}CBh}44{CCdBId}555555555555555555555555555555{NbBJ`}{NlBJ`}{dBJ`}{InBJ`}{NhBJ`}{BMhBJ`}{JhBJ`}<{BhBJ`}{M`BJ`}{MlBJ`}{JfBJ`}{GhBJ`}{{{f{Bf}}}BJ`}{cc{}}0{CFj{{BKf{{Mf{BLj}}}}}}{CFf{{BKf{{Mf{BLj}}}}}}{BKj{{BKf{{Mf{BLj}}}}}}{CG`{{BKf{{Mf{BLj}}}}}}{CN`{{BKf{{Mf{BLj}}}}}}{CNb{{BKf{{Mf{BLj}}}}}}6{CNd{{BKf{{Mf{BLj}}}}}}{CFh{{BKf{{Mf{BLj}}}}}}{CNf{{BKf{{Mf{BLj}}}}}}{CFn{{BKf{{Mf{BLj}}}}}}::::::{CFfBKj}{CNfBKj}{CFhBKj}{CFnBKj}>>>>>>>{CGnCGl}???{EfBJd}{BJ`BJd}{{{Mf{Bf}}}BJd}{cc{}}{{{f{Bf}}}BJd}11{CNhCKf}222{{{f{CNj}}}{{Mf{CNj}}}}{{{Cl{ce}}}{{Mf{ce}}}OnBJl}{CJ`{{Mf{CLn}}}}{{{Mf{Bf}}}{{Mf{{Bj{Bh}}}}}}{{{f{CLn}}}{{Mf{CLn}}}}{{{Dn{c}}}{{Mf{c}}}{CNlOn}}8{CNn{{Mf{CK`}}}}{CO`c{}}{{{f{CK`}}}{{Mf{CK`}}}}{c{{Mf{c}}}{}}{{{A@j{c}}}{{Mf{{Bj{c}}}}}{}}{{{f{{Bj{c}}}}}{{Mf{{Bj{c}}}}}AD`}{{{Gb{ce}}}{{Mf{{Bj{c}}e}}}{}{BJlAD`}}{{{f{Bf}}}{{Mf{Bf}}}}{Ef{{Mf{Bf}}}}{COb{{Mf{CNj}}}}{cc{}}00000{COdBEl}{COfBEl}22{{{f{BCl}}}BCb}{{{f{BCn}}}BCb}4{BClBCb}{{{f{{Bj{Ab}}}}}BCb}{{{f{{Mf{BCl}}}}}BCb}{{{Mf{BCl}}}BCb}88{{{Gb{B@d}}}BCl}9999{In{{Cf{BJj}}}}{InBJj}00{{c{Cf{Hj}}}COh{}}{{{COj{Gh}}{COj{Bh}}{Cf{Hj}}}COl}{{{COj{Gh}}{COj{Bh}}{Cf{Hj}}}COn}{c{{ALj{{l{Al}}}}}{{Hh{}{{Ch{d}}}}}}{c{{ALj{{l{e}}}}}{{Hh{}{{Ch{}}}}}An}{cBJj{{Hh{}{{Ch{BJj}}}}}}{e{{Mf{{Bj{c}}}}}{}{{Hh{}{{Ch{c}}}}}}{eBCb{{B@`{Ob}}}{{Hh{}{{Ch{c}}}}}}{{gFj}{{D@`{Gh}}}I`{{Hh{}{{Ch{{Cf{c}}}}}}}{{Hh{}{{Ch{{Cf{e}}}}}}}}0{e{{D@`{Gh}}}{{Hh{}{{Ch{{Cf{d}}}}}}}{{Hh{}{{Ch{{Cf{c}}}}}}}}{{{f{Bf}}e}ADd{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{gAFn}{{D@`{Gh}}}BGn{{Hh{}{{Ch{{Cf{c}}}}}}}{{Hh{}{{Ch{{Cf{e}}}}}}}}873{{{f{Bf}}e}ADd{}{{Cn{}{{Ch{c}}}}}}{{{f{Bf}}}{{Cf{BJj}}}}{c{{ALj{{l{e}}}}}{{Ih{}{{Ch{}}}}}An}{e{{Mf{{Bj{c}}}}}Ib{{Ih{}{{Ch{c}}}}}}`{c{{A`{{CIn{AFd}}n}}}{{B@`{CJ`}}}}{{}{{Mf{c}}}On}{c{{Mf{ec}}}BJlOn}{{{f{Bf}}{f{{Bj{c}}}}}ADd{}}{{{f{Bf}}{f{{Bj{{Cf{c}}}}}}}ADd{}}{{{f{Bf}}}{{A`{D@b}}}}{c{{ALj{{l{e}}}}}{{Ij{}{{Ch{}}}}}An}{c{{ALj{{l{Al}}}}}{{Ij{}{{Ch{d}}}}}}{Eh{{BKf{{Mf{BKd}}}}}}{{{f{Bf}}c}D@d{}}{{{Gb{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{Gb{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gf{}{{Ch{e}}}}IjIbId}}`{{{f{Bf}}cFj}AId{}}{{FjcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{}CHd}{{BEbBEbcc}BEb{{B@`{BJ`}}}}{{{f{D@f}}{f{AAf}}ee}{{A`{AAfn}}}{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{{{f{Bf}}Fj}AIf}{{FjAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{FjAFn}BEl}``{{BJ`c{BKf{{Mf{BKd}}}}D@h}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}`{{BJ`c}BJ`{{B@`{BJ`}}}}{{BJ`FjFj}BJ`}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@jOn}BJl}{{{f{BLb}}Fj}{{A`{Iln}}}}{{BKnBJ`d}BJ`}{{BL`BJ`d}BJ`}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}6{{{f{BCb}}{f{Bf}}}{{Cf{{f{Eh}}}}}}{{{f{AIh}}Fj}{{A`{Iln}}}}{{{f{ANn}}Fj}{{A`{Iln}}}}{{{f{AIh}}Fj}Il}{{{f{ANn}}Fj}Il}{{{f{BCb}}Fj}{{Cf{{Gl{{f{{BA`{B@n}}}}{f{Eh}}}}}}}}{{{f{DbBCb}}Fj}{{Cf{{Gl{{f{Db{BA`{B@n}}}}{f{DbEh}}}}}}}}{C@fBJ`}{{{f{BEb}}}BJj}{{{f{CHf}}}Eh}{{}Eh}{{{f{CB`}}GhCAj{Cf{{f{AM`}}}}}{{A`{CAhn}}}}00{{{f{CJn}}{f{BCb}}D@l{f{Ob}}{f{Ob}}}{{Cf{Ob}}}}{{{f{BKd}}{f{BCb}}D@l{f{{Bj{Ob}}}}}{{A`{Obn}}}}{{{f{BCb}}{f{Bf}}}{{Cf{Ob}}}}{{{f{AFn}}}{{f{{Bj{B@d}}}}}}{{{f{BLd}}}Fj}{{{f{BCb}}{f{Bf}}}{{Cf{{Gl{Fj{f{{BA`{B@n}}}}{f{Eh}}}}}}}}{{{f{{Bj{Bh}}}}}{{Cf{Fj}}}}{{{f{Db{BNn{c}}}}}{{A`{{f{{Mf{CHh}}}}n}}}BIn}{{{f{BLb}}}{{Cf{{Mj{Mh}}}}}}{{{f{Db{Mf{ce}}}}}{{Cf{{f{Dbc}}}}}OnBJl}{{{f{Db{Mf{ce}}}}}{{f{Dbc}}}OnBJl}{{{f{D@n}}}{{Gb{{f{Bf}}}}}}{{{f{BCb}}}{{Gb{{f{Bf}}}}}}{{{f{BCl}}}{{Gb{{f{Bf}}}}}}{{{f{{CLb{}{{DA`{c}}}}}}}{{Gb{{Gl{{f{Bf}}c}}}}}{AGbCLh}}{{{f{BCb}}}{{Gb{{Gl{{f{Bf}}}}}}}}{{{f{BCl}}}{{Gb{{Gl{{f{Bf}}}}}}}}{{{f{BLb}}Fj}{{Cf{{f{Jb}}}}}}{{{f{BLb}}FjFj}{{Cf{{f{Jb}}}}}}{{{f{BLj}}}{{Cf{{BKf{{Mf{BKd}}}}}}}}{{{f{CB`}}CAhCAjKf{Cf{{f{AM`}}}}CAn}{{A`{DAbn}}}}{{{f{CBb}}}{{Mf{CBd}}}}{{{f{Dbc}}}{{A`{DAdn}}}{BLhBInOn}}{{{f{CMn}}{f{BCb}}}{{A`{{Mf{BCb}}n}}}}{{{f{BAb}}Fj}Il}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{BLb}}Fj}Il}{{{f{CId}}}d}{{{f{C@n}}}d}`{{BEbe}BJh{{B@`{BJ`}}AD`}{{I`{{Bj{c}}}}}}{{{f{DAf}}{Gb{Ab}}{f{BDb}}}{{A`{{Gl{Ab{Gb{Ab}}C`}}n}}}}{{BEbBJ`cBDb}BJh{{I`{{Bj{BJ`}}}}}}2{{BF`BF`{f{{Bj{Gh}}}}CAjKf{Cf{AM`}}}{{A`{{Gb{{A@j{In}}}}n}}}}{{CB`{f{{Bj{Gh}}}}CAjKf{f{{Cf{Ef}}}}ddCAn}{{Gl{{Gb{{A@j{In}}}}{Gb{Gh}}{Gb{Gh}}}}}}{{{f{BGd}}dd}{{A`{C`n}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@jOn}BJl}21`{{{f{BLb}}}d}{{{f{BDb}}{f{Dbc}}}bADf}{{{f{BEd}}{f{Dbc}}}bADf}{{{f{BF`}}{f{Dbc}}}bADf}{{{f{CAj}}{f{Dbc}}}bADf}{{{f{CAl}}{f{Dbc}}}bADf}{{{f{CAn}}{f{Dbc}}}bADf}{{{f{CBb}}{f{Dbc}}}bADf}{{{f{CBd}}{f{Dbc}}}bADf}{{{f{CBf}}{f{Dbc}}}bADf}{{{f{CBh}}{f{Dbc}}}bADf}{{{f{CBj}}{f{Dbc}}}bADf}{{{f{CBl}}{f{Dbc}}}bADf}{{{f{BId}}{f{Dbc}}}bADf}{{{f{CBn}}{f{Dbc}}}bADf}{{{f{CC`}}{f{Dbc}}}bADf}{{{f{CCb}}{f{Dbc}}}bADf}{{{f{CCd}}{f{Dbc}}}bADf}{{{f{CCf}}{f{Dbc}}}bADf}{{{f{CCh}}{f{Dbc}}}bADf}{{{f{CCj}}{f{Dbc}}}bADf}{{{f{CCl}}{f{Dbc}}}bADf}{{{f{CCn}}{f{Dbc}}}bADf}{{{f{CD`}}{f{Dbc}}}bADf}{{{f{CDb}}{f{Dbc}}}bADf}{{{f{CDd}}{f{Dbc}}}bADf}{{{f{CDf}}{f{Dbc}}}bADf}{{{f{CDh}}{f{Dbc}}}bADf}{{{f{CDj}}{f{Dbc}}}bADf}{{{f{CDl}}{f{Dbc}}}bADf}{{{f{CDn}}{f{Dbc}}}bADf}{{{f{CE`}}{f{Dbc}}}bADf}{{{f{CEb}}{f{Dbc}}}bADf}{{{f{CEd}}{f{Dbc}}}bADf}{{{f{CEf}}{f{Dbc}}}bADf}{{{f{CEh}}{f{Dbc}}}bADf}{{{f{BMh}}{f{Dbc}}}bADf}{{{f{BJ`}}{f{Dbc}}}bADf}{{{f{CFd}}{f{Dbc}}}bADf}{{{f{BOj}}{f{Dbc}}}bADf}{{{f{CFf}}{f{Dbc}}}bADf}{{{f{CFh}}{f{Dbc}}}bADf}{{{f{CFj}}{f{Dbc}}}bADf}{{{f{CFl}}{f{Dbc}}}bADf}{{{f{CFn}}{f{Dbc}}}bADf}{{{f{CG`}}{f{Dbc}}}bADf}{{{f{BKj}}{f{Dbc}}}bADf}{{{f{CGf}}{f{Dbc}}}bADf}{{{f{CGh}}{f{Dbc}}}bADf}{{{f{CGj}}{f{Dbc}}}bADf}{{{f{CGl}}{f{Dbc}}}bADf}{{{f{CGn}}{f{Dbc}}}bADf}{{{f{CH`}}{f{Dbc}}}bADf}{{{f{CHb}}{f{Dbc}}}bADf}{{{f{BJd}}{f{Dbc}}}bADf}{{{f{CHd}}{f{Dbc}}}bADf}{{{f{CHf}}{f{Dbc}}}bADf}{{{f{{Mf{ce}}}}{f{Dbg}}}b{DAhOn}BJlADf}{{{f{CHj}}{f{Dbc}}}bADf}{{{f{CHl}}{f{Dbc}}}bADf}{{{f{BEj}}{f{Dbc}}}bADf}{{{f{BCb}}{f{Dbc}}}bADf}{{{f{B@d}}{f{Dbc}}}bADf}{{{f{Oh}}{f{Dbc}}}bADf}{{{f{CIb}}{f{Dbc}}}bADf}{{{f{DAj}}{f{Ab}}CChd}{{A`{{Gl{{Gl{{Gb{In}}{Gb{In}}}}d}}n}}}}{{{f{DAj}}{f{Ab}}CChd}{{A`{{Gl{{ALf{In}}{ALf{In}}}}n}}}}{{BJh{Cf{Fj}}}BEb}{{BL`BJ`}BJ`}{{BJ`{Cf{Fj}}}BJ`}{{{f{BN`}}}{{A`{{l{Bd}}n}}}}{{{f{BN`}}}{{l{Bd}}}}``{{{f{{Bj{{f{{l{Bd}}}}}}}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{{f{DAl}}}{{l{N`}}}}{{{f{CJh}}}{{l{N`}}}}{{{f{C@j}}}{{A`{{l{N`}}n}}}}`{{{f{CJj}}}{{l{Kd}}}}`{{BJnCCd}BJn}`{{{f{AAh}}}In}`{{{f{{Bj{Ab}}}}Kf}{{A`{Abn}}}}{{{f{{Kb{KhKd}}}}{f{{l{Bd}}}}CIb{Fn{Gh}{{Ad{ALn}}}}{Fn{ALn}{{Ad{Gh}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bf}}}}{Fn{Gh}{{Ad{ALn}}}}{Fn{ALn}{{Ad{Gh}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{BJ`BJ`}{{{f{ALn}}}d}{{{BNd{c}}d}{{BNd{c}}}BNh}````0`{{}b}{cb{AD`BJl}}``{cBJ`{{I`{{Bj{Gh}}}}}}``{{{f{D@n}}{f{Bf}}}{{Cf{Fj}}}}{{{f{BCb}}{f{Bf}}}{{Cf{Fj}}}}{{{f{BCl}}{f{Bf}}}{{Cf{Fj}}}}{{{f{{Bj{In}}}}}{{`{{Cn{}{{Ch{Fj}}}}}}}}{{{f{DAd}}Bh{Cf{Fj}}d{Cf{{f{BCb}}}}FjFj{Cf{{f{CBh}}}}{Cf{Bh}}Bh{Cf{{f{CBj}}}}dd{f{Db{Cf{Fj}}}}d}{{A`{{Gl{BCbFjFj}}n}}}}{{{CMl{c}}{Cf{{DAn{Fj}}}}}{{CMl{c}}}BIn}{{{CIn{c}}{Cf{{DAn{Fj}}}}}{{CIn{c}}}BIn}``{{}Fj}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DbABl}}}{{Cl{Cj}}}}{{BEbBEbcc}BEb{{B@`{BJ`}}}}{{{f{D@f}}{f{AAf}}ee}{{A`{AAfn}}}{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{{{f{DbA@`}}}{{f{DbJh}}}}`{{{f{DbBJj}}BJj}b}{{{f{DbBCb}}Fj{BA`{B@n}}Eh}{{A`{{Cf{Eh}}n}}}}{{BJ`BJ`GhEh}BJ`}{{BJ`BJ`BJ`}BJ`}``{{{f{Ab}}CDd}Ab}{{BJ`CDd}BJ`}`{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{BJ`BJ`}BJ`}{{BJjBJj}BJj}{{{f{BJj}}BJj}d}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BEl{{Gl{{Gb{B@d}}{Gb{{Cl{Cj}}}}{Cf{Hj}}}}}}{{{ALj{c}}}c{}}{{{Mf{ce}}}{{Cf{c}}}{}BJl}33{{{f{BJ`}}}}{BJj}{{{f{BEl}}}}{BCb}{DB`BL`}{BL`BL`}{{{Mf{ce}}}{}OnBJl}{{{Mf{ce}}}{{Gl{e}}}OnBJl}{{CBbc}{{BIj{c}}}BIn}{{BAdEh}{{A`{Lnn}}}}{BCdAb}{{{Mf{BLb}}}Ab}{{Ln{f{Bf}}}Ab}{CHhDBb}{BEh{{Gb{c}}}{}}{c{{Gb{Ef}}}{}}{c{{Gb{{BA`{B@n}}}}}{}}{{{f{BJj}}}d}{{{f{BOj}}}d}{{{f{CCd}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CDh}{{A`{{l{Al}}n}}}}{{BJ`ccCDh}BJ`{{B@`{BJ`}}}}{cd{{I`{CLn}}}}{{{f{{Bj{Bh}}}}}d}{{{f{BF`}}{Cf{{f{Bf}}}}}d}7{{{f{CHd}}}d}{{{f{BLb}}}d}{{{f{BCb}}}d}{{{f{BCl}}}d}{{{f{BO`}}}d}{BJ`BJ`}{{{f{Ab}}}{{A`{{l{Al}}n}}}}{{{f{AIj}}}{{A`{{l{Al}}n}}}}27{{{f{BF`}}}d}{{{f{Ab}}{f{Ab}}}{{A`{{l{Al}}n}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}54{{{f{AIl}}}{{A`{{l{Al}}n}}}}6{{{f{CJf}}}{{l{Al}}}}{{{f{CJh}}}{{l{Al}}}}{{{f{C@j}}}{{A`{{l{Al}}n}}}}999{{{f{BLb}}}{{l{Al}}}}::0{{{f{A@`}}}d};{{{f{AAh}}}d}`{{{f{Ab}}}d}{{{f{{Mf{AFd}}}}}d}{{}d}{{{f{CLd}}En}{{A`{dn}}}}{{{f{c}}}d{}}0{{{f{CCh}}{f{CCd}}}{{A`{bn}}}}4?{{{f{CJf}}}{{l{Jn}}}}{{{f{CJh}}}{{l{Jn}}}}{{{f{C@j}}}{{A`{{l{Jn}}n}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{BJj}}}{{AF`{BJj}}}}{{{f{BEl}}}{{AGf{{Gb{{Cl{CLf}}}}DBdAGd}}}}{{{f{BCb}}}{{`{{Cn{}{{Ch{{Gl{{f{{BA`{B@n}}}}{f{Eh}}}}}}}}}}}}{{{f{BCb}}}{{`{L`}}}}{{{f{DbBCb}}}{{`{L`}}}}1{{{f{BJj}}}{{AFb{BJj}}}}2{{BKnBJ`d}BJ`}{{BEbBEbccBId}BEb{{I`{{Bj{BJ`}}}}}}{{BL`BJ`d}BJ`}{{{f{D@f}}{f{AAf}}eeBId}{{A`{AAfn}}}{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{{{f{DBf}}{f{AAf}}{f{Bf}}{f{Bf}}eeCDb{Cf{Il}}}{{A`{AAfn}}}{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{BEbBJn}{{{f{DBh}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{{f{DBh}}{f{{l{Bd}}}}d}{{A`{{l{Bd}}n}}}}{{BJnd}BJn}`{CM`BJ`}{DBjBJ`}{{{f{CHh}}}{{f{{Cf{{Gb{DBl}}}}}}}}``{{}BJ`}{BEbBEb}{BL`BJ`}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{BJ`BJ`}{DBnBEb}4{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@jOn}BJl}`{{BEbBEbcc}BEb{{B@`{BJ`}}}}{{{f{D@f}}{f{AAf}}ee}{{A`{AAfn}}}{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}}{{BJnc}BJn{{I`{{Bj{BJ`}}}}}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}<{{{f{BLb}}}Fj};9{{{f{BEl}}}Fj}{{{f{BCb}}}Fj}{{{f{BCl}}}Fj}{{BEbIn}BEb}{{{f{BLb}}Fj}Ab}`{BJ`BL`}{cBJ`DC`}{DC`BJ`}{BF`BJ`}{DCbBJ`}{CHfBJ`}{{BJ`c}BJ`{{B@`{BJ`}}}}0``{{CAbd}CAb}{{{CIn{c}}d}{{CIn{c}}}BIn}```{BJ`BJ`}{{{f{DBh}}}{{l{F`}}}}0{{{f{DBh}}{f{{Bj{Ab}}}}}{{A`{{l{Ah}}n}}}}{{{f{DBh}}GhCKh}{{A`{{l{Ah}}n}}}}{{{f{DBh}}Ghd}{{A`{Abn}}}}{{{f{DBh}}{f{{l{Bd}}}}d}{{A`{{l{Bd}}n}}}}4{{{f{DBh}}}{{A`{Abn}}}}{{{f{DBh}}}Ab}01{{{f{DBh}}}{{A`{{l{F`}}n}}}}{{{f{DBh}}}{{l{Ah}}}}{{{f{DBh}}{f{Ab}}}{{A`{{l{Ah}}n}}}}{{{f{DBh}}GhFj}{{l{Ah}}}}{{{f{DBh}}En}{{A`{{l{Ah}}n}}}}{{{f{DBh}}Bh}Ab}7{{{f{DBh}}}{{A`{{l{Ah}}n}}}}01{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@jOn}BJl}21``````{{{f{AMd}}{f{AMd}}}{{A`{{Gl{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gl{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Db{Mf{ce}}}}}{{f{Dbc}}}{DCdOn}{BJlAD`}}{{BEbcBJj{Cf{{Mf{CMn}}}}{Cf{{f{Bf}}}}}BEb{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IbId}}{{DBjc}BJ`{{Dj{{f{Bf}}}{{Ad{{A`{Efn}}}}}}IbId}}{{BJ`c{BKf{{Mf{BKd}}}}}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{BJ`BJ`c{BKf{{Mf{BKd}}}}}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{BJ`{f{Dbc}}{f{Db}}}{{A`{BJ`n}}}{{Af{BJ`{f{Db}}}{{Ad{{A`{BJ`n}}}}}}}}{{{f{BLd}}{Cf{{f{Ef}}}}}{{A`{Obn}}}}{{{f{BLd}}c}{{A`{Obn}}}{{AAj{{f{Eh}}}{{Ad{Eh}}}}}}{c{{BKf{{Mf{BKd}}}}}{{Dj{{f{Eh}}}{{Ad{{A`{Ehn}}}}}}IbId}}{c{{BKf{{Mf{BKd}}}}}{{Dj{{f{{Bj{{f{Eh}}}}}}}{{Ad{{A`{Ehn}}}}}}IbId}}{{BJ`c}BJ`{{Af{BJ`}{{Ad{BJ`}}}}}}{c{{BKf{{Mf{BKd}}}}}{{Dj{{f{Ob}}}{{Ad{{A`{Obn}}}}}}IbId}}{{DBj{Mf{Dj}}}BJ`}{c{{BKf{{Mf{BKd}}}}}{{Dj{{f{{Bj{Ob}}}}}{{Ad{{A`{Obn}}}}}}IbId}}:{{ce{BKf{{Mf{BKd}}}}}BJ`{{Dj{{f{Db{Bj{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}{{I`{{Bj{BJ`}}}}}}{{BJ`c{f{{Bj{BJ`}}}}{BKf{{Mf{BKd}}}}}BJ`{{Dj{{f{Db{Bj{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{BJ`BKj{f{{Bj{BJ`}}}}d{Cf{DCf}}}BJ`}2{{{f{BLd}}}{{A`{Obn}}}}{{CBbc}CBb{{Dj{CBd}{{Ad{CBd}}}}}}1111{CHfCHf}{{{Cf{{f{{Bj{Fj}}}}}}{f{BCl}}{Cf{{f{{Bj{Ab}}}}}}{Cf{{f{DCh}}}}}AAf}{{{Cf{{f{{Bj{Ef}}}}}}{f{BCb}}{Cf{{f{{Bj{Ab}}}}}}d}{{Cf{{Gb{Fj}}}}}}{{{f{Bf}}}BJ`}{BKnBJ`}{BEbBEb}{BL`BJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{DCj}}}Ln}{{{f{BLb}}}{{A`{Lnn}}}}``{{{f{{Bj{Bh}}}}{f{Db{Gb{Bh}}}}}{{A`{{f{{Bj{Bh}}}}n}}}}865{{{f{AIn}}}{{Cf{M`}}}}4{{{f{BLb}}}{{Cf{M`}}}}:987{{{f{AJ`}}}{{Cf{c}}}{}}61{{{f{DCl}}}Ln}5``{{{CMf{c}}{Cf{CJ`}}}{{CMf{c}}}BIn}{{{f{DbBCb}}BCb}b}{{{f{Eh}}{f{Eh}}}{{A`{Ehn}}}}{{{f{DbBCb}}{f{BCb}}}b}````{{{f{CJj}}}{{l{Kd}}}}`{{{f{C@j}}}{{A`{{l{Jn}}n}}}}1`{{{f{Bf}}}BJ`}{BKnBJ`}{BEbBEb}{BL`BJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{AIn}}}{{Cf{{Gl{cc}}}}}{}}```{{{f{DCj}}}Ln}{{{f{BLb}}}{{A`{Lnn}}}}``{{{f{DAl}}}{{l{N`}}}}{{{f{CJh}}}{{l{N`}}}}{{{f{C@j}}}{{A`{{l{N`}}n}}}}`=```6{{{f{CJf}}}{{l{N`}}}}21`{{{f{BF`}}}Gh}{{{f{BF`}}}d}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BF`Gh}BF`}{{BJ`BJ`}}{{{f{BJf}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BLb}}}Fj}{{{f{CId}}}{{Cf{Fj}}}}{{{f{C@n}}}{{Cf{Fj}}}}{{{f{CAb}}}{{Cf{Fj}}}}`````{{{BNd{c}}Fj}{{BNd{c}}}BNh}`{BKnBJ`}{BL`BJ`}{{{f{AHf}}}{{A`{Fjn}}}}{BJ`BJ`}{{{f{BLb}}}{{A`{Fjn}}}}{{{f{BLb}}}{{f{Bf}}}}{BJ`DBj}````33`{{{f{DAl}}}{{l{Jn}}}}{{{f{CJh}}}{{l{Jn}}}}{{{f{C@j}}}{{A`{{l{Jn}}n}}}}{{{f{CJj}}}{{l{Kd}}}}{{{f{BF`}}}Gh}`{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{CLhOn}BJl}{{{f{CCh}}}d}{BF`}{BJ`}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BF`}}}d}{{DCnFj}{{Cf{Fj}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}0{{{f{BLd}}}{{A`{Obn}}}}{{}c{}}{cCMbBLh}{cCMdBNh}2{{{f{Bf}}c}DD`{}}{c{{ALj{c}}}{}}{BEbBJn}{c{{BIj{c}}}BIn}{cC@n{{I`{CLn}}}}{cCAb{{I`{CLn}}}}{c{{BNd{c}}}BNh}{{{f{{Bj{Ob}}}}}BLd}{c{{CMf{c}}}BIn}{c{{BLf{c}}}BLh}{c{{CMh{c}}}BNh}{{}CJl}{c{{BNj{c}}}BNh}{GhBF`}{c{{CMj{c}}}BNh}{c{{CMl{c}}}BIn}{{BF`BF`BF`}CB`}{c{{CIn{c}}}BIn}{{DDb{Mf{CHh}}{Mf{BCl}}{Gl{FjFj}}{Cf{{Gb{Fj}}}}{Cf{{Mf{BIl}}}}{Cf{DCh}}Fjd{Cf{{Gb{Ab}}}}{Cf{{Gl{{Mf{Bf}}{Mf{Bf}}}}}}CDj}{{A`{BO`n}}}}{c{{BNn{c}}}BIn}{c{{BOb{c}}}{BNhBNh}}{CCdBId}{c{{BKf{c}}}{}}{{BJ`BJ`BJ`}CGb}{{}CGd}{BJ`BJd}{{{f{Bf}}{Gb{Ob}}{BKf{{Mf{BKd}}}}c}BOnBLj}{c{{Mf{c}}}{}}{{AFn{Gb{{Cl{Cj}}}}{Cf{Hj}}}BEl}{{EhIl}Ln}{{}BCb}{{cAFnd}B@d{{B@`{Ef}}}}{e{{Mf{c}}}{}{{AAj{{f{{CKj{c}}}}}{{Ad{c}}}}}}{AFnBEl}{{{f{AJb}}FjFj}{{l{c}}}Dh}{{{f{BLb}}FjFj}Ab}{{{f{Bf}}}CBh}{{ce}{{Mf{ce}}}{}BJl}{{{f{BCb}}Fj{BA`{B@n}}Eh}{{A`{BCbn}}}}{{Gh{f{Bf}}}{{A`{Abn}}}}{EfCBh}{{AFnFj}BEl}{{{Mf{{Gb{CJ`}}}}}C@n}{{{Mf{{Gb{CJ`}}}}}CAb}{BhCBh}{{}{{Mf{{BMn{c}}}}}{}}{c{{Mf{{BMn{e}}c}}}BJl{}}{Fj{{Mf{{Bj{{BMn{c}}}}}}}{}}{{Fjc}{{Mf{{Bj{{BMn{e}}}}c}}}BJl{}}3210{{{f{DbDDd}}}Cf}{{{f{DbDAb}}}Cf}{{{f{BK`}}DDf}{{A`{{Cf{AAf}}n}}}}{{{f{DbBOf}}Fj}{{A`{{Cf{{Gb{AAf}}}}n}}}}{{{f{DbBNb}}Fj}{{A`{{Cf{{Gb{AAf}}}}n}}}}{{{f{DbBO`}}Fj}{{A`{{Cf{{Gb{AAf}}}}n}}}}{{{f{BJ`}}{f{Db{BFf{{f{BJ`}}}}}}}b}{{BJ`{f{Db{BFf{BJ`}}}}}b}{BJ`BJ`}0{BJjBJj}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{GhBJ`}`{{}AAh}{{}A@`}`{{{f{BLb}}}Fj}{BEbBEb}7`````{{{f{Db{BNn{c}}}}}{{A`{Fjn}}}BIn}````{{{f{AHn}}}{{A`{{Gj{Gh}}n}}}}{{BJnc}BJn{{I`{{Bj{BJ`}}}}}}``{{BEb{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{A`{BHjn}}}}`{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{CJf}}}{{l{Nj}}}}{{{f{CJh}}}{{l{Nj}}}}{{{f{C@j}}}{{A`{{l{Nj}}n}}}}{{{f{C@j}}}{{A`{{l{Jn}}n}}}}{{CEnc}BJ`{{B@`{BJ`}}}}{{CFbc}BJ`{{B@`{BJ`}}}}`{{BJ`e}BJ`{{B@`{BJ`}}AD`}{{I`{{Bj{c}}}}}}{{BJ`e{Cf{{Gl{eEn}}}}CGn}BJ`{{B@`{BJ`}}AD`}{{I`{{Bj{c}}}}}}{{{f{DbBCb}}{f{BCb}}}{{A`{bn}}}}```{{{f{Bf}}}BF`}{{{f{Bf}}{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kb{K`Jn}}}}{{{f{Bf}}{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kb{LbKd}}}}{{{f{Bf}}{f{{Bj{{f{Bf}}}}}}{f{Bf}}Kf}{{Kb{KhKd}}}}``{{{f{BF`}}{f{BF`}}}{{Cf{BAh}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}{{Cf{BAh}}}{D@jOn}BJl}`{{{f{CId}}}{{f{{Bj{CJ`}}}}}}{{{f{C@n}}}{{f{{Bj{CJ`}}}}}}{{{f{CAb}}}{{f{{Bj{CJ`}}}}}}``{{}BJ`}{c{{DDh{{Mf{c}}}}}{}}{{ce}{{DDh{{Mf{ce}}}}}{}BJl}````{{BJ`c}BJ`{{B@`{BJ`}}}}`{{DBj{f{Bf}}}BJ`}0{{{f{AAf}}{f{AAf}}d}{{A`{{Gl{{AAb{{Gb{In}}{Gb{A@`}}}}{AAb{{Gb{AAh}}{Gb{A@`}}}}}}n}}}}`{{{f{DCj}}}Ln}{BJ`BJ`}{BEb{{A`{{Gl{AAfAAf}}n}}}}`{{{f{BEl}}}BEl}{{{f{{Mf{c}}}}{f{DbDDj}}}b{ALbOn}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}dOnBJl}{{{f{Bf}}BJ`Oh}BJ`}{{BEbBJ`Oh}BEb}{{{f{AJ`}}M`Oh}{{A`{{Cf{c}}n}}}{}}{{BJ`BJ`Oh}BJ`}{{{f{DCl}}M`Oh}{{A`{Lnn}}}}{{{f{BLb}}M`Oh}{{A`{Lnn}}}}{{{f{CJf}}}{{l{N`}}}}{{{f{CJh}}}{{l{N`}}}}{{{f{C@j}}}{{A`{{l{N`}}n}}}}{{{f{Dbc}}e}{{A`{{f{Dbg}}BBn}}}{}CLl{}}````{{{f{DDl}}CDn{Cf{Jh}}}Ab}{{BJ`CDn{Cf{Jh}}}BJ`}{{{f{Db{Mf{AFd}}}}{f{Db{Bj{Bh}}}}}{{A`{FjBBn}}}}{{{f{Db{Mf{AFd}}}}DDn}{{A`{bBBn}}}}{{{BNn{c}}CDj}{{BNn{c}}}BIn}{{{f{Db{Mf{AFd}}}}{f{Db{Gb{Bh}}}}}{{A`{FjBBn}}}}{{{f{Db{Mf{AFd}}}}{f{DbEf}}}{{A`{FjBBn}}}}{{{f{Dbc}}}{{A`{eBBn}}}{}DE`}{{{f{Db{Mf{AFd}}}}{f{Db{Bj{DEb}}}}}{{A`{FjBBn}}}}{{{f{CId}}}d}{{{f{BLb}}}Ab}{{{f{C@n}}}d}{{{f{CAb}}}d}````{{ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbIdAD`}{{I`{{Bj{BJ`}}}}}}{{{f{AJd}}}Ab}0{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BJf}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbBJj}}BJj}b}{{{f{DbBCb}}{f{Bf}}}{{Cf{Eh}}}}{{{f{DbBLb}}{f{Bf}}}b}{{BEbei}BEb{{I`{Bf}}}{{Hh{}{{Ch{c}}}}}{{I`{Bf}}}{{Hh{}{{Ch{g}}}}}}{{{f{DbBCb}}{f{Bf}}{BA`{B@n}}}{{Cf{{BA`{B@n}}}}}}{{CM`{Gb{Ef}}}BJ`}{{cBJ`}BJ`{{B@`{BJ`}}}}{{{f{Ab}}{f{{l{F`}}}}}{{A`{{l{Ah}}n}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BN`}}{f{Bf}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{BJ`cc}BJ`{{B@`{BJ`}}}}1{{{f{BLd}}{Cf{Eh}}}{{A`{Obn}}}}{{{f{BN`}}{f{Bf}}{f{Bf}}Fj}{{A`{{l{Bd}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Eh}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Eh}}}{{A`{Abn}}}}{{BJ`cc{Cf{c}}{Cf{Eh}}}BJ`{{B@`{BJ`}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bf}}}}{f{{l{Bd}}}}CIb}{{A`{{Kb{KhKd}}n}}}}{{{f{DbBCb}}Fj}b}{{BJ`{f{{Bj{Gh}}}}CH`}BJ`}{{{f{CLn}}}CJ`}`{{{f{AJf}}}AJf}{{{f{BLb}}}Ab}{BKnBJ`}{BEbBEb}{BL`BJ`}{BJ`BJ`}`{{BJnc}BJn{{I`{{Bj{BJ`}}}}}}{{{f{DAf}}{Gb{Ab}}{f{BEd}}}{{A`{{Gl{Ab{Gb{Ab}}C`}}n}}}}{{BEbBJ`cBEd}BJh{{I`{{Bj{BJ`}}}}}}{{BJ`BEd}BJ`}{{{f{AJh}}{f{Dj}}Oj}{{A`{Abn}}}}{{BJ`{Mf{Dj}}{BKf{{Mf{BKd}}}}Oj}BJ`}{{{f{BLb}}{f{Dj}}Oj}{{A`{Abn}}}}{{BJ`Fjc}BJ`{{Af{{f{Db{l{Eb}}}}}{{Ad{{Cf{M`}}}}}}IbIdDl}}{{{f{DEd}}Oj}{{A`{Abn}}}}{{BJ`Oj}BJ`}{{{f{DEd}}{f{Ab}}CAf}{{A`{Abn}}}}{{BJ`BJ`CAf}BJ`}32102032103{{BJ`OhM`Oj}BJ`}2{{BJ`BJ`OhM`CAf}BJ`}543254325432{{{f{DEf}}{f{{l{Bd}}}}{Cf{{f{AM`}}}}}{{A`{DEfn}}}}{{{f{C@h}}In}{{A`{Abn}}}}{{BJ`In}BJ`}{{{f{CB`}}Gh{Cf{{f{AM`}}}}}{{A`{Ghn}}}}0{{{f{C@h}}Ml}{{A`{Abn}}}}{{BJ`Ml}BJ`}2``{{{f{CId}}}{{Cf{{f{DCh}}}}}}{{{f{C@n}}}{{Cf{{f{DCh}}}}}}{{{f{CAb}}}{{Cf{{f{DCh}}}}}}``````{{{f{DBh}}{l{Ah}}}{{l{Ah}}}}{{}{{BKf{{Mf{BKd}}}}}}{{BJ`BJ`dd{Cf{Jh}}}BJ`}0`{{{f{BK`}}DDf}{{A`{AAfn}}}}{{cCA`}{{A`{BEbn}}}{{I`{CLn}}}}{{{Mf{{Gb{CJ`}}}}CA`}{{A`{BEbn}}}}{{cCAd}{{A`{BEbn}}}{{I`{CLn}}}}{{{Mf{{Gb{CJ`}}}}CAd}{{A`{BEbn}}}}{{DEh{f{{Bj{In}}}}e}{{A`{Abn}}}Dl{{Hh{}{{Ch{{Cf{c}}}}}}}}{{{f{AJj}}c{Cf{e}}}{{A`{AJjn}}}{{Hh{}{{Ch{In}}}}}{}}{{{f{AJj}}ci}{{A`{AJjn}}}{{Hh{}{{Ch{In}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}{{{f{DbBEb}}}{{A`{{Mf{BCb}}n}}}}{{{f{Db{CMf{c}}}}}{{A`{{Mf{BCl}}n}}}BIn}{{{f{Db{BLf{c}}}}}{{A`{BCbn}}}BLh}{{{f{BO`}}}{{f{{Mf{BCl}}}}}}{{{f{Db{BNn{c}}}}}{{A`{{Mf{BCl}}n}}}BIn}{{{f{BK`}}{Cf{Fj}}}{{A`{{Mf{BCb}}n}}}}{{{f{CHh}}}{{f{DEj}}}}``````{{{f{DbBEb}}{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{A`{{Mf{BCb}}n}}}}`{{{f{DAl}}}{{l{N`}}}}{{{f{CJh}}}{{l{N`}}}}{{{f{C@j}}}{{A`{{l{N`}}n}}}}`{{{f{CJj}}}{{l{Kd}}}}`{{{f{Db{Mf{AFd}}}}DEl}{{A`{JhBBn}}}}{{BEbc}BEb{{I`{{Bj{BJ`}}}}}}0````{{{f{AJj}}{f{{l{Al}}}}{Cf{c}}}{{A`{AJjn}}}{}}{{{f{DbBJj}}BJjd}b}{{{f{BEb}}{BHn{BHl}}{BHn{BI`}}}b}{{{f{DbBCb}}{f{Bf}}Eh}{{Cf{Eh}}}}{{{f{DbBCb}}FjEh}{{Cf{Eh}}}}{{{BNn{c}}d}{{BNn{c}}}BIn}{{{BOb{c}}d}{{BOb{c}}}BNh}{{{CMf{c}}d}{{CMf{c}}}BIn}{{{BLf{c}}d}{{BLf{c}}}BLh}{{{CMl{c}}d}{{CMl{c}}}BIn}4{{CMbd}CMb}{{BJ`Lf}BJ`}{{{f{DbBEl}}{Cf{Hj}}}b}{{{f{AJl}}Gh}{{l{c}}}Dh}{{{f{BLb}}Gh}Ab}{{BKnBJ`}BJ`}{{BEbc}BEb{{B@`{BJ`}}}}{{BL`BJ`}BJ`}{{BJ`BJ`}BJ`}{{{f{AJn}}Ghc}{{l{e}}}{}Dh}{{BEbce}BEb{{B@`{BJ`}}}{{B@`{BJ`}}}}{{BJ`ce}BJ`{{B@`{BJ`}}}{{B@`{BJ`}}}}{{{f{DbBCb}}{f{Bf}}}{{Cf{Eh}}}}{{{f{DbBCb}}Fj}{{Cf{{Gl{{BA`{B@n}}Eh}}}}}}{{{f{BId}}}d}{BJ`BJ`}{{{f{DbABn}}}b}{{{f{DbBLb}}}b}{{BJ`{Cf{Jh}}}BJ`}{{BEbcCBl}{{A`{bn}}}{{I`{CLn}}}}{{BEbcCCj}{{A`{bn}}}{{I`{CLn}}}}{{BEbcCD`}{{A`{bn}}}{{I`{CLn}}}}{{BEbcCE`}{{A`{bn}}}{{I`{CLn}}}}{{{f{CIl}}}{{l{F`}}}}````{{{f{BLb}}GhFj}Ab}{{BEbGhIn}BEb}{{BL`BJ`BJ`}BJ`}?{{{f{DbBEl}}FjFj}b}0`{{{f{AK`}}FjFj}AK`}{{{f{c}}FjFj}e{}{}}1022{{BElFjFj}BEl}0`{{{f{AHd}}d}{{l{c}}}Dh}{{BKnEn}BJ`}{{BEbcFb}BEb{{BEh{{BA`{B@n}}}}}}{{BL`En}BJ`}{{BJ`En}BJ`}{{BJ`eFb}BJ`{{B@`{BJ`}}AD`}{{I`{{Bj{c}}}}}}{{BEbcFb}BEb{{I`{{Bj{BJ`}}}}}}{{{f{AHd}}En}{{l{c}}}Dh}{{{f{BLb}}En}{{A`{Abn}}}}{{{f{{Mf{c}}}}}{{Cf{{f{ALb}}}}}{ALbOn}}{{{f{BN`}}{f{{l{Bd}}}}}{{l{Ah}}}}{{{f{BLb}}Gh}{{Gl{AbAb}}}}{{{f{BEl}}Fj}{{Gl{{Cl{Cj}}{Cl{Cj}}}}}}0{{{f{BN`}}{f{{l{Bd}}}}Fj}{{A`{{l{j}}n}}}}0{{{f{{l{Bd}}}}{f{{l{Bd}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bf}}}}}}}{{Dj{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}4{{{f{{l{Bd}}}}{f{{l{Bd}}}}Fjed}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bf}}}}}}}{{Dj{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{BJ`BJ`}`{{{f{CIl}}{f{{Bj{Bh}}}}}{{l{Al}}}}{{{f{CIl}}{f{{l{Aj}}}}}{{l{Al}}}}`{{BKnBh}BJ`}{{BEbBh}BEb}{{BL`Bh}BJ`}{{{f{AKb}}Bh}{{Cf{M`}}}}{{BJ`Bh}BJ`}{{{f{BLb}}Bh}{{Cf{M`}}}}{{{f{DEn}}Bh}Ln}{{{f{BLb}}Bh}{{A`{Lnn}}}}{{InIn}A@`}{BJ`DF`}{{{f{BN`}}{f{Ab}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bd}}}}{f{Bf}}d}{{l{Bd}}}}{{{f{BN`}}}{{l{F`}}}}0{{{f{BN`}}}{{l{Bd}}}}{{{f{BN`}}{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}4`{{{f{C@j}}{f{Bf}}}{{A`{Abn}}}}`{{BJ`Eh}BJ`}`{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}707070{{{f{BN`}}{f{{l{Bd}}}}}{{l{Bd}}}}10{{{f{{Mf{ce}}}}}FjOnBJl}{BJ`CM`}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{BJdBJd}}{{BJjBJj}BJj}{{{f{DbBJj}}BJj}b}{{{f{BJf}}{f{Ab}}}{{A`{Abn}}}}{{BJnc}BJn{{I`{Bf}}}}{{DBj{f{Bf}}}BJ`}{{{f{BId}}}{{f{Bf}}}}`1{{{f{Bf}}}BJ`}{BKnBJ`}{BEbBEb}{BL`BJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{DCj}}}Ln}{{{f{BLb}}}{{A`{Lnn}}}}{{}{{BKf{{Mf{BKd}}}}}}>{{{f{Dbc}}i}{{A`{gBBn}}}{}{}{}{{AAj{{f{Dbe}}}{{Ad{g}}}}}}{{BEbIn}BEb}{{BJh{Cf{Fj}}}BEb}{{BL`BJ`}BJ`}{{BJ`{Cf{Fj}}}BJ`}{{{f{AKd}}{f{c}}}{{A`{AKdn}}}On}{{{f{BLb}}{f{{l{F`}}}}}{{A`{Abn}}}}{{{f{DFb}}{f{{Bj{A@`}}}}Lf}DFb}{{{f{DFb}}{f{{Bj{A@`}}}}}DFb}{{{f{BLb}}{f{{Bj{In}}}}}{{A`{Abn}}}}{{{f{BLb}}{f{{Bj{In}}}}}Ab}{{{f{AKf}}{f{c}}}AKfOn}{{{f{BLb}}{f{{l{F`}}}}}Ab}{{{f{DbBEl}}}{{Cf{Hj}}}}{{BJ`BJ`BJ`}BJ`}{{CElc}CEn{{B@`{BJ`}}}}{{CF`c}CFb{{B@`{BJ`}}}}`{{BJ`BJ`BF`CAj}BJ`}```{{{f{C@j}}Kf}{{A`{{l{Kd}}n}}}}{BEb{{A`{DFdn}}}}{CEj{{A`{DFdn}}}}1{{{f{CHf}}}{{Cf{Il}}}}{{BL`Fj}BJ`}{{{f{BCb}}AOf}BCl}{{{f{BEl}}}{{Cl{Cj}}}}{{{f{AKh}}}{{Gb{{f{{Bj{Bh}}}}}}}}{{{f{BEb}}d}{{A`{Efn}}}}{{{f{DFf}}{Cf{{f{Bf}}}}d}{{A`{AAfn}}}}{{{f{BIh}}{Cf{{f{Bf}}}}d}{{A`{AAfn}}}}{{{f{BJ`}}{f{BCb}}D@l}{{A`{Obn}}}}{{{f{BN`}}{f{{l{F`}}}}d}{{A`{{l{Kd}}n}}}}{BKnBJ`}{{{f{BN`}}}{{l{Bd}}}}{DBjBJ`}{{{f{AAh}}}{{Cf{In}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BJ`BJ`}{{{f{BLd}}}{{A`{Obn}}}}{{{f{C@j}}{f{Bf}}}{{A`{Abn}}}}{{{f{c}}}Ef{}}000000000000{{{f{DbBCb}}{f{BCb}}}{{A`{dn}}}}`887{{{f{CCj}}c}{{BNj{c}}}BNh}{{{f{CE`}}c}{{BOb{c}}}BNh}{{{f{DbBJj}}BJj}b}``{{BEbIncFb}BEb{{I`{{Bj{BJ`}}}}}}{{{f{BEl}}{f{BEl}}}Hj}{{{f{BEl}}f}Hj}10{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}g{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{f{DFh}}{Cf{{f{AM`}}}}{f{{l{Bd}}}}}{{A`{DFhn}}}}{{{f{BF`}}Gh{Cf{{f{AM`}}}}ceg}{{A`{Ghn}}}{{Dj{Gh}{{Ad{Gh}}}}}{{Dj{Gh}{{Ad{ALn}}}}}{{Dj{ALn}{{Ad{Gh}}}}}}{{{f{BF`}}Gh{Cf{{f{AM`}}}}}{{A`{Ghn}}}}{{{f{CB`}}Gh{Cf{{f{AM`}}}}}{{A`{Ghn}}}}10`10{g{{A`{AMhe}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}{e{{A`{BElc}}}{}{{Hh{}{{Ch{{A`{{Cf{b}}c}}}}}}}}{e{{A`{BElc}}}{}{{Hh{}{{Ch{{A`{bc}}}}}}}}2{{AFng}{{A`{AMje}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}0{{AFne}{{A`{BElc}}}{}{{Hh{}{{Ch{{A`{{Cf{b}}c}}}}}}}}{{AFne}{{A`{BElc}}}{}{{Hh{}{{Ch{{A`{bc}}}}}}}}{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{ADh{f{Bf}}}{{A`{{l{c}}e}}}Dh{}}{{ADj{f{{l{c}}}}}{{A`{{l{c}}e}}}Dh{}}10{{ADj{f{Bf}}Eh}{{A`{{l{c}}e}}}Dh{}}0{c{{A`{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Il{{A`{CHfn}}}}{{{Mf{{Bj{c}}e}}}{{A`{{Mf{{A@j{c}}e}}}}}{}BJl}2222222222222222{DBb{{A`{CHhBBf}}}}{{{f{BCb}}{f{Bf}}}{{A`{{f{Eh}}n}}}}{{{f{BCb}}Fj}{{A`{{Gl{{f{{BA`{B@n}}}}{f{Eh}}}}n}}}}{{{f{BCb}}{f{Bf}}}{{A`{Obn}}}}{{{f{BCb}}{f{Bf}}}{{A`{{Gl{Fj{f{{BA`{B@n}}}}{f{Eh}}}}n}}}}{{{f{DbBCb}}{f{Bf}}}{{A`{{f{DbEh}}n}}}}{{{f{D@n}}{f{Bf}}}{{A`{Fjn}}}}9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{CBb{Cf{CJ`}}}{{A`{{BIj{AFd}}n}}}}{{{f{BLd}}c}{{A`{Obn}}}{{AAj{{f{Eh}}}{{Ad{{A`{Ehn}}}}}}}}{{{f{BLd}}c}{{A`{Obn}}}{{AAj{{f{{Bj{{f{Eh}}}}}}}{{Ad{{A`{Ehn}}}}}}}}{{BJ`c}{{A`{BJ`n}}}{{Af{BJ`}{{Ad{{A`{BJ`n}}}}}}}}{{{f{BLd}}c}{{A`{Obn}}}{{AAj{{f{Ob}}}{{Ad{{A`{Obn}}}}}}}}{{DCnFj}{{A`{Fjn}}}}{Bh{{A`{CEdn}}}}{In{{A`{CEfn}}}}{Ml{{A`{CEhn}}}}{c{{A`{{Mf{c}}DFj}}}{}}{{AFn{Gb{{Cl{Cj}}}}{Cf{Hj}}}{{A`{BEln}}}}{{ce}{{A`{{Mf{ce}}DFj}}}{}BJl}{{}{{A`{{Mf{{BMn{c}}}}DFj}}}{}}{c{{A`{{Mf{{BMn{e}}c}}DFj}}}BJl{}}10`{c{{A`{{DDh{{Mf{c}}}}DFj}}}{}}{{ce}{{A`{{DDh{{Mf{ce}}}}DFj}}}{}BJl}{{{f{BCl}}{f{{Bj{Fj}}}}}{{A`{BCln}}}}{{{f{BLj}}{f{Db{Gb{Bh}}}}}{{A`{bn}}}}{{{Mf{ce}}}{{A`{c{Mf{ce}}}}}{}BJl}{{{f{c}}}AAd{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bf}}}}`{{BJjBJj}BJj}{{{f{AHf}}}{{A`{AHfn}}}}{BKnBJ`}{{BEb{Cf{{Gb{Ef}}}}BCh}BEb}{BL`BJ`}{BJ`BJ`}{{{f{BLb}}}{{A`{Abn}}}}{{BEb{Cf{e}}BCh}BEb{{B@`{BJd}}AD`}{{I`{{Bj{c}}}}}}54320{{BEbe}BEb{{B@`{BJd}}AD`}{{I`{{Bj{c}}}}}}{{{Mf{{AFj{c}}}}}{{A`{cb}}}Ib}{{{Mf{ce}}}cAD`BJl}{{{f{DbLn}}Il}b}{{{f{DbCBb}}{f{DFl}}}b}7{{{f{DFn}}c{f{Bf}}BF`}{{A`{AAfn}}}{{BEh{Ef}}}}0{{{BNn{c}}d}{{BNn{c}}}BIn}```{{BJnCCh}BJn}`{{{f{BEl}}}{{Cf{{f{Hj}}}}}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}cAD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{Ln}}}{{f{Il}}}}{{{f{CLd}}ddEfd}{{A`{AAfn}}}}{{BJ`ddEfd}BJ`}``3{{{f{BEl}}}{{f{{Bj{{Cl{Cj}}}}}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{BEl}}}DBd}{{BKnBh}BJ`}{{BEbBh}BEb}{{BL`Bh}BJ`}{{{f{AKb}}Bh}{{Cf{M`}}}}{{BJ`Bh}BJ`}{{{f{BLb}}Bh}{{Cf{M`}}}}{{{f{DEn}}Bh}Ln}{{{f{BLb}}Bh}{{A`{Lnn}}}}``{{{f{DG`}}A@d{f{Db{Gb{Jh}}}}}{{A`{bn}}}}{{{f{DG`}}A@d{f{Db{Bj{Jh}}}}}{{A`{bn}}}}`{{{f{{Mf{{AFj{c}}}}}}g}{{A`{eb}}}Ib{}{{AAj{{f{c}}}{{Ad{e}}}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mf{ce}}}}}FjOnBJl}{{{f{CJf}}}{{l{N`}}}}{{{f{CJh}}}{{l{N`}}}}{{{f{C@j}}}{{A`{{l{N`}}n}}}}10{{{f{CAn}}}{{Cf{In}}}}{{{f{BF`}}}Gh}`{{{f{BF`}}}d}`{cCEl{{B@`{BJ`}}}}{{CEnc}CF`{{B@`{BJ`}}}}{{CFbc}CF`{{B@`{BJ`}}}}```{{BJnBEb}BJn}{{CGbBJ`}CGb}{{CAb{Cf{{DAn{Fj}}}}}CAb}{{{BNd{c}}{DAn{Fj}}}{{BNd{c}}}BNh}{{{CMl{c}}{DAn{Fj}}}{{CMl{c}}}BIn}{{C@nd}C@n}{Fjc{}}0{FjBCb}{{{CIn{c}}{Cf{{DAn{Fj}}}}}{{CIn{c}}}BIn}{{CBbFj}CBb}{{C@n{Cf{CIf}}}C@n}{{CAb{Cf{CIf}}}CAb}{{BEbd}BEb}{{BIdCC`}BId}{{BEbBJ`}BEb}{{{f{DbBCb}}{BA`{B@n}}Eh}{{Cf{Eh}}}}{{BEbc}BEb{{I`{{Bj{BJ`}}}}}}{{{CMf{c}}{Cf{{Gb{Ef}}}}}{{CMf{c}}}BIn}{{{BLf{c}}{Cf{{Gb{Ef}}}}}{{BLf{c}}}BLh}{{{BNn{c}}{Cf{{Gb{Ef}}}}}{{BNn{c}}}BIn}{{CBb{Cf{{Mf{{Bj{Ef}}}}}}}CBb}`4{{C@n{Cf{{f{Bf}}}}}C@n}{{CBd{Cf{c}}}CBd{{B@`{CBh}}}}{{{CMh{c}}AOf}{{CMh{c}}}{}}{{{BNj{c}}AOf}{{BNj{c}}}BNh}{{{CMh{c}}{Cf{CCl}}}{{CMh{c}}}{}}{{CJl{Cf{CCl}}}CJl}{{{BNj{c}}{Cf{CCl}}}{{BNj{c}}}BNh}{{{BOb{c}}CEb}{{BOb{c}}}BNh}{{BEbc}BEb{{I`{{Bj{BEb}}}}}}{{{BOb{c}}{Cf{Fj}}}{{BOb{c}}}BNh}{{{BNd{c}}{Cf{Ef}}}{{BNd{c}}}BNh}0{{CGbBJ`}CGb}{{CGdBJ`}CGd}{{C@nd}C@n}{{CBdd}CBd}{{{f{BLd}}Eh}{{A`{Obn}}}}{{C@n{Cf{{Mf{BCb}}}}}C@n}{{CBb{Cf{{Mf{{Gb{Eh}}}}}}}CBb}{{C@nCBf}C@n}{{CBdCBf}CBd}{{C@nBh}C@n}{{CBdBh}CBd}{{CJlCJ`}CJl}{{CM`{Gb{BJ`}}}{{A`{BJ`n}}}}{{{BNd{c}}{Cf{Fj}}}{{BNd{c}}}BNh}{{{BNd{c}}{Cf{d}}}{{BNd{c}}}BNh}{{CGdBJ`BJ`BJ`}CGd}=={{CBbd}CBb}{{{CMf{c}}{Cf{{Gb{Ab}}}}}{{CMf{c}}}BIn}{{{BNn{c}}{Cf{{Gb{Ab}}}}}{{BNn{c}}}BIn}{{CGbBJ`BJ`BJ`}CGb}4{{CGbBJ`}CGb}{{CGdBJ`}CGd}{{C@nd}C@n}{{CAbd}CAb}{{{CMl{c}}d}{{CMl{c}}}BIn}{{{CIn{c}}d}{{CIn{c}}}BIn}9{{{CMf{c}}{Cf{{Gl{{Mf{Bf}}{Mf{Bf}}}}}}}{{CMf{c}}}BIn}{{{BNn{c}}{Cf{{Gl{{Mf{Bf}}{Mf{Bf}}}}}}}{{BNn{c}}}BIn}{{C@n{Cf{{Mf{Bf}}}}}C@n}{{CAb{Cf{{Mf{Bf}}}}}CAb}{{C@n{Cf{Fj}}}C@n}{{CAb{Cf{{DAn{Fj}}}}}CAb}{{CBb{Cf{Fj}}}CBb}{{{CMj{c}}DGb}{{CMj{c}}}BNh}{{{CMl{c}}DGb}{{CMl{c}}}BIn}{{{BNd{c}}Ef}{{BNd{c}}}BNh}={{CBbd}CBb}{{B@d{DGd{EfEf}}}B@d}{{BCl{DGd{EfEf}}}BCl}{{CGbBJ`}CGb}{{CGdBJ`}CGd}010{{C@nd}C@n}{{CBdd}CBd}3{{CIdc}CId{{B@`{{Cf{Fj}}}}}}{{C@nc}C@n{{B@`{{Cf{Fj}}}}}}>{{CAbc}CAb{{B@`{{Cf{Fj}}}}}}{{CAb{Cf{Fj}}}CAb}{{{CMf{c}}{Cf{Fj}}}{{CMf{c}}}BIn}{{{BLf{c}}{Cf{Fj}}}{{BLf{c}}}BLh}{{{CIn{c}}{Cf{Fj}}}{{CIn{c}}}BIn}{{CBb{Cf{Fj}}}CBb}10:{{BEbd}BEb}{{{BNd{c}}Ef}{{BNd{c}}}BNh}{{C@n{Cf{CBj}}}C@n}{{CBd{Cf{CBj}}}CBd}{{BEbBJj}BEb}{{CBbCBd}CBb}{{{CIn{c}}{Cf{e}}}{{CIn{c}}}BIn{{B@`{CJ`}}}}{{CBb{Cf{c}}}CBb{{B@`{CJ`}}}}{{CId{Mf{{Gb{CJ`}}}}}CId}{{C@n{Mf{{Gb{CJ`}}}}}C@n}{{CAb{Mf{{Gb{CJ`}}}}}CAb}{{{CIn{c}}{Cf{{Mf{BIl}}}}}{{CIn{c}}}BIn}{{{BNn{c}}{Cf{{Mf{BIl}}}}}{{BNn{c}}}BIn}<{{{CMf{c}}{Cf{{Gb{Fj}}}}}{{CMf{c}}}BIn}{{{BLf{c}}{Cf{{Gb{Fj}}}}}{{BLf{c}}}BLh}{{{CMl{c}}{Cf{{Gb{Ef}}}}}{{CMl{c}}}BIn}{{{CIn{c}}{Cf{{Mf{{Bj{Ef}}}}}}}{{CIn{c}}}BIn}{{{BNn{c}}{Cf{{Gb{Fj}}}}}{{BNn{c}}}BIn}{{CBb{Cf{{Mf{{Gb{Fj}}}}}}}CBb}{{BEbd}BEb}{{C@n{Cf{Bh}}}C@n}{{{BNd{c}}Bh}{{BNd{c}}}BNh}{{CBd{Cf{Bh}}}CBd}{{{BNd{c}}CCb}{{BNd{c}}}BNh}{{C@nd}C@n}{{CBbd}CBb}{{CIdd}CId}2{{CAbd}CAb}{{{CIn{c}}d}{{CIn{c}}}BIn}39{{{BOb{c}}{Cf{Fj}}}{{BOb{c}}}BNh}{{CIdc}CId{{B@`{{Cf{DCh}}}}}}{{BEb{f{Bf}}{Cf{In}}}BEb}{{C@nc}C@n{{B@`{{Cf{DCh}}}}}}{{C@n{Cf{DCh}}}C@n}{{CAbc}CAb{{B@`{{Cf{DCh}}}}}}{{CAb{Cf{DCh}}}CAb}{{{CMf{c}}{Cf{DCh}}}{{CMf{c}}}BIn}{{{BLf{c}}{Cf{DCh}}}{{BLf{c}}}BLh}{{{CIn{c}}{Cf{{f{DbDCh}}}}}{{CIn{c}}}BIn}{{{BNn{c}}{Cf{DCh}}}{{BNn{c}}}BIn}{{CBb{Cf{DCh}}}CBb}{{{f{BLd}}}{{A`{Obn}}}}{{CBbFj}CBb}{{C@n{Cf{{Mf{BCb}}}}}C@n}{{CAb{Cf{{Mf{BCb}}}}}CAb}{{{CMl{c}}{Mf{BCb}}}{{CMl{c}}}BIn}{{{CIn{c}}{Mf{BCb}}}{{CIn{c}}}BIn}{{CBb{Cf{{Mf{BCb}}}}}CBb}{{C@nc}{{A`{C@nn}}}{{Dj{BCb}{{Ad{{A`{BCbn}}}}}}}}4{{{CMl{c}}{f{BCb}}}{{CMl{c}}}BIn}{{{CIn{c}}{f{BCb}}}{{CIn{c}}}BIn}3{{CGbBJ`}CGb}{{CGdBJ`}CGd}{{C@nBh}C@n}{{{BNd{c}}Bh}{{BNd{c}}}BNh}{{CBdBh}CBd}{{BEbd}BEb}{{C@nFj}C@n}?0?{{{BNn{c}}{Cf{{Gl{FjFj}}}}}{{BNn{c}}}BIn}2{{{BOb{c}}CHd}{{BOb{c}}}BNh}3{{BId{Cf{Ef}}}BId}{{{BNd{c}}{Cf{Ef}}}{{BNd{c}}}BNh}{{CGbKf}CGb}{{CGb{Cf{Ef}}}CGb}{{C@nd}C@n}{{CBdd}CBd}109{{BEl{Cf{Hj}}}BEl}{{{f{BEl}}{Cf{Hj}}}{{Cl{Cj}}}}{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hj}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}2{{CGdBJ`}CGd}{{CGbBJ`}CGb}{BEbBEb}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}10{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}210213210210{{{f{Db{Mf{AFd}}}}{f{{Bj{Bh}}}}}{{A`{FjBBn}}}}{{{f{CCj}}AAfc}{{A`{bn}}}BNh}{{{f{CE`}}AAfc}{{A`{bn}}}BNh}{{{f{DbAAf}}{f{CLn}}{f{{Bj{c}}}}{f{e}}Fj}{{A`{bn}}}{{I`{Bf}}}{DGfIbId}}{{{f{Dbc}}e}{{A`{FjBBn}}}{}DE`}{{{f{Db{Mf{AFd}}}}{f{{Bj{DGh}}}}}{{A`{FjBBn}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{CJf}}}{{l{Jn}}}}{{{f{CJh}}}{{l{Jn}}}}{{{f{C@j}}}{{A`{{l{Jn}}n}}}}``{{{f{AKj}}{f{{l{Al}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BFd}}c}Ab{{Dj{{Gl{In{f{{BFf{In}}}}}}}{{Ad{Cf}}}}IbId}}{{{f{BFd}}c}Ab{{Dj{{Gl{In{f{{BFf{In}}}}}}}{{Ad{}}}}IbId}}{{{f{{Bj{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{Cf}}}}IbId}}{{{f{{Bj{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{}}}}IbId}}{{{f{{Bj{c}}}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gl{InIn}}}}}}Ij}}{{{f{{Bj{c}}}}{f{Hj}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gl{InIn}}}}}}Ij}}{{{f{{l{c}}}}InIn}{{l{c}}}Dh}{{{f{{Gb{{A@j{In}}}}}}{f{{Bj{{Cl{Cj}}}}}}}d}{{{f{BH`}}{f{C`}}}Ab}{{BHbBHb}BHb}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DhDh{{Dj{ff}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}Dh}{{{l{c}}{l{e}}gik}{{l{m}}}DhDh{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DhDh{{AKl{CfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}g}bDhDh{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bd}}}DhDh{{Af{{f{DbEf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDh{}{{Af{}{{Ad{g}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}DhDh{CjAKn}{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DhDhCj{{Af{}{{Ad{g}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDh{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DhDhDh{{AL`{CfCfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hf{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DhDhALb{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DhDhDh{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{CjAKn}ALb{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dh{}{{Hf{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dh{{ALd{Cf}}}Dh}{{{f{{l{c}}}}e}{{l{g}}}DhALdDh}{{{f{{l{c}}}}g}{{l{i}}}DhCj{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}{{{l{c}}g}{{l{i}}}DhCj{{Af{}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{CjAKn}{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hf{e}}}}}}0``{{{f{DGj}}}{{l{F`}}}}0{{{f{DGj}}{f{{l{Kd}}}}d}{{A`{Abn}}}}{{{f{DGj}}{f{{l{Bd}}}}d}{{A`{Abn}}}}{{{f{DGj}}}Ab}{{{f{DGj}}}{{A`{Abn}}}}1{{{f{DGj}}}{{A`{{l{F`}}n}}}}{{{f{DGj}}}{{l{Cd}}}}{{{f{DGj}}{f{Ab}}}{{A`{Abn}}}}{{{f{DGj}}En}{{A`{{l{Cd}}n}}}}{{{f{DGj}}Bh}{{A`{Abn}}}}5{{{f{DGj}}}{{A`{{l{Ah}}n}}}}01{{{f{DGl}}}{{f{{l{Cd}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{BOhBJ`}BJ`}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}3{cc{}}{{}Fj}{ce{}{}}{BOhBJ`}7{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}3`````````````````````{{{f{DbDGn}}{f{{Bj{Bh}}}}ddd}{{A`{bn}}}}{{{f{DbDGn}}d}b}====<<<<::::99998888{{{f{DGn}}}Eh}88887777{{{f{{Bj{Fj}}}}Fj{f{BCb}}{Cf{Bh}}CBfd}{{A`{{Gb{DGn}}n}}}}7777{DGn{{A`{Abn}}}}6666666655558888```````````{{{f{BLn}}{Cf{{f{Bf}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLn}}{Cf{{f{Bf}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLn}}{Cf{{f{Bf}}}}Kfdd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLn}}{Cf{{f{Bf}}}}Kfd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLn}}{Cf{{f{Bf}}}}d}{{A`{{Kb{LbKd}}n}}}}`{{{f{CJf}}}{{l{N`}}}}{{{f{CJh}}}{{l{N`}}}}{{{f{CJj}}}{{l{Kd}}}}`{{{f{DAl}}}{{l{N`}}}}21{{{f{CJf}}}{{l{Al}}}}{{{f{CJh}}}{{l{Al}}}}{{{f{CJf}}}{{l{Jn}}}}{{{f{CJh}}}{{l{Jn}}}}55`46576{{{f{DAl}}}{{l{Jn}}}}16{{{f{CJf}}}{{l{Nj}}}}{{{f{CJh}}}{{l{Nj}}}}{{{f{Bf}}{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kb{K`Jn}}}}{{{f{Bf}}{f{{Bj{{f{Bf}}}}}}{f{Bf}}}{{Kb{LbKd}}}}{{{f{Bf}}{f{{Bj{{f{Bf}}}}}}{f{Bf}}Kf}{{Kb{KhKd}}}}=<{{{f{DEd}}Oj}{{A`{Abn}}}}{{{f{DEd}}{f{Ab}}CAf}{{A`{Abn}}}}101010101010<>=`?>>`98````````{{{f{c}}h}b{}}{{{f{BLn}}{Cf{{f{Bf}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLn}}{Cf{{f{Bf}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLn}}{Cf{{f{Bf}}}}Kfdd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLn}}{Cf{{f{Bf}}}}Kfd{Cf{{f{Ef}}}}{f{{l{Bd}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{DH`}}}{{f{{l{Bd}}}}}}{{{f{BLn}}{Cf{{f{Bf}}}}d}{{A`{{Kb{LbKd}}n}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DHb}}}DHb}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{DHb}}{f{DHb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DHb}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{DHb}}{f{Dbc}}}bADf}`{{}Fj}{ce{}{}}{{{f{DHb}}{f{Bf}}}d}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{{DHd{c}}}}}{{DHd{c}}}{AD`An}}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{cc{}}{{{f{Bf}}}{{Cf{DHb}}}}{{}Fj}{ce{}{}}`{{{f{Db{DHd{c}}}}{f{Bf}}}CfAn}{{{f{DbDHf}}{f{{Bj{Bh}}}}{Cf{Kf}}}{{Cf{c}}}{}}{{{f{Db{DHd{Kd}}}}{f{{Bj{Bh}}}}{Cf{Kf}}}{{Cf{Gh}}}}{{{f{Db{DHd{Jn}}}}{f{{Bj{Bh}}}}{Cf{Kf}}}{{Cf{Ml}}}}`{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}{{c{Cf{Kf}}}{{A`{{DHj{}{{DHh{e}}}}n}}}{}{}}{{DHb{Cf{Kf}}}{{A`{{DHd{Jn}}n}}}}{{DHb{Cf{Kf}}}{{A`{{DHd{Kd}}n}}}}3{{{f{c}}}AAd{}}:````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Dbc}}}{{f{Dbe}}}{}{}}0{{{f{CIf}}}CIf}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}CIf}{Fj{{f{c}}}{}}0{Fj{{f{Dbc}}}{}}0{Fjb}0{{{f{CIf}}{f{CIf}}}d}{{{f{DHl}}{f{DHl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CIf}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}0{{{f{Bf}}}{{A`{DHl}}}}{{{f{Bf}}g}{{A`{CIfn}}}{{I`{Bf}}}{{B@`{Ef}}}{{Hh{}{{Ch{{Gl{ce}}}}}}}}{{{f{CIf}}{f{Dbc}}}bADf}{{}Fj}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}000{{{f{c}}}AAd{}}033{{CIfFj}CIf}`````````{{{f{{Bj{Bh}}}}}d}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAMh{}{{Hh{}{{Ch{c}}}}}}0{{AFne}AMj{}{{Hh{}{{Ch{c}}}}}}0{{{f{AMl}}}{{f{Eh}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bj{c}}}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{ANn}}{f{Eh}}}{{A`{Abn}}}}{{{f{ANn}}{f{Eh}}Ff}{{A`{Abn}}}}`{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{{ANh{Bf}}}Eh}{{{f{ANn}}}{{f{Eh}}}}`{{ANl{f{{l{F`}}}}{f{{l{F`}}}}}{{A`{{l{F`}}n}}}}{{{Gb{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{Gb{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gf{}{{Ch{e}}}}IjIbId}}{{FjcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{FjAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{ANn}}Fj}{{A`{Iln}}}}{{{f{ANn}}Fj}Il}{{}Eh}{{{f{BAb}}Fj}Il}4{{BAdEh}{{A`{Lnn}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{{{f{AMd}}{f{AMd}}}{{A`{{Gl{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gl{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Eh}}{f{Eh}}}{{A`{Ehn}}}}`{{}c{}}0{g{{A`{AMhe}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}0{{AFng}{{A`{AMje}}}{}{}{{Hh{}{{Ch{{A`{ce}}}}}}}}0{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fj}cAD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}{Fjc{}}0{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hj}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gf{}{{Ch{c}}}}IjIbId}}```````````{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{ANl{f{{l{F`}}}}{f{{l{F`}}}}}{{A`{{l{F`}}n}}}}=<`````````{{}b}0{{}d}{{{f{{Kb{KhKd}}}}{f{{l{Bd}}}}CIb{Fn{Gh}{{Ad{ALn}}}}{Fn{ALn}{{Ad{Gh}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bf}}}}{Fn{Gh}{{Ad{ALn}}}}{Fn{ALn}{{Ad{Gh}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bf}}}}{f{{l{Bd}}}}CIb}{{A`{{Kb{KhKd}}n}}}}```{{c{Cf{Hj}}}COh{}}{{{COj{Gh}}{COj{Bh}}{Cf{Hj}}}COl}{{{COj{Gh}}{COj{Bh}}{Cf{Hj}}}COn}`{CKlBJ`}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{CKlKf}BJ`}3{{CKlBJ`Kf}BJ`}{{CKlEf}BJ`}555{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}8{cc{}}9{{}Fj}{ce{}{}};;;;;;;;;;{{CKl{Cf{Ef}}BJ`CIb}BJ`}{{CKlBJ`}BJ`}={{CKl{f{Bf}}}BJ`}>;0>>>>>>>1{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}5{CKlBJ`}0>0`{{{f{BHd}}{f{AAf}}{f{C`}}}{{A`{Abn}}}}{{{f{BHd}}}{{A`{{f{Bf}}n}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}DHn}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{DHn{Cf{{f{AFn}}}}}{{A`{AEfn}}}}{cc{}}{{}Fj}{ce{}{}}{{{f{DHn}}}d}{{FjFj}DHn}{{{f{DbDHn}}{Cl{Cj}}}b}{{{f{DbDHn}}}b}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}6`{{{f{{l{c}}}}}FjAn}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DI`}}}DI`}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{DI`}}{f{DI`}}}d}{{{f{DI`}}{f{DbHb}}}{{A`{bHd}}}}0{cc{}}{{{f{DI`}}{f{Dbc}}}bADf}{{}Fj}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DIb}}}DIb}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{DIb}}{f{DIb}}}d}{{{f{DIb}}{f{DbHb}}}{{A`{bHd}}}}0{cc{}}{{{f{DIb}}{f{Dbc}}}bADf}{{}Fj}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4{{LfLf}Lf}{{{f{{l{F`}}}}In}{{A`{bn}}}}{{{f{{ALf{In}}}}In}{{A`{bn}}}}```{{{f{Ab}}CDd}Ab}{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}CfLd{{Dj{}{{Ad{}}}}Dl}}{{{f{Ab}}{f{C`}}}Ab}0{{{f{Ab}}{f{Bf}}}Ab}0`{{{f{c}}h}b{}}{{{f{DId}}}{{f{AG`}}}}{{{f{DbDId}}}{{Cl{Cj}}}}{{{f{DbDId}}}{{f{DbAG`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DId}}}DId}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{DId}}}{{f{AFn}}}}{{}DId}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{DbDId}}Fj}b}{{{f{DId}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{}Fj}{ce{}{}}{{{f{DId}}}Fj}{FjDId}{{{f{DbDId}}}b}70{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{{f{DId}}}{{Cf{{f{DIf}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DFl}}}DFl}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}DFl}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{{BCj{EhA@d}}}}}Eh}{{{f{DFl}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{DFl}}}Fj}{{{f{DFl}}}{{Mf{BCb}}}}{{{f{Bf}}dd}Eh}{{{f{DAd}}Bh{Cf{Fj}}d{Cf{{f{BCb}}}}FjFj{Cf{{f{CBh}}}}{Cf{Bh}}Bh{Cf{{f{CBj}}}}dd{f{Db{Cf{Fj}}}}d}{{A`{{Gl{BCbFjFj}}n}}}}{{}Fj}{ce{}{}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}{{{f{DAd}}{f{CBb}}}{{A`{DFln}}}}1{{{f{c}}}AAd{}}4{{DFl{Mf{BCb}}}DFl}````{{{f{{l{c}}}}eALhd}{{Gb{In}}}Dh{{Cn{}{{Ch{Cf}}}}}}{{{f{{Bj{f}}}}cIne}{{Gb{In}}}{{Cn{}{{Ch{Cf}}}}}{{Dj{fFjf}{{Ad{d}}}}}}``{{{f{DIh}}}{{f{Ab}}}}{{{f{C@j}}}{{A`{{l{Jn}}n}}}}{{{f{C@j}}}{{A`{{l{N`}}n}}}}0{{{f{C@j}}}{{A`{{l{Al}}n}}}}22112{{{f{C@j}}}{{A`{{l{Nj}}n}}}}322{{{f{C@j}}{f{Bf}}}{{A`{Abn}}}}{{{f{C@j}}Kf}{{A`{{l{Kd}}n}}}}1445`{{Fj{f{Db{Gb{d}}}}}b}```{{{f{AK`}}FjFj}AK`}0{{Fj{f{{Bj{Ab}}}}{f{DbFb}}}{{A`{{ALj{{l{F`}}}}n}}}}{{{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{ALln}}}}{{{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{Jd{Gh}}n}}}}{{{f{Bf}}{f{{Bj{Ab}}}}{f{{Bj{d}}}}{f{{Bj{d}}}}}{{A`{{l{El}}n}}}}{{{f{Bf}}{f{{Bj{Ab}}}}}{{A`{{l{El}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{Bj{Ab}}}}}{{A`{ALln}}}}{{{f{{Bj{Ab}}}}}{{A`{{l{El}}n}}}}0```````````88```{{{f{BMl}}}{{f{{l{Bd}}}}}}{{{f{BN`}}}{{A`{{l{Bd}}n}}}}{{{f{BN`}}}{{l{Bd}}}}{{{f{BN`}}{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{BN`}}{f{Bf}}d}{{A`{{l{Al}}n}}}}{{{f{BN`}}{f{{l{Bd}}}}dd}{{A`{{l{Al}}n}}}}{{{f{BN`}}{f{Bf}}}{{A`{{l{Al}}n}}}}{{{f{BN`}}{f{Bf}}d}{{A`{{l{F`}}n}}}}{{{f{BN`}}{f{{l{Bd}}}}d}{{A`{{l{F`}}n}}}}{{{f{BN`}}{f{{l{Bd}}}}Fj}{{A`{{l{Bd}}n}}}}{{{f{BN`}}{f{Bf}}}{{A`{{l{Ah}}n}}}}{{{f{BN`}}{f{{l{Bd}}}}}{{A`{{l{Ah}}n}}}}{{{f{BN`}}{f{Bf}}{f{Eh}}}{{A`{Abn}}}}5{{{f{BN`}}{f{{l{Bd}}}}dd}{{A`{{l{F`}}n}}}}{{{f{BN`}}{f{Bf}}}{{A`{{l{F`}}n}}}}=<{{{f{{Bj{{f{{l{Bd}}}}}}}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{{f{BN`}}{f{Bf}}{f{Bf}}}{{A`{{l{Bd}}n}}}}0{{{f{BN`}}{f{Bf}}{f{Bf}}Fj}{{A`{{l{Bd}}n}}}}1{{{f{BN`}}{f{{l{Bd}}}}}{{l{Ah}}}}{{{f{BN`}}{f{{l{Bd}}}}Fj}{{A`{{l{j}}n}}}}0{{{f{{l{Bd}}}}{f{{l{Bd}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bf}}}}}}}{{Dj{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{{{f{{l{Bd}}}}{f{{l{Bd}}}}Fjed}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bf}}}}}}}{{Dj{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{{{f{BN`}}{f{Ab}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bd}}}}{f{Bf}}d}{{l{Bd}}}}{{{f{BN`}}}{{l{F`}}}}0{{{f{BN`}}}{{l{Bd}}}}{{{f{BN`}}{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}4{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}505050{{{f{BN`}}{f{{l{Bd}}}}}{{l{Bd}}}}10{{{f{BN`}}{f{{l{F`}}}}d}{{A`{{l{Kd}}n}}}}444````````{{eFjFj}{{DIj{Gh}}}{{I`{Bf}}}{{Cn{}{{Ch{c}}}}}}{{eFjFj}{{Jd{Gh}}}{{I`{{Bj{Bh}}}}}{{Cn{}{{Ch{c}}}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bf}}{Gb{{Cl{Cj}}}}{f{AFn}}}{{A`{Abn}}}}{{{f{Bf}}{Gb{{Cl{Cj}}}}{f{AFn}}{Cf{{f{{DGd{EfEf}}}}}}}{{A`{Abn}}}}{{AbAb}}{{Abc}{}{B`Ll}}{{{f{Ab}}c}{}{B`Ll}}{{{f{Ab}}{f{Ab}}}}`{{{f{DbAb}}{f{Ab}}}{{A`{{f{DbAb}}n}}}}{{{f{Ab}}}{{Cf{Fj}}}}0{{{f{BLb}}En}{{l{F`}}}}{{{f{BLb}}}{{A`{{l{F`}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cd}}}}n}}}}{{{f{Ab}}Fj}{{f{{Cl{Cj}}}}}}{{{f{BLb}}}{{f{AG`}}}}{{{f{DbBLb}}}{{f{DbAG`}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DbBLb}}}{{f{Db{l{c}}}}}Dh}{{{f{BLb}}}{{f{{l{c}}}}}Dh}{{{f{Ab}}}{{f{BLb}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DbBLb}}}{{A`{Fjn}}}}{{{f{DbAb}}}{{A`{Fjn}}}}{{{f{Ab}}}{{A`{{f{{l{Aj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{El}}}}n}}}}{{{f{BLb}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{Al}}}}n}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000{{{f{BLb}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{Ab}}{f{Eh}}}{{A`{Abn}}}}0{{{f{Ab}}{f{Eh}}Ff}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMd}}n}}}}7{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bb}{{{f{BLb}}}{{G`{{Fl{{Cl{Cj}}}}{Fn{{f{{Cl{Cj}}}}}{{Ad{Fj}}}}}}}}{{{f{Ab}}}{{`{{Cn{}{{Ch{Fj}}}}}}}}{{{f{BLb}}}{{f{{Gb{{Cl{Cj}}}}}}}}{{{f{DbBLb}}}{{f{Db{Gb{{Cl{Cj}}}}}}}}{{{f{DbAb}}}{{f{Db{Gb{{Cl{Cj}}}}}}}}{{{f{Ab}}}Ab}{{{f{Lf}}}Lf}1{{{f{BLb}}}{{Mf{BLb}}}}{{{f{c}}{f{Dbe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{DbAb}}}b}{{{f{Ab}}}{{A`{{f{{Kb{K`Jn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kb{KhKd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kb{KlKj}}}}n}}}}{{}Ab}{Fj{{f{c}}}{}}00{{{f{Ab}}}f}1{Fj{{f{Dbc}}}{}}000{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Ll}}{{AbAb}}{{Abc}{}{B`Ll}}{Fjb}000{{{f{BLb}}}Ab}{{{f{BLb}}}{{f{Eh}}}}{{{f{Ab}}}{{A`{{f{{Kb{KnKd}}}}n}}}}{{{f{Lf}}{f{Lf}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Al}}n}}}}{{{f{Ab}}c}{{A`{{l{Al}}n}}}B@b}{{{f{Ab}}{f{Bf}}}{{A`{{l{Al}}n}}}}3{{{f{Ab}}{f{Bf}}}}3{{{f{Ab}}c}{}B@b}66{{{f{c}}{f{e}}}d{}{}}00{{{f{Ab}}}Fj}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DbAb}}{f{Ab}}}{{A`{{f{DbAb}}n}}}}{{{f{Ab}}IlFj}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Ed}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Eb}}}}n}}}}{{{f{BLb}}}{{Dn{Ob}}}}{{{f{Ab}}AHj}{{A`{Abn}}}}{{{f{BLb}}{f{{l{Al}}}}}{{A`{Abn}}}}{{{f{Lf}}{f{DbHb}}}{{A`{bHd}}}}{{{f{Ab}}{f{DbHb}}}{{A`{bHd}}}}0{{{f{Ab}}}Ef}{cc{}}00{{{l{c}}}AbDh}{{{Kb{K`Jn}}}Ab}{{{Kb{KhKd}}}Ab}{{{Kb{KnKd}}}Ab}4{{{Kb{LbKd}}}Ab}{{{f{Bf}}{f{{Bj{Il}}}}d}{{A`{Abn}}}}{{{f{Bf}}{f{{Bj{Il}}}}{f{Eh}}d}{{A`{Abn}}}}{{{f{Bf}}{Cl{Cj}}}{{A`{Abn}}}}{{{f{Bf}}{Gb{{Cl{Cj}}}}}{{A`{Abn}}}}{{{f{Bf}}{Gb{{Cl{Cj}}}}{f{Eh}}}Ab}{cAb{{Hh{}{{Ch{{f{In}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{Nl}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{Ef}}}}}}}}{cAb{{Hh{}{{Ch{{f{Bf}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{{f{Bf}}}}}}}}}}{cAb{{Hh{}{{Ch{{f{d}}}}}}}}{cAb{{Hh{}{{Ch{d}}}}}}{cAb{{Hh{}{{Ch{{Cf{d}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{Bh}}}}}}}}{cAb{{Hh{}{{Ch{Bh}}}}}}{cAb{{Hh{}{{Ch{{f{M`}}}}}}}}{cAb{{Hh{}{{Ch{{f{Bh}}}}}}}}{cAb{{Hh{}{{Ch{M`}}}}}}{cAb{{Hh{}{{Ch{{Cf{M`}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{Nh}}}}}}}}{cAb{{Hh{}{{Ch{{f{Jf}}}}}}}}{cAb{{Hh{}{{Ch{Jf}}}}}}{cAb{{Hh{}{{Ch{Nh}}}}}}{cAb{{Hh{}{{Ch{{Cf{Jf}}}}}}}}{cAb{{Hh{}{{Ch{{f{Nh}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{In}}}}}}}}{cAb{{Hh{}{{Ch{In}}}}}}{cAb{{Hh{}{{Ch{{f{Gh}}}}}}}}{cAb{{Hh{}{{Ch{Gh}}}}}}{cAb{{Hh{}{{Ch{{Cf{Gh}}}}}}}}{cAb{{Hh{}{{Ch{{f{Ml}}}}}}}}{cAb{{Hh{}{{Ch{Ml}}}}}}{cAb{{Hh{}{{Ch{{Cf{Jh}}}}}}}}{cAb{{Hh{}{{Ch{Jh}}}}}}{cAb{{Hh{}{{Ch{{f{Jh}}}}}}}}{cAb{{Hh{}{{Ch{{Cf{Nb}}}}}}}}{cAb{{Hh{}{{Ch{Nb}}}}}}{cAb{{Hh{}{{Ch{{Cf{Ml}}}}}}}}{cAb{{Hh{}{{Ch{{f{Nb}}}}}}}}{cAb{{Hh{}{{Ch{{f{Nl}}}}}}}}{cAb{{Hh{}{{Ch{Nl}}}}}}{cAb{{Hh{}{{Ch{Ef}}}}}}{{{f{Bf}}{Gb{Nn}}}Ab}{{{f{Bf}}{Gb{M`}}}Ab}{{{f{Bf}}{Gb{Jf}}}Ab}{{{f{Bf}}{Gb{Jh}}}Ab}{{{f{Bf}}{Gb{In}}}Ab}{{{f{Bf}}{Gb{Nh}}}Ab}{{{f{Bf}}{Gb{Nb}}}Ab}{{{f{Bf}}{Gb{Bh}}}Ab}{{{f{Bf}}{Gb{Nl}}}Ab}{{{f{Bf}}{Gb{Ml}}}Ab}{{{f{Bf}}{Gb{Gh}}}Ab}{{{f{Bf}}Fj{f{Eh}}}Ab}{{{f{Ab}}FjFj}Ab}{{{f{BLb}}Fj}{{A`{Iln}}}}{{{f{Ab}}}Fj}{{{f{Ab}}}J`}{{{f{Ab}}}Ab}{{{f{BLb}}}{{Cf{{Mj{Mh}}}}}}{{{f{BLb}}Fj}{{Cf{{f{Jb}}}}}}{{{f{BLb}}FjFj}{{Cf{{f{Jb}}}}}}{{{f{BLb}}Fj}Il}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}c}{{A`{{l{Al}}n}}}B@b}{{{f{Ab}}{f{Bf}}}{{A`{{l{Al}}n}}}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Al}}n}}}}30{{{f{Ab}}{f{Bf}}}}3{{{f{BLb}}}d}{{{f{Lf}}{f{Dbc}}}bADf}{{{f{Ab}}{Cf{Fj}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Jn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{N`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{F`}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Fj}000{ce{}{}}000{AbAAf}1{BCdAb}{AbAb}={{{f{Ab}}}{{A`{{l{Al}}n}}}}000{{{f{BLb}}}{{l{Al}}}}0{{}d}0{{{f{Ab}}}Lf}{{{f{Ab}}}DIl}{{{f{Ab}}}{{`{{Cn{}{{Ch{Ab}}}}}}}}{{{f{BLb}}}Fj}{{{f{Ab}}}Fj}{{{f{BLb}}Fj}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBJ`}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}c}{{A`{{l{Al}}n}}}B@b}{{{f{Ab}}{f{Ab}}}{{A`{{l{Al}}n}}}}{{{f{Ab}}{f{Bf}}}}3210{{{f{Ab}}}{{A`{{Cf{c}}n}}}Ll}{{{f{BLb}}}{{A`{Lnn}}}}{{{f{BLb}}}{{Cf{M`}}}}{{{f{Ab}}}Ln}1232{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{Abc}{}{B`Ll}}{{{f{Ab}}c}{}{B`Ll}}{{{f{BLb}}}Fj}{{{f{Ab}}}Fj}{{{f{BLb}}}{{A`{Fjn}}}}{{{f{BLb}}}{{f{Bf}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{Nh}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Jf}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{{Dn{{Bj{Bh}}}}}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Dn{Bf}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{{Dn{Bf}}}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{Nn}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Il}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{f{{Bj{Bh}}}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{{f{{Bj{Bh}}}}}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Dn{{Bj{Bh}}}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Nb}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Nl}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Jh}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{In}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{Gh}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Nh}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{Ml}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{Nl}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{Nb}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{Jh}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{ALn}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Bh}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{d}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Gb{Bh}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{In}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Ml}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Gh}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Ef}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{ALn}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{Jf}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{M`}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{AMb}}}}}}}}{{{f{Bf}}{Mn{Gh}}}Ab}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{Bh}}}}}}}}{{{f{Bf}}{Mn{Ml}}}Ab}{{{f{Bf}}c}Ab{{I`{{Bj{B@l}}}}}}{{{f{Bf}}{Mn{Jh}}}Ab}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{B@l}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{d}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{{Gb{Bh}}}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{AMb}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{Ef}}}}}}}}{{{f{Bf}}{Mn{In}}}Ab}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{B@j}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Ab}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{Cf{Ab}}}}}}}}{{{f{Bf}}{f{Ab}}}Ab}{{{f{Bf}}c}Ab{{I`{{Bj{B@j}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{{f{Bf}}}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{M`}}}}}}{{{f{Bf}}c}Ab{{I`{{Bj{Nn}}}}}}{{{f{Bf}}c}AbBCd}{{{f{Bf}}{f{Eh}}}Ab}{{{f{BLb}}FjFj}Ab}{{{f{Bf}}Fj}Ab}{{{f{DbDIl}}}Cf}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}c}{{A`{{l{Al}}n}}}B@b}{{{f{Ab}}{f{Ab}}}{{A`{{l{Al}}n}}}}{{{f{Ab}}{f{Bf}}}{{A`{{l{Al}}n}}}}3{{{f{Ab}}c}{}B@b}{{{f{Ab}}{f{Bf}}}}3{{{f{Ab}}}{{A`{{f{ADb}}n}}}}{{{f{BLb}}}Fj}`{{{f{Ab}}}{{Cl{L`}}}}{{{f{Ab}}}{{A`{Lnn}}}}{{{f{BLb}}M`Oh}{{A`{Lnn}}}}{{{f{BLb}}}Ab}{{Abc}{}{B`Ll}}{{{f{Ab}}c}{}{B`Ll}}{{{f{Ab}}{f{Ab}}}}{{{f{DbBLb}}{f{Bf}}}b}{{{f{DbAb}}{f{Bf}}}{{f{DbAb}}}}{{{f{Ab}}{f{{Bj{Gh}}}}}{{A`{Abn}}}}06{LfLf}{{{f{BLb}}{f{Dj}}Oj}{{A`{Abn}}}}{{{f{Ab}}M`dd{Cf{Jh}}}{{A`{Abn}}}}{{{f{Ab}}Fjdd{Cf{Jh}}}{{A`{Abn}}}}{{{f{Ab}}Fj}Ab}{{{f{DbAb}}Lf}b}{{{f{BLb}}Gh}Ab}{{{f{DbBLb}}}b}{{{f{DbAb}}}b}{{{f{Ab}}{Cf{Jh}}}Ab}{{{f{DIl}}}{{Gl{Fj{Cf{Fj}}}}}}{{{f{BLb}}GhFj}Ab}{{{f{Ab}}GhFj}Ab}{{{f{Ab}}En}{{A`{Abn}}}}{{{f{BLb}}En}{{A`{Abn}}}}{{{f{BLb}}Gh}{{Gl{AbAb}}}}{{{f{Ab}}Gh}{{Gl{AbAb}}}}{{{f{BLb}}Bh}{{Cf{M`}}}}{{{f{BLb}}Bh}{{A`{Lnn}}}}{{{f{Ab}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Ab}}Fj}{{A`{{Dn{Bf}}n}}}}{{{f{Ab}}{f{Eh}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{Abc}{}{B`Ll}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Ll}}{{AbAb}}{{{f{Ab}}}{{A`{cn}}}Ll}{{{f{BLb}}}{{A`{Lnn}}}}{{{f{Ab}}}{{A`{Lnn}}}}{{{f{Ab}}{Cf{Fj}}}Ab}{{{f{BLb}}{f{{l{F`}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bj{A@`}}}}Lf}Ab}{{{f{Ab}}{f{{Bj{A@`}}}}}Ab}{{{f{BLb}}{f{{Bj{In}}}}}{{A`{Abn}}}}{{{f{BLb}}{f{{Bj{In}}}}}Ab}{{{f{BLb}}{f{{l{F`}}}}}Ab}{{{f{Ab}}{f{{Bj{In}}}}}Ab}{{{f{Ab}}}{{A`{{f{{Kb{LbKd}}}}n}}}}{{{f{Ab}}FjAOf}{{Cl{Cj}}}}{{{f{Ab}}{Cf{{f{Bf}}}}d}{{A`{AAfn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{c}}}e{}{}}0{{{f{Ab}}}{{Dn{Ab}}}}{{{f{c}}}Ef{}}{{AbAb}{{A`{Abn}}}}{c{{A`{e}}}{}{}}00{{{Gl{{f{Bf}}{Gb{{Cl{Cj}}}}}}}{{A`{Abn}}}}{{{Gl{{f{B@d}}{Cl{Cj}}}}}{{A`{Abn}}}}{{{Gl{{f{Bf}}{Cl{Cj}}}}}{{A`{Abn}}}}3{{{Gl{{f{B@d}}{Gb{{Cl{Cj}}}}}}}{{A`{Abn}}}}44445{{{f{DbAb}}{Jj{c}}}dDh}6{{{f{c}}}AAd{}}000{{{f{Ab}}}{{A`{{f{{l{Nf}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{F`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{BLb}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BLb}}}{{A`{{f{{l{c}}}}n}}}Dh}{{{f{BLb}}Bh}{{Cf{M`}}}}{{{f{BLb}}Bh}{{A`{Lnn}}}}{ce{}{}}000{{Ab{f{Bf}}}Ab}{{{f{Ab}}c}Ab{B`Ll}}{{{f{Ab}}{f{{l{Al}}}}{f{Ab}}}{{A`{Abn}}}}``{{{f{c}}h}b{}}{{{f{E`}}}{{f{Ab}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{E`}}}E`}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{E`}}}Ab}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{cc{}}{{}Fj}{ce{}{}}{{{DIn{Ab}}}E`}{{{f{DbE`}}{f{Db{Cl{Cj}}}}}b}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}5{{{f{DbE`}}{f{Db{Cl{Cj}}}}e}c{}{{Dj{{f{E`}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BJf}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{C@l}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Fh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@l}}c}{{A`{Abn}}}Bb}{{{f{{l{Fh}}}}c}{{A`{Abn}}}Bb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{CKh}}}CKh}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}CKh}{Fj{{f{c}}}{}}{Fj{{f{Dbc}}}{}}{Fjb}{{{f{CKh}}{f{CKh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CKh}}{f{DbHb}}}{{A`{bHd}}}}{cc{}}{{{f{CKh}}{f{Dbc}}}bADf}{{}Fj}{ce{}{}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}3","D":"AEIdB@d","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11429],[5,"StructType",1998,11430],[5,"ChunkedArray",17,11431],[6,"PolarsError",3451,11432],[6,"Result",11433],[5,"Series",10915,11434],[17,"Output"],[10,"FnMut",11435],[5,"ListType",1998,11430],[5,"BinaryType",1998,11430],[5,"BooleanType",1998,11430],[10,"PolarsNumericType",1998,11430],[10,"Num",11436],[10,"ToPrimitive",11437],[5,"StringType",1998,11430],[1,"str"],[1,"u8"],[1,"slice"],[10,"NumOpsDispatchInner",11374,11438],[5,"ObjectType",1998,11430],[6,"GroupsProxy",3838,11439],[10,"PolarsObject",1551,11440],[5,"FixedSizeListType",1998,11430],[6,"Option",11441],[17,"Item"],[10,"Array",11442],[5,"Box",11443],[10,"Iterator",11444],[5,"AmortizedListIter",11445],[0,"mut"],[17,"IsNested"],[5,"FalseT",1998,11430],[10,"PolarsDataType",1998,11430],[10,"Fn",11435],[10,"Copy",11446],[6,"Cow",11447],[5,"AmortSeries",11350,11448],[5,"Float64Type",1998,11430],[5,"Float32Type",1998,11430],[5,"String",11449],[6,"DataType",1998,11450],[5,"View",11451],[5,"BinaryOffsetType",1998,11430],[5,"SortOptions",1679,11452],[5,"UInt32Type",1998,11430],[5,"SortMultipleOptions",1679,11452],[10,"PolarsIntegerType",1998,11430],[6,"CastOptions",1158,11453],[10,"NumOpsDispatchCheckedInner",11395,11454],[1,"usize"],[5,"Iter",11455],[1,"fn"],[5,"Map",11456],[5,"Vec",11457],[5,"MetadataProperties",1265,11458],[10,"DoubleEndedIterator",11459],[1,"i64"],[5,"OffsetsBuffer",11460],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11461],[5,"Error",11461],[17,"Array"],[10,"IntoIterator",11462],[5,"Bitmap",11463],[10,"Borrow",11464],[10,"PolarsAsRef",11465],[10,"AsRef",11466],[10,"Send",11446],[10,"Sync",11446],[10,"NoOption",11467],[10,"IntoParallelIterator",11468],[10,"TrustedLen",11469],[6,"AnyValue",1998,11470],[1,"u32"],[5,"MetadataFlags",1265,11458],[10,"PolarsObjectSafe",1551,11440],[5,"BinaryArray",11471],[1,"f32"],[1,"u64"],[5,"Metadata",1265,11458],[5,"RwLockWriteGuard",11472],[5,"Int32Type",1998,11430],[5,"DateType",1998,11430],[5,"Logical",1998,11473],[5,"Int64Type",1998,11430],[6,"TimeUnit",1998,11474],[5,"DatetimeType",1998,11430],[5,"Int128Type",1998,11430],[5,"DecimalType",1998,11430],[5,"DurationType",1998,11430],[10,"ExactSizeIterator",11475],[5,"TimeType",1998,11430],[10,"PolarsFloatType",1998,11430],[6,"IsSorted",10915,11476],[10,"PolarsIterator",1208,11477],[6,"ChunkedArrayLayout",17,11431],[10,"NumCast",11437],[5,"Scalar",4208,11478],[1,"f64"],[6,"MetadataReadGuard",1265,11479],[5,"IMMetadata",1265,11480],[5,"Arc",4208,11481],[10,"MetadataTrait",1265,11482],[5,"RwLockReadGuard",11472],[1,"i32"],[5,"Range",11483],[5,"Int8Type",1998,11430],[1,"i8"],[5,"UInt64Type",1998,11430],[5,"UInt16Type",1998,11430],[1,"u16"],[5,"Int16Type",1998,11430],[1,"i16"],[1,"i128"],[5,"UInt8Type",1998,11430],[5,"Field",1998,11484],[10,"ParallelIterator",11468],[10,"IndexedParallelIterator",11468],[6,"QuantileInterpolOptions",4208,11485],[5,"RollingOptionsFixedWindow",4208,11486],[10,"PolarsOpsNumericType",11487],[10,"Sized",11446],[5,"ChunkId",4208,11488],[17,"IsStruct"],[5,"RandomState",11489],[5,"BytesHash",11490],[5,"ViewRepr",11491],[1,"array"],[5,"Dim",11492],[5,"ArrayBase",11491],[5,"OwnedRepr",11493],[6,"Either",11494],[5,"TypeId",11495],[5,"DataFrame",3547,11496],[5,"NullableIdxSize",4208,11488],[10,"FnOnce",11435],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",852,11497],[5,"AnonymousListBuilder",880,11498],[5,"AnonymousOwnedListBuilder",880,11498],[5,"ListBooleanChunkedBuilder",880,11499],[5,"ListPrimitiveChunkedBuilder",880,11500],[10,"ListBuilderTrait",880,11501],[10,"ChunkedBuilder",880,11502],[5,"ListStringChunkedBuilder",880,11503],[5,"ListBinaryChunkedBuilder",880,11503],[5,"ListNullChunkedBuilder",880,11504],[5,"BinViewChunkedBuilder",880,11505],[10,"ViewType",11506],[5,"BooleanChunkedBuilder",880,11507],[5,"NullChunkedBuilder",880,11508],[5,"PrimitiveChunkedBuilder",880,11509],[10,"Clone",11510],[5,"NullChunked",11511],[10,"NewChunkedArray",880,11502],[10,"Hasher",11512],[10,"ChunkedCollectInferIterExt",1188,11513],[10,"ChunkedCollectIterExt",1188,11513],[10,"Canonical",1202,11514],[10,"ChunkedCollectParIterExt",1204,11515],[10,"FromParIterWithDtype",1204,11515],[5,"BooleanArray",11516],[5,"BoolIterNoNull",1208,11477],[5,"FixedSizeListArray",11517],[5,"FixedSizeListIterNoNull",1208,11477],[5,"SomeIterator",1208,11477],[5,"MetadataEnv",1265,11518],[10,"MetadataCollectable",1265,11519],[5,"Iter",11520],[5,"IterNames",11520],[5,"File",11521],[5,"Mutex",11522],[6,"MetadataMerge",1265,11458],[5,"RwLock",11472],[5,"ObjectArray",1551,11440],[6,"ArrowDataType",1998,11523],[10,"Any",11495],[10,"Debug",11461],[5,"BitmapIter",11524],[6,"ZipValidity",11525],[5,"ObjectChunkedBuilder",1628,11526],[10,"AnonymousObjectBuilder",1651,11527],[5,"ObjectRegistry",1651,11527],[17,"FuncRet"],[10,"ChunkApply",1679,11528],[10,"ChunkApplyKernel",1679,11528],[10,"ChunkSort",1679,11528],[10,"ChunkUnique",1679,11528],[10,"ChunkCast",1679,11528],[6,"FillNullStrategy",1679,11528],[10,"ChunkCompare",10915,11528],[10,"ChunkExplode",1679,11528],[10,"ChunkFillNullValue",1679,11528],[10,"ChunkFilter",1679,11528],[10,"ChunkFull",1679,11528],[10,"ChunkFullNull",1679,11528],[10,"ChunkAnyValue",1679,11528],[10,"IsFirstDistinct",1679,11528],[10,"IsLastDistinct",1679,11528],[10,"ChunkAgg",1679,11528],[10,"ChunkQuantile",1679,11528],[10,"ChunkExpandAtIndex",1679,11528],[10,"Reinterpret",1679,11528],[10,"ChunkReverse",1679,11528],[10,"ChunkRollApply",1679,11528],[10,"ChunkSet",1679,11528],[10,"ChunkShift",1679,11528],[10,"ChunkShiftFill",1679,11528],[10,"SlicedArray",1679,11529],[10,"ChunkVar",1679,11528],[10,"ChunkTake",1679,11528],[10,"ChunkTakeUnchecked",1679,11528],[10,"ChunkBytes",1679,11528],[10,"ChunkZip",1679,11528],[10,"BinaryFnMut",1886,11530],[10,"StaticArray",1998,11531],[10,"TernaryFnMut",1886,11530],[10,"Error",11532],[10,"UnaryFnMut",1886,11530],[5,"PrimitiveArray",11533],[6,"SearchSortedSide",1927,11534],[5,"NoNull",4208,11535],[5,"RowsEncoded",11536],[5,"NaiveDateTime",11537],[6,"Tz",11538],[5,"NaiveTime",11539],[5,"CategoricalChunked",1998,11540],[5,"CategoricalChunkedBuilder",1998,11541],[10,"ArrayFromIter",1998,11542],[10,"ArrayFromIterDtype",1998,11542],[10,"AsRefDataType",1998,11450],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11543],[10,"From",11466],[5,"BinaryViewArrayGeneric",11506],[6,"RevMapping",1998,11544],[10,"CategoricalMergeOperation",1998,11545],[10,"LogicalType",1998,11473],[6,"CategoricalOrdering",1998,11544],[5,"OwnedObject",1998,11470],[6,"UnknownKind",1998,11450],[5,"CompatLevel",1998,11450],[5,"CategoricalType",1998,11430],[6,"ArrowTimeUnit",1998],[10,"ArrayCollectIterExt",1998,11542],[5,"GlobalRevMapMerger",1998,11545],[10,"Into",11466],[10,"NumericNative",1998,11430],[5,"ArrowField",4208],[6,"IntegerType",11546],[6,"PrimitiveType",11547],[5,"TimeDelta",11548],[5,"NaiveDate",11549],[5,"LazyCompact",11550],[5,"SmartString",11551],[10,"GetAnyValue",1998,11470],[10,"IntoScalar",1998,11552],[5,"CatIter",1998,11540],[6,"Ordering",11553],[1,"u128"],[6,"PhysicalType",11546],[5,"StringCacheHolder",3430,11554],[5,"ErrString",3451,11432],[6,"PolarsWarning",3451,11555],[5,"TryReserveError",11556],[6,"ParquetError",11557],[5,"Error",11558],[5,"Utf8Error",11559],[6,"Error",11560],[5,"Error",11561],[10,"Display",11461],[5,"Schema",4208,11562],[10,"IntoSeries",10915,11563],[6,"NullStrategy",3547,11496],[6,"UniqueKeepStrategy",3547,11496],[5,"HashSet",11564],[5,"ArrowSchema",4208,11565],[5,"Row",4096,11566],[5,"GroupBy",3838,11567],[5,"DynamicGroupOptions",4208,11568],[5,"RangeInclusive",11483],[5,"RangeFull",11483],[5,"RangeToInclusive",11483],[5,"RangeTo",11483],[5,"RangeFrom",11483],[5,"RecordBatchIter",3547,11496],[5,"PhysRecordBatchIter",3547,11496],[5,"LazyFrame",4208,11569],[5,"RollingGroupOptions",4208,11568],[10,"RangeBounds",11483],[10,"IntoVec",4208,11535],[6,"IndexOrder",4208,11570],[5,"StructArray",4208,11571],[5,"RecordBatchT",11572],[5,"Duration",4208,11573],[5,"UnpivotArgsIR",3809,11574],[5,"GroupsIdx",3838,11439],[5,"UnitVec",11575],[6,"GroupByMethod",3838,11567],[5,"SlicedGroups",3838,11439],[5,"GroupsProxyParIter",3838,11439],[10,"UnindexedConsumer",11576],[6,"GroupsIndicator",3838,11439],[6,"IRAggExpr",11577],[10,"IntoGroupsProxy",3838,11578],[5,"Copied",11579],[5,"Zip",11580],[5,"GroupsProxyIter",3838,11439],[10,"IsFloat",11581],[10,"NativeType",11582],[10,"AggList",4080,11583],[10,"TakeExtremum",4080,11584],[10,"PhysicalAggExpr",4093,11585],[6,"AnyValueBuffer",4096,11586],[6,"AnyValueBufferTrusted",4096,11586],[5,"Node",11587],[6,"IR",11588],[5,"Arena",11587],[6,"AExpr",11577],[10,"JoinDispatch",4208,11589],[5,"JoinArgs",4208,11590],[10,"DfTake",4208,11591],[10,"DataFrameOps",4208,11592],[5,"CsvReader",4208,11593],[10,"PhysicalIoExpr",11594],[10,"MmapBytesReader",11595],[6,"Expr",4208,11596],[10,"LhsNumOps",11374,11438],[6,"Selector",4208,11597],[10,"NumOpsDispatch",11374,11438],[5,"LazyGroupBy",4208,11569],[5,"OptState",4208,11598],[10,"Allocator",11599],[5,"JoinBuilder",4208,11569],[10,"AnonymousScan",4208,11600],[5,"ScanArgsAnonymous",4208,11601],[10,"FunctionOutputField",4208,11602],[5,"SpecialEq",4208,11602],[6,"VisitRecursion",11603],[6,"FunctionExpr",4208,11604],[10,"ArgAgg",4208,11605],[5,"ArrayNameSpace",4208,11606],[5,"ListNameSpace",4208,11607],[10,"SeriesTrait",10915,11476],[5,"FieldsMapper",4208,11608],[5,"IpcStreamReader",4208,11609],[10,"Read",11610],[10,"SeriesUdf",4208,11602],[10,"AsBinary",4208,11611],[10,"StringMethods",9853,11612],[5,"BorrowedFd",11613],[10,"AsFd",11613],[10,"AsList",4208,11614],[10,"AsRawFd",11615],[6,"AggExpr",4208,11596],[10,"SeriesSealed",4208,11616],[10,"AsString",4208,11617],[20,"MaybeUninit",11618],[10,"StringNameSpaceImpl",4208,11619],[5,"OwnedBatchedCsvReader",4208,11620],[5,"CsvWriter",4208,11621],[5,"BatchedWriter",11621],[10,"Write",11610],[5,"IpcWriter",4208,11622],[5,"BatchedWriter",11622],[5,"ParquetReader",4208,11623],[5,"BatchedParquetReader",4208,11624],[5,"ParquetWriter",4208,11625],[5,"BatchedWriter",11626],[5,"BatchedCsvReader",4208,11620],[5,"BinaryNameSpace",9758,11627],[6,"Operator",4208,11596],[10,"RenameAliasFn",4208,11602],[5,"UserDefinedFunction",4208,11628],[10,"SeriesBinaryUdf",4208,11602],[5,"InProcessQuery",4208,11629],[5,"HashMap",11630],[5,"CategoricalNameSpace",4208,11631],[10,"RoundSeries",4208,11632],[10,"TemporalMethods",10800,11633],[10,"NumOpsDispatchChecked",11395,11454],[5,"LazyCsvReader",4208,11634],[5,"ScanArgsIpc",4208,11635],[5,"LazyJsonLineReader",4208,11636],[5,"ScanArgsParquet",4208,11637],[5,"RollingOptionsDynamicWindow",4208,11638],[5,"Bounds",4208,11639],[6,"ClosedWindow",4208,11640],[6,"Label",4208,11640],[6,"StartBy",4208,11640],[5,"Window",4208,11641],[5,"CsvReadOptions",4208,11642],[5,"CsvParseOptions",4208,11642],[6,"CsvEncoding",4208,11642],[6,"CommentPrefix",4208,11642],[6,"NullValues",4208,11642],[5,"CsvWriterOptions",4208,11643],[5,"SerializeOptions",4208,11643],[6,"JoinCoalesce",4208,11590],[6,"QuoteStyle",4208,11643],[6,"JoinType",4208,11590],[5,"IpcScanOptions",4208,11644],[6,"JoinValidation",4208,11590],[5,"IpcWriterOptions",4208,11622],[6,"IpcCompression",4208,11622],[5,"AsOfOptions",4208,11645],[5,"JsonWriterOptions",4208,11646],[6,"AsofStrategy",4208,11645],[6,"InterpolationMethod",4208,11647],[5,"ParquetOptions",4208,11648],[6,"ClosedInterval",4208,11649],[6,"ParallelStrategy",4208,11648],[6,"RankMethod",4208,11650],[5,"RankOptions",4208,11650],[5,"ParquetWriteOptions",4208,11651],[6,"ParquetCompression",4208,11651],[5,"GzipLevel",4208,11651],[5,"BrotliLevel",4208,11651],[5,"ZstdLevel",4208,11651],[6,"DslPlan",4208,11652],[5,"When",4208,11653],[5,"Then",4208,11653],[5,"ChainedWhen",4208,11653],[5,"ChainedThen",4208,11653],[6,"Excluded",4208,11596],[6,"BooleanFunction",4208,11654],[6,"CategoricalFunction",4208,11655],[6,"TemporalFunction",4208,11656],[6,"PowFunction",4208,11657],[6,"StringFunction",4208,11658],[6,"StructFunction",4208,11659],[5,"DatetimeArgs",4208,11660],[5,"DurationArgs",4208,11660],[5,"RollingCovOptions",4208,11661],[5,"StrptimeOptions",4208,11661],[5,"JoinOptions",4208,11661],[6,"WindowType",4208,11661],[6,"WindowMapping",4208,11661],[6,"NestedType",4208,11661],[5,"UnpivotArgsDSL",4208,11661],[5,"StatisticsOptions",4208,11662],[6,"LiteralValue",4208,11663],[5,"FileMetaData",4208,11664],[5,"AnonymousScanOptions",4208,11665],[5,"UnionArgs",4208,11665],[5,"RollingVarParams",4208,11666],[5,"RollingQuantileParams",4208,11666],[6,"NonExistent",4208,11667],[10,"LazyFileListReader",4208,11668],[5,"CloudOptions",9990,11669],[10,"Ord",11553],[6,"ColumnOrder",11670],[10,"BinaryNameSpaceImpl",4208,11671],[5,"JsonLineReader",4208,11672],[5,"PathBuf",11673],[10,"CrossJoin",4208,11674],[10,"ExprEvalExtension",4208,11675],[10,"DateMethods",9853,11676],[10,"DatetimeMethods",9853,11677],[10,"DurationMethods",9853,11678],[5,"IpcStreamWriterOption",4208,11609],[10,"BinaryUdfOutputField",4208,11602],[5,"CStr",11679],[10,"Default",11680],[5,"RowGroupMetaData",11681],[5,"ParquetStatistics",4208],[6,"NullBehavior",11401,11682],[5,"Weak",11481],[5,"DateLikeNameSpace",10365,11683],[1,"char"],[10,"FromIterator",11462],[10,"SchemaNamesAndDtypes",4208,11562],[10,"SeriesMethods",4208,11684],[10,"Scalar",11685],[10,"PartialEq",11553],[10,"ListNameSpaceExtension",4208,11686],[10,"Command",11687],[5,"Path",11673],[5,"StructNameSpace",4208,11688],[10,"SerReader",4208,11689],[10,"SerWriter",4208,11689],[5,"IpcReader",4208,11644],[5,"IpcStreamWriter",4208,11609],[5,"JsonWriter",4208,11646],[5,"JsonReader",4208,11646],[10,"UdfSchema",4208,11690],[6,"RangeFunction",11691],[6,"ListFunction",11692],[6,"ArrayFunction",11693],[6,"BinaryFunction",11694],[5,"MutableStatistics",11695],[5,"OsStr",11696],[10,"ToOwned",11447],[5,"CString",11697],[1,"never"],[5,"OsString",11696],[5,"MutableStructArray",11698],[5,"GrowableStruct",11699],[10,"FromData",10359,11700],[5,"Buffer",11701],[10,"FromDataUtf8",10359,11700],[10,"FromDataBinary",10359,11700],[5,"ListArray",11702],[6,"Ambiguous",4208,11667],[10,"NamedFromOwned",4208,11703],[10,"DataFrameJoinOps",4208,11704],[5,"FunctionOptions",11665],[10,"PartialOrd",11553],[6,"Context",11652],[10,"IndexOfSchema",4208,11562],[17,"DataType"],[5,"BoundsIter",4208,11641],[6,"ReaderBytes",11595],[10,"PolarsTemporalGroupby",4208,11568],[10,"Hash",11512],[10,"SeriesJoin",4208,11705],[10,"TimeMethods",9853,11706],[5,"NonZero",11707],[10,"IntoListNameSpace",4208,11686],[5,"FileMetaData",11708],[5,"StructValueIter",11709],[10,"AsofJoinBy",4208,11710],[10,"ListNameSpaceImpl",4208,11711],[5,"ExprNameNameSpace",4208,11712],[5,"KeyValue",11708],[10,"IntoLazy",4208,11569],[10,"Literal",4208,11663],[5,"Null",4208,11663],[10,"CloneToUninit",11510],[5,"SuperTypeOptions",11713],[5,"RowIndex",11714],[10,"ChunkAggSeries",4208,11715],[10,"QuantileAggSeries",4208,11716],[10,"IndexToUsize",4208,11717],[10,"NamedFrom",4208,11703],[6,"RowGroupFetcher",11624],[5,"SplitNChars",4208,11718],[5,"AnonymousScanArgs",4208,11600],[5,"Pin",11719],[5,"Request",11532],[10,"SeriesRank",4208,11650],[5,"BorrowedCursor",11720],[10,"VarInt",11721],[5,"IoSliceMut",11610],[10,"SeriesOpsTime",9853,11722],[10,"PolarsRound",4208,11723],[10,"ChunkedSet",4208,11487],[5,"SchemaDescriptor",11724],[6,"SeekFrom",11610],[10,"VarAggSeries",4208,11725],[5,"StringNameSpace",11726],[10,"TakeChunked",4208,11591],[5,"IRPlan",11588],[10,"ToDummies",4208,11727],[10,"PolarsTruncate",4208,11728],[5,"AllocError",11599],[5,"SchemaInferenceResult",10767,11729],[10,"PolarsUpsample",4208,11730],[10,"VecHash",4208,11731],[6,"JsonFormat",4208,11646],[5,"BTreeMap",11732],[10,"WriteDataFrameToFile",11689],[5,"IoSlice",11610],[10,"ArrayNameSpace",9739,11733],[10,"AsArray",9739,11734],[6,"Buffer",9775,11735],[10,"AsString",9919,11612],[6,"Pattern",9919,11736],[5,"DatetimeInfer",9959,11737],[10,"StrpTimeParser",9959,11737],[17,"Error"],[10,"TryFromWithUnit",9959,11737],[6,"CloudType",9990,11669],[5,"AnonymousBuilder",10420,11738],[6,"RollingFunction",10662,11739],[6,"RollingFunctionBy",10692,11740],[5,"MutableNullArray",10736,11741],[5,"MutableBitmap",11742],[10,"AsSeries",10800,11633],[5,"Utf8Array",11743],[5,"SeriesIter",10915,11744],[5,"Rc",11745],[8,"FillNullLimit",1679],[10,"InitHashMaps",1998],[10,"InitHashMaps2",1998],[5,"TrueT",1998],[8,"PolarsResult",3451],[15,"IO",9670],[15,"Context",9670],[15,"Count",9664],[15,"Slice",9665],[8,"ChunkJoinOptIds",4208],[8,"DynArgs",4208],[10,"ListFromIter",4208],[15,"Quantile",9543],[15,"Min",9543],[15,"Max",9543],[15,"IsBetween",10615],[15,"Any",10615],[15,"All",10615],[15,"GroupBy",9553],[15,"Union",9553],[15,"Sort",9553],[15,"Cache",9553],[15,"ExtContext",9553],[15,"DataFrameScan",9553],[15,"IR",9553],[15,"Select",9553],[15,"HStack",9553],[15,"Scan",9553],[15,"MapFunction",9553],[15,"Filter",9553],[15,"Distinct",9553],[15,"Slice",9553],[15,"Sink",9553],[15,"Join",9553],[15,"HConcat",9553],[15,"SortBy",9607],[15,"Filter",9607],[15,"Cast",9607],[15,"Sort",9607],[15,"Gather",9607],[15,"RenameAlias",9607],[15,"Ternary",9607],[15,"Function",9607],[15,"Window",9607],[15,"AnonymousFunction",9607],[15,"Slice",9607],[15,"BinaryExpr",9607],[15,"Round",10618],[15,"RoundSF",10618],[15,"Clip",10618],[15,"BackwardFill",10618],[15,"ForwardFill",10618],[15,"Random",10618],[15,"GatherEvery",10618],[15,"ValueCounts",10618],[15,"Rank",10618],[15,"ReplaceStrict",10618],[15,"CumCount",10618],[15,"CumSum",10618],[15,"CumProd",10618],[15,"CumMin",10618],[15,"CumMax",10618],[15,"Range",9667],[15,"ConcatHorizontal",10640],[15,"ConcatVertical",10640],[15,"ExtractGroups",10640],[15,"SplitExact",10640],[15,"Contains",10640],[15,"Find",10640],[15,"Replace",10640],[15,"DatetimeFunction",10654],[5,"Utf8Field",9775],[5,"CategoricalField",9775],[5,"DatetimeField",9775],[15,"Datetime",9849],[10,"Utf8FromIter",10911],[10,"BinaryFromIter",10911],[6,"BitRepr",10915]],"r":[[1,11746],[2,11746],[3,11746],[4,11746],[6,11554],[7,11746],[8,11746],[9,11746],[13,11746],[14,11746],[16,11554],[17,11431],[18,11431],[19,11431],[24,11747],[115,11431],[138,11431],[139,11431],[167,11431],[169,11431],[222,11431],[274,11431],[423,11431],[472,11431],[577,11431],[580,11431],[721,11431],[852,11497],[880,11498],[881,11498],[882,11505],[883,11505],[884,11507],[885,11502],[886,11503],[887,11499],[888,11501],[889,11504],[890,11500],[891,11503],[892,11502],[893,11508],[894,11509],[895,11505],[1032,11502],[1048,11501],[1076,11502],[1141,11498],[1142,11498],[1143,11503],[1144,11499],[1145,11501],[1146,11504],[1147,11500],[1148,11503],[1156,11501],[1158,11453],[1188,11513],[1189,11513],[1202,11514],[1204,11515],[1205,11515],[1208,11477],[1209,11477],[1210,11477],[1211,11477],[1247,11477],[1263,11748],[1264,11748],[1270,11480],[1275,11458],[1276,11519],[1277,11518],[1278,11458],[1279,11458],[1280,11458],[1281,11479],[1282,11482],[1551,11440],[1552,11440],[1553,11440],[1554,11440],[1566,11440],[1596,11440],[1597,11749],[1628,11526],[1651,11527],[1652,11527],[1653,11527],[1654,11527],[1666,11527],[1667,11527],[1668,11527],[1671,11527],[1673,11527],[1680,11528],[1681,11528],[1682,11528],[1683,11528],[1684,11528],[1685,11528],[1686,11528],[1687,11528],[1688,11528],[1689,11528],[1690,11528],[1691,11528],[1692,11528],[1693,11528],[1694,11528],[1695,11528],[1696,11528],[1697,11528],[1698,11528],[1699,11528],[1700,11528],[1701,11528],[1702,11528],[1703,11528],[1704,11528],[1705,11528],[1706,11528],[1709,11528],[1710,11528],[1719,11528],[1720,11529],[1722,11452],[1723,11452],[1736,11528],[1783,11528],[1786,11528],[1795,11528],[1798,11528],[1841,11528],[1847,11528],[1884,11528],[1886,11530],[1890,11530],[1891,11530],[1892,11530],[1893,11530],[1894,11530],[1895,11530],[1896,11530],[1897,11530],[1898,11530],[1899,11530],[1900,11530],[1901,11530],[1902,11530],[1903,11530],[1904,11530],[1905,11530],[1906,11530],[1907,11530],[1908,11530],[1909,11530],[1910,11530],[1911,11530],[1912,11530],[1913,11530],[1914,11530],[1915,11530],[1916,11530],[1917,11530],[1918,11530],[1919,11530],[1920,11530],[1921,11530],[1922,11750],[1923,11750],[1924,11751],[1925,11751],[1926,11751],[1930,11534],[1932,11534],[1952,11534],[1958,11529],[1959,11752],[1960,11752],[1961,11752],[1962,11752],[1965,11753],[1966,11754],[1967,11754],[1968,11754],[1969,11754],[1970,11754],[1971,11754],[1972,11754],[1973,11754],[1974,11529],[1975,11452],[1976,11452],[1987,11755],[1988,11756],[1989,11756],[1990,11756],[1991,11755],[1992,11755],[1993,11757],[1994,11755],[1995,11756],[1996,11756],[1997,11756],[1999,11470],[2003,11430],[2004,11542],[2005,11542],[2006,11542],[2007,11523],[2009,11450],[2013,11430],[2015,11430],[2016,11430],[2018,11430],[2023,11430],[2024,11430],[2025,11540],[2028,11540],[2029,11541],[2030,11545],[2031,11544],[2032,11430],[2033,11450],[2034,11450],[2035,11450],[2036,11450],[2041,11758],[2042,11430],[2045,11759],[2046,11430],[2051,11760],[2052,11430],[2057,11761],[2058,11430],[2062,11430],[2063,11484],[2064,11484],[2067,11430],[2073,11430],[2074,11430],[2078,11430],[2079,11430],[2080,11470],[2082,11545],[2086,11762],[2087,11717],[2088,11762],[2089,11762],[2090,11763],[2091,11762],[2093,11430],[2094,11430],[2098,11430],[2099,11430],[2103,11430],[2104,11430],[2108,11430],[2109,11430],[2113,11430],[2114,11430],[2116,11552],[2127,11430],[2128,11430],[2130,11473],[2131,11473],[2143,11430],[2146,11430],[2148,11430],[2149,11470],[2153,11763],[2154,11763],[2155,11762],[2156,11763],[2157,11763],[2158,11763],[2159,11430],[2160,11430],[2161,11430],[2162,11430],[2164,11544],[2167,11531],[2171,11430],[2173,11430],[2178,11430],[2183,11764],[2184,11430],[2185,11474],[2186,11450],[2189,11430],[2193,11430],[2194,11430],[2198,11430],[2199,11430],[2203,11430],[2204,11430],[2208,11430],[2209,11430],[2213,11450],[2379,11545],[2392,11473],[2536,11450],[3048,11545],[3049,11545],[3053,11450],[3407,11540],[3408,11540],[3409,11541],[3410,11545],[3411,11544],[3413,11545],[3417,11544],[3418,11545],[3420,11545],[3421,11545],[3422,11540],[3423,11540],[3424,11544],[3429,11544],[3430,11554],[3436,11554],[3439,11554],[3447,11554],[3457,11432],[3464,11432],[3465,11432],[3466,11555],[3482,11432],[3495,11432],[3511,11555],[3518,11432],[3520,11432],[3521,11432],[3522,11432],[3523,11432],[3524,11555],[3525,11432],[3544,11765],[3545,11765],[3546,11765],[3548,11496],[3553,11496],[3554,11496],[3556,11496],[3557,11496],[3632,11496],[3662,11496],[3726,11496],[3809,11574],[3838,11439],[3841,11567],[3842,11567],[3844,11439],[3845,11439],[3846,11439],[3847,11439],[3848,11439],[3849,11439],[3852,11439],[3854,11578],[3866,11439],[3875,11567],[3947,11567],[3957,11567],[4080,11583],[4081,11584],[4082,11584],[4083,11584],[4084,11584],[4085,11584],[4086,11584],[4087,11584],[4088,11584],[4089,11584],[4093,11585],[4098,11586],[4099,11586],[4119,11566],[4153,11566],[4174,11566],[4188,11566],[4189,11566],[4190,11566],[4206,11766],[4207,11767],[4211,11596],[4218,11598],[4220,11667],[4223,11600],[4224,11600],[4225,11665],[4231,11470],[4232,11481],[4233,11605],[4236,11497],[4241,11430],[4242,11542],[4244,11542],[4245,11542],[4246,11606],[4247,11442],[4248,11523],[4250,11565],[4252,11611],[4253,11614],[4255,11645],[4256,11450],[4257,11617],[4259,11645],[4260,11710],[4261,11645],[4264,11768],[4270,11620],[4271,11624],[4276,11430],[4277,11505],[4280,11671],[4282,11430],[4283,11430],[4285,11430],[4286,11602],[4293,11430],[4294,11507],[4295,11654],[4296,11430],[4297,11439],[4300,11639],[4301,11641],[4303,11651],[4309,11540],[4313,11540],[4314,11541],[4315,11655],[4316,11545],[4317,11631],[4318,11544],[4319,11430],[4323,11653],[4324,11653],[4325,11528],[4326,11715],[4327,11528],[4328,11528],[4329,11528],[4330,11528],[4331,11528],[4332,11528],[4333,11528],[4334,11528],[4335,11528],[4336,11528],[4337,11528],[4338,11528],[4339,11488],[4340,11590],[4341,11528],[4342,11528],[4343,11528],[4344,11528],[4345,11528],[4346,11528],[4347,11528],[4348,11528],[4349,11528],[4350,11528],[4351,11528],[4352,11528],[4353,11431],[4354,11502],[4355,11513],[4356,11513],[4357,11487],[4359,11649],[4360,11640],[4368,11642],[4369,11450],[4381,11674],[4382,11642],[4383,11642],[4384,11642],[4385,11593],[4386,11621],[4387,11643],[4394,11450],[4395,11450],[4396,11496],[4397,11704],[4398,11592],[4402,11450],[4410,11758],[4411,11676],[4413,11430],[4417,11660],[4418,11759],[4420,11677],[4421,11430],[4428,11760],[4429,11430],[4431,11591],[4438,11652],[4442,11573],[4448,11660],[4449,11761],[4450,11678],[4451,11430],[4452,11666],[4453,11568],[4463,11596],[4467,11596],[4468,11675],[4469,11712],[4478,11768],[4479,11768],[4480,11430],[4481,11484],[4485,11484],[4486,11608],[4487,11712],[4488,11664],[4489,11769],[4491,11528],[4492,11528],[4502,11430],[4510,11430],[4511,11430],[4516,11430],[4517,11430],[4525,11700],[4526,11700],[4527,11700],[4531,11604],[4532,11602],[4536,11470],[4538,11602],[4540,11545],[4541,11567],[4543,11567],[4545,11439],[4546,11439],[4547,11439],[4548,11439],[4549,11439],[4550,11439],[4555,11651],[4565,11762],[4566,11768],[4572,11717],[4573,11762],[4574,11439],[4575,11488],[4576,11762],[4579,11629],[4581,11562],[4582,11570],[4583,11717],[4584,11763],[4585,11762],[4587,11590],[4590,11430],[4591,11430],[4596,11430],[4597,11430],[4602,11430],[4603,11430],[4608,11430],[4609,11430],[4614,11430],[4615,11430],[4619,11647],[4621,11578],[4622,11569],[4623,11686],[4624,11552],[4625,11563],[4626,11535],[4628,11622],[4629,11644],[4630,11644],[4631,11609],[4632,11609],[4633,11609],[4634,11622],[4635,11622],[4638,11528],[4642,11528],[4656,11590],[4657,11569],[4658,11590],[4659,11589],[4660,11661],[4662,11590],[4663,11590],[4666,11646],[4667,11672],[4669,11646],[4670,11646],[4671,11646],[4675,11640],[4677,11770],[4679,11770],[4680,11770],[4686,11634],[4687,11668],[4688,11569],[4689,11569],[4690,11636],[4697,11590],[4702,11438],[4709,11503],[4710,11499],[4711,11501],[4712,11430],[4714,11771],[4715,11607],[4716,11686],[4717,11711],[4718,11500],[4719,11503],[4720,11430],[4721,11663],[4723,11663],[4725,11473],[4728,11473],[4777,11663],[4782,11703],[4783,11703],[4795,11661],[4797,11502],[4799,11535],[4800,11667],[4812,11663],[4820,11642],[4821,11488],[4822,11488],[4823,11438],[4824,11454],[4825,11430],[4828,11430],[4830,11430],[4835,11596],[4836,11598],[4844,11620],[4845,11470],[4847,11772],[4850,11648],[4851,11651],[4852,11648],[4853,11623],[4855,11651],[4856,11625],[4859,11763],[4860,11763],[4861,11762],[4862,11763],[4863,11763],[4864,11763],[4866,11430],[4867,11432],[4868,11430],[4869,11430],[4870,11477],[4871,11430],[4872,11440],[4873,11432],[4874,11723],[4875,11568],[4876,11728],[4878,11730],[4880,11657],[4883,11509],[4886,11716],[4887,11485],[4889,11643],[4898,11650],[4899,11650],[4900,11528],[4902,11602],[4910,11544],[4920,11661],[4923,11568],[4924,11638],[4925,11486],[4926,11666],[4927,11773],[4928,11666],[4933,11632],[4934,11774],[4942,11478],[4945,11601],[4946,11635],[4947,11637],[4948,11562],[4951,11562],[4952,11562],[4953,11534],[4957,11597],[4959,11689],[4960,11689],[4961,11643],[4962,11434],[4964,11602],[4965,11705],[4966,11684],[4967,11722],[4968,11650],[4969,11616],[4970,11476],[4971,11602],[4984,11529],[4985,11439],[4993,11452],[4994,11452],[4995,11602],[4999,11718],[5001,11640],[5003,11531],[5004,11662],[5012,11554],[5014,11430],[5015,11505],[5017,11658],[5018,11612],[5019,11619],[5021,11430],[5028,11661],[5032,11571],[5033,11747],[5036,11659],[5037,11688],[5039,11430],[5049,11591],[5051,11656],[5052,11633],[5054,11653],[5062,11764],[5063,11706],[5065,11430],[5066,11474],[5067,11450],[5071,11727],[5085,11430],[5092,11430],[5093,11430],[5098,11430],[5099,11430],[5104,11430],[5105,11430],[5110,11430],[5111,11430],[5112,11775],[5113,11690],[5117,11665],[5119,11496],[5122,11450],[5123,11661],[5124,11574],[5127,11628],[5136,11725],[5137,11731],[5141,11653],[5143,11641],[5146,11661],[5147,11661],[5157,11651],[5252,11776],[5256,11776],[5265,11777],[5276,11567],[5278,11778],[5281,11779],[5292,11779],[5303,11780],[5309,11781],[5312,11782],[5325,11783],[5330,11783],[5333,11528],[5343,11784],[5368,11785],[5372,11786],[5376,11787],[5384,11781],[5386,11653],[5651,11788],[5659,11545],[5664,11786],[5675,11781],[5690,11789],[5693,11790],[5695,11790],[5697,11790],[6024,11791],[6032,11779],[6036,11792],[6037,11778],[6039,11793],[6051,11778],[6060,11775],[6064,11793],[6066,11794],[6069,11793],[6070,11793],[6071,11794],[6072,11794],[6082,11771],[6083,11795],[6089,11796],[6090,11450],[6096,11797],[6098,11779],[6099,11797],[6101,11797],[6103,11797],[6105,11779],[6106,11797],[6113,11746],[6115,11782],[6116,11784],[6117,11660],[6119,11782],[6120,11782],[6121,11756],[6122,11756],[6123,11756],[6190,11771],[6191,11589],[6454,11695],[6456,11746],[6458,11798],[6604,11799],[6605,11781],[6611,11778],[6612,11778],[6614,11660],[6622,11573],[6623,11573],[6624,11562],[6892,11772],[6893,11772],[6894,11772],[6900,11567],[6922,11528],[6960,11781],[6964,11771],[6968,11528],[6973,11800],[7077,11567],[7081,11779],[7085,11794],[7311,11528],[7321,11781],[7323,11528],[7352,11772],[7368,11768],[7380,11640],[7381,11640],[7463,11801],[7474,11802],[7475,11803],[7476,11803],[7478,11804],[7490,11778],[7496,11717],[7497,11729],[7634,11782],[7635,11782],[7637,11805],[7638,11647],[7640,11805],[7641,11806],[7794,11649],[7796,11772],[7797,11807],[7806,11808],[7811,11809],[7814,11810],[7822,11786],[7825,11786],[7831,11795],[7867,11781],[7882,11781],[7893,11663],[7940,11545],[7941,11545],[7946,11780],[7957,11781],[7960,11781],[7968,11811],[7969,11768],[7970,11786],[7980,11768],[7981,11786],[7987,11786],[8000,11450],[8011,11786],[8032,11784],[8070,11784],[8081,11812],[8082,11813],[8131,11814],[8153,11786],[8158,11781],[8159,11771],[8192,11768],[8213,11432],[8214,11432],[8215,11432],[8216,11432],[8221,11704],[8230,11786],[8261,11779],[8273,11815],[8274,11816],[8276,11817],[8283,11817],[8284,11817],[8286,11803],[8289,11772],[8379,11788],[8382,11528],[8395,11789],[8450,11528],[8467,11718],[8469,11718],[8487,11801],[8497,11784],[8498,11818],[8500,11818],[8502,11818],[8504,11818],[8506,11818],[8521,11786],[8545,11653],[8549,11782],[9130,11781],[9155,11771],[9319,11653],[9533,11819],[9541,11528],[9690,11583],[9691,11584],[9692,11584],[9693,11584],[9694,11584],[9695,11584],[9696,11584],[9697,11584],[9698,11584],[9699,11584],[9703,11530],[9707,11530],[9708,11530],[9709,11530],[9710,11530],[9711,11530],[9712,11530],[9713,11530],[9714,11530],[9715,11530],[9716,11530],[9717,11530],[9718,11530],[9719,11530],[9720,11530],[9721,11530],[9722,11530],[9723,11530],[9724,11530],[9725,11530],[9726,11530],[9727,11530],[9728,11530],[9729,11530],[9730,11530],[9731,11530],[9732,11530],[9733,11530],[9734,11530],[9735,11530],[9736,11530],[9737,11530],[9738,11530],[9739,11733],[9740,11734],[9758,11627],[9776,11735],[9778,11735],[9781,11735],[9795,11735],[9827,11735],[9852,11631],[9853,11676],[9854,11677],[9855,11678],[9856,11638],[9857,11722],[9858,11612],[9859,11706],[9912,11820],[9919,11612],[9925,11736],[9926,11612],[9950,11612],[9959,11737],[9961,11737],[9962,11737],[9973,11737],[9992,11669],[9993,11669],[10029,11821],[10042,11669],[10043,11669],[10049,11807],[10050,11807],[10051,11822],[10052,11822],[10053,11822],[10054,11822],[10055,11822],[10057,11470],[10061,11430],[10062,11542],[10063,11542],[10064,11542],[10065,11523],[10067,11450],[10071,11430],[10073,11430],[10074,11430],[10076,11430],[10081,11430],[10082,11430],[10083,11540],[10086,11540],[10087,11541],[10088,11545],[10089,11544],[10090,11430],[10091,11450],[10092,11450],[10093,11450],[10094,11450],[10099,11758],[10100,11430],[10103,11759],[10104,11430],[10109,11760],[10110,11430],[10115,11761],[10116,11430],[10120,11430],[10121,11484],[10122,11484],[10125,11430],[10131,11430],[10132,11430],[10136,11430],[10137,11430],[10138,11470],[10140,11545],[10144,11762],[10145,11717],[10146,11762],[10147,11762],[10148,11763],[10149,11762],[10151,11430],[10152,11430],[10156,11430],[10157,11430],[10161,11430],[10162,11430],[10166,11430],[10167,11430],[10171,11430],[10172,11430],[10174,11552],[10185,11430],[10186,11430],[10188,11473],[10189,11473],[10201,11430],[10204,11430],[10206,11430],[10207,11470],[10211,11763],[10212,11763],[10213,11762],[10214,11763],[10215,11763],[10216,11763],[10217,11430],[10218,11430],[10219,11430],[10220,11430],[10222,11544],[10225,11531],[10229,11430],[10231,11430],[10236,11430],[10241,11764],[10242,11430],[10243,11474],[10244,11450],[10247,11430],[10251,11430],[10252,11430],[10256,11430],[10257,11430],[10261,11430],[10262,11430],[10266,11430],[10267,11430],[10271,11450],[10284,11545],[10287,11473],[10292,11450],[10309,11545],[10310,11545],[10311,11450],[10329,11540],[10330,11540],[10331,11541],[10332,11545],[10333,11544],[10335,11545],[10339,11544],[10340,11545],[10342,11545],[10343,11545],[10344,11540],[10345,11540],[10346,11544],[10351,11544],[10352,11554],[10353,11554],[10354,11554],[10355,11554],[10356,11803],[10357,11803],[10358,11803],[10359,11700],[10360,11700],[10361,11700],[10365,11683],[10417,11585],[10420,11738],[10440,11750],[10441,11750],[10456,11654],[10459,11655],[10498,11604],[10541,11657],[10573,11658],[10581,11659],[10586,11656],[10611,11604],[10612,11604],[10613,11604],[10614,11604],[10656,11655],[10660,11657],[10666,11739],[10696,11740],[10722,11751],[10723,11751],[10724,11751],[10725,11647],[10728,11647],[10729,11806],[10730,11823],[10731,11824],[10732,11824],[10733,11824],[10734,11824],[10735,11824],[10736,11741],[10767,11729],[10778,11729],[10783,11729],[10784,11729],[10797,11534],[10798,11534],[10799,11534],[10800,11633],[10801,11633],[10822,11529],[10823,11752],[10824,11752],[10825,11752],[10826,11752],[10829,11753],[10830,11754],[10831,11754],[10832,11754],[10833,11754],[10834,11754],[10835,11754],[10836,11754],[10837,11754],[10838,11529],[10839,11452],[10840,11452],[10851,11617],[10852,11718],[10853,11619],[10872,11801],[10880,11718],[10882,11718],[10885,11801],[10891,11818],[10893,11818],[10895,11818],[10897,11818],[10899,11818],[10905,11628],[10911,11825],[10912,11825],[10916,11476],[10917,11528],[10919,11563],[10920,11476],[10924,11434],[10925,11744],[10926,11744],[10927,11476],[10937,11434],[10943,11434],[11133,11434],[11255,11434],[11350,11448],[11351,11448],[11374,11438],[11375,11438],[11376,11438],[11378,11438],[11382,11438],[11395,11454],[11396,11454],[11403,11682]],"b":[[28,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[29,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[30,"impl-Add-for-ChunkedArray%3CT%3E"],[31,"impl-Add-for-%26ChunkedArray%3CT%3E"],[32,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[33,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[34,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[35,"impl-Add-for-ChunkedArray%3CStringType%3E"],[36,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[38,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[39,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[41,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[42,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[43,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[44,"impl-AggList-for-ChunkedArray%3CListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[46,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[47,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[48,"impl-AggList-for-ChunkedArray%3CT%3E"],[51,"impl-ChunkedArray%3CFixedSizeListType%3E"],[52,"impl-ChunkedArray%3CListType%3E"],[53,"impl-ChunkedArray%3CFixedSizeListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[58,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[59,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[60,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[61,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[62,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[63,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[65,"impl-ChunkedArray%3CListType%3E"],[66,"impl-ChunkedArray%3CFixedSizeListType%3E"],[68,"impl-ChunkedArray%3CFloat64Type%3E"],[69,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[79,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[80,"impl-ChunkedArray%3CBinaryType%3E"],[81,"impl-ChunkedArray%3CStringType%3E"],[82,"impl-ChunkedArray%3CT%3E"],[84,"impl-ChunkedArray%3CFixedSizeListType%3E"],[85,"impl-ChunkedArray%3CListType%3E"],[86,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[87,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[88,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[89,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[90,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[91,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[92,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[93,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[94,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[95,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[96,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[97,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[99,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[100,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[101,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[102,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[103,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[104,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[105,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[106,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[107,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[108,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[109,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[110,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[117,"impl-ChunkedArray%3CStringType%3E"],[118,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[122,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[125,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[126,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[128,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[131,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[132,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[133,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[142,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[153,"impl-ChunkedArray%3CStructType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[159,"impl-Container-for-ChunkedArray%3CT%3E"],[160,"impl-ChunkedArray%3CT%3E"],[179,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[180,"impl-Div-for-ChunkedArray%3CT%3E"],[181,"impl-Div-for-%26ChunkedArray%3CT%3E"],[182,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[192,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[193,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[195,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[198,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[199,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[200,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[201,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[202,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[203,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[204,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[205,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[206,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[207,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[208,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[209,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[210,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[214,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[215,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[216,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[217,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[218,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[220,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[223,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[224,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[225,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[226,"impl-Debug-for-ChunkedArray%3CT%3E"],[227,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[228,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[229,"impl-Debug-for-ChunkedArray%3CListType%3E"],[231,"impl-ChunkedArray%3CListType%3E"],[232,"impl-ChunkedArray%3CFixedSizeListType%3E"],[240,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[241,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[242,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[243,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[244,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[245,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[246,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[247,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[248,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[249,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[250,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[251,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[252,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[253,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[254,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[255,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[256,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[257,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[258,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[259,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[260,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[261,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[262,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[263,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[264,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[265,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[266,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[267,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[268,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[269,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[270,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[271,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[272,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[273,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[275,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[276,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[277,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[278,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[279,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[281,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[282,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[285,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[287,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[288,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[289,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[290,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[291,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[292,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[293,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[294,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[295,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[296,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[299,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[300,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[301,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[302,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[303,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[304,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[305,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[306,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[307,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[308,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[309,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[310,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[311,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[317,"impl-ChunkedArray%3CFixedSizeListType%3E"],[318,"impl-ChunkedArray%3CListType%3E"],[320,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[321,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[338,"impl-ChunkedArray%3CFixedSizeListType%3E"],[339,"impl-ChunkedArray%3CListType%3E"],[343,"impl-ChunkedArray%3CFixedSizeListType%3E"],[344,"impl-ChunkedArray%3CListType%3E"],[352,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[353,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[354,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[355,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[356,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[357,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[358,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[359,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[360,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[365,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[366,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[367,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[368,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[369,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[370,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[371,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[372,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[373,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[374,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[375,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[376,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[377,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[378,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[379,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[380,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[381,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[382,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[388,"impl-ChunkedArray%3CListType%3E"],[389,"impl-ChunkedArray%3CFixedSizeListType%3E"],[398,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[399,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[400,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[401,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[402,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[407,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[408,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ChunkedArray%3CT%3E"],[434,"impl-Container-for-ChunkedArray%3CT%3E"],[439,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[440,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[441,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[442,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[443,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[444,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[445,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[446,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[447,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[448,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[449,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[450,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[451,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[452,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[453,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[454,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[455,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[456,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[457,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[458,"impl-ChunkedArray%3CBooleanType%3E"],[459,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[460,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[462,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[463,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[464,"impl-ChunkedArray%3CBooleanType%3E"],[465,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[466,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[467,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[468,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[469,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[470,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[478,"impl-ChunkedArray%3CBooleanType%3E"],[479,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[481,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[482,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[483,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[485,"impl-ChunkedArray%3CBooleanType%3E"],[486,"impl-ChunkedArray%3CT%3E"],[487,"impl-Mul-for-ChunkedArray%3CT%3E"],[488,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[489,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[490,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[493,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[494,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[495,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[497,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[498,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[500,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[501,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[502,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[503,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[505,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[506,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[507,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[508,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[509,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[511,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[512,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[513,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[514,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[515,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[516,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[517,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[520,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[523,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[524,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[527,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[528,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[529,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[530,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[531,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[532,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[533,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[534,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[535,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[536,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[537,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[540,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[541,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[542,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[543,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[544,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[545,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[546,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[547,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[548,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[554,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[555,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[556,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[557,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[558,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[559,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[560,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[561,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[562,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[563,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[564,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[565,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[566,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[567,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[568,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[569,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[570,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[571,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[572,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[573,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[574,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[575,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[578,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[579,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[581,"impl-ChunkedArray%3CStringType%3E"],[582,"impl-ChunkedArray%3CListType%3E"],[583,"impl-ChunkedArray%3CStringType%3E"],[584,"impl-ChunkedArray%3CListType%3E"],[587,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[588,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[589,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[590,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[591,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[592,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[599,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[600,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[621,"impl-Rem-for-ChunkedArray%3CT%3E"],[622,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[623,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[624,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[627,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[628,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[629,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[630,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[631,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[632,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[639,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[640,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[641,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[642,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[643,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[644,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[645,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[646,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[647,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[648,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[649,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[650,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[651,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[652,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[653,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[659,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[660,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[661,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[662,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[663,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[664,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[665,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[666,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[667,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[668,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[669,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[670,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[671,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[672,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[673,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[674,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[675,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[677,"impl-Container-for-ChunkedArray%3CT%3E"],[678,"impl-ChunkedArray%3CT%3E"],[679,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[680,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[681,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[682,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[683,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[684,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[685,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[686,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[687,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[688,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[689,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[690,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[691,"impl-Container-for-ChunkedArray%3CT%3E"],[692,"impl-ChunkedArray%3CT%3E"],[694,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[695,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[696,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[698,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[699,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[700,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[701,"impl-Sub-for-ChunkedArray%3CT%3E"],[703,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[704,"impl-ChunkedArray%3CBooleanType%3E"],[705,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[706,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[707,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[709,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[710,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[713,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[714,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[715,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[716,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[717,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[718,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[719,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[720,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[725,"impl-ChunkedArray%3CFixedSizeListType%3E"],[726,"impl-ChunkedArray%3CListType%3E"],[727,"impl-ChunkedArray%3CT%3E"],[728,"impl-ChunkedArray%3CListType%3E"],[733,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[734,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[735,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[736,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[737,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[738,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[740,"impl-ChunkedArray%3CFixedSizeListType%3E"],[741,"impl-ChunkedArray%3CListType%3E"],[755,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[756,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[757,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[758,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[759,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[765,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[766,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[767,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[768,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[769,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[770,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[771,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[772,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[773,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[774,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[775,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[777,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[778,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[779,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[780,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[781,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[782,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[783,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[785,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[787,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[795,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[798,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[811,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[812,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[813,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[850,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[851,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[1027,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1028,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1303,"impl-Flags-for-MetadataProperties"],[1304,"impl-MetadataProperties"],[1305,"impl-Flags-for-MetadataFlags"],[1306,"impl-MetadataFlags"],[1371,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1372,"impl-Metadata%3CT%3E"],[1397,"impl-LowerHex-for-MetadataProperties"],[1398,"impl-UpperHex-for-MetadataProperties"],[1399,"impl-Binary-for-MetadataProperties"],[1400,"impl-Debug-for-MetadataProperties"],[1401,"impl-Octal-for-MetadataProperties"],[1402,"impl-LowerHex-for-MetadataFlags"],[1403,"impl-UpperHex-for-MetadataFlags"],[1404,"impl-Binary-for-MetadataFlags"],[1405,"impl-Debug-for-MetadataFlags"],[1406,"impl-Octal-for-MetadataFlags"],[1416,"impl-Flags-for-MetadataProperties"],[1417,"impl-MetadataProperties"],[1418,"impl-MetadataFlags"],[1419,"impl-Flags-for-MetadataFlags"],[1430,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1431,"impl-Metadata%3CT%3E"],[1474,"impl-Metadata%3CT%3E"],[1475,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1479,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1480,"impl-Metadata%3CT%3E"],[1557,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1558,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1592,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1593,"impl-ObjectArray%3CT%3E"],[1608,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1609,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1619,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1620,"impl-ObjectArray%3CT%3E"],[1622,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1623,"impl-ObjectArray%3CT%3E"],[1625,"impl-Array-for-ObjectArray%3CT%3E"],[1626,"impl-ObjectArray%3CT%3E"],[1629,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1630,"impl-ObjectChunkedBuilder%3CT%3E"],[1632,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1633,"impl-ObjectChunkedBuilder%3CT%3E"],[2383,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2384,"impl-Logical%3CDurationType,+Int64Type%3E"],[2386,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2387,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2388,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2389,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2390,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2692,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2693,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2694,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2695,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2696,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2703,"impl-PartialEq-for-DataType"],[2704,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2711,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2712,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2713,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2714,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2715,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2716,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2749,"impl-Debug-for-AnyValue%3C\'a%3E"],[2750,"impl-Display-for-AnyValue%3C\'_%3E"],[2752,"impl-Debug-for-DataType"],[2753,"impl-Display-for-DataType"],[2756,"impl-Display-for-TimeUnit"],[2757,"impl-Debug-for-TimeUnit"],[2763,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2764,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2777,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2778,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2779,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2780,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2781,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2784,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2785,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2787,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2789,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2790,"impl-From%3C%26ArrowField%3E-for-Field"],[2814,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2816,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2838,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2839,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2840,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2841,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2842,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2845,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2846,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2847,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2848,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2849,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2885,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2886,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2887,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2888,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2889,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2890,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2992,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2993,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2994,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2995,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2996,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3042,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3043,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3044,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3045,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3046,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3047,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3082,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3083,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3084,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3085,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3086,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3087,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3088,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3089,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3095,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3096,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3097,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3098,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3099,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3100,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3103,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3104,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3123,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3124,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3130,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3131,"impl-Logical%3CDurationType,+Int64Type%3E"],[3137,"impl-Logical%3CTimeType,+Int64Type%3E"],[3138,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3139,"impl-Logical%3CDateType,+Int32Type%3E"],[3154,"impl-Logical%3CDurationType,+Int64Type%3E"],[3155,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3203,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3204,"impl-Logical%3CTimeType,+Int64Type%3E"],[3205,"impl-Logical%3CDateType,+Int32Type%3E"],[3210,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3211,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3497,"impl-Debug-for-ErrString"],[3498,"impl-Display-for-ErrString"],[3499,"impl-Debug-for-PolarsError"],[3500,"impl-Display-for-PolarsError"],[3504,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3505,"impl-From%3CParquetError%3E-for-PolarsError"],[3506,"impl-From%3CError%3E-for-PolarsError"],[3507,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3508,"impl-From%3CError%3E-for-PolarsError"],[3509,"impl-From%3CError%3E-for-PolarsError"],[3641,"impl-Display-for-DataFrame"],[3642,"impl-Debug-for-DataFrame"],[3673,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3674,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3675,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3676,"impl-Index%3Cusize%3E-for-DataFrame"],[3677,"impl-Index%3C%26str%3E-for-DataFrame"],[3678,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3679,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3680,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3699,"impl-Container-for-DataFrame"],[3700,"impl-DataFrame"],[3707,"impl-DataFrame"],[3708,"impl-Container-for-DataFrame"],[3746,"impl-Container-for-DataFrame"],[3747,"impl-DataFrame"],[3751,"impl-Container-for-DataFrame"],[3752,"impl-DataFrame"],[3774,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3775,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3955,"impl-Display-for-GroupByMethod"],[3956,"impl-Debug-for-GroupByMethod"],[3962,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3963,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3964,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3998,"impl-IntoIterator-for-%26GroupsIdx"],[3999,"impl-IntoIterator-for-GroupsIdx"],[4001,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4002,"impl-IntoParallelIterator-for-GroupsIdx"],[5336,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5337,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5341,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5342,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5370,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5371,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5394,"impl-OptState"],[5395,"impl-Flags-for-OptState"],[6166,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6167,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6168,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[6178,"impl-Default-for-Arc%3CCStr%3E"],[6179,"impl-Default-for-Arc%3Cstr%3E"],[6180,"impl-Default-for-Arc%3CT%3E"],[6181,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6665,"impl-Expr"],[6666,"impl-PartialEq-for-Expr"],[6669,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6670,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6689,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6690,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6691,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6696,"impl-PartialEq-for-StructArray"],[6697,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6982,"impl-Debug-for-Duration"],[6983,"impl-Display-for-Duration"],[7001,"impl-Debug-for-JoinType"],[7002,"impl-Display-for-JoinType"],[7004,"impl-Display-for-JoinValidation"],[7005,"impl-Debug-for-JoinValidation"],[7022,"impl-Display-for-Expr"],[7023,"impl-Debug-for-Expr"],[7025,"impl-Display-for-Operator"],[7026,"impl-Debug-for-Operator"],[7028,"impl-Debug-for-BooleanFunction"],[7029,"impl-Display-for-BooleanFunction"],[7030,"impl-Display-for-CategoricalFunction"],[7031,"impl-Debug-for-CategoricalFunction"],[7032,"impl-Display-for-TemporalFunction"],[7033,"impl-Debug-for-TemporalFunction"],[7034,"impl-Display-for-PowFunction"],[7035,"impl-Debug-for-PowFunction"],[7036,"impl-Display-for-StringFunction"],[7037,"impl-Debug-for-StringFunction"],[7038,"impl-Debug-for-StructFunction"],[7039,"impl-Display-for-StructFunction"],[7040,"impl-Debug-for-FunctionExpr"],[7041,"impl-Display-for-FunctionExpr"],[7053,"impl-UpperHex-for-OptState"],[7054,"impl-LowerHex-for-OptState"],[7055,"impl-Debug-for-OptState"],[7056,"impl-Binary-for-OptState"],[7057,"impl-Octal-for-OptState"],[7061,"impl-Pointer-for-Arc%3CT,+A%3E"],[7062,"impl-Display-for-Arc%3CT,+A%3E"],[7063,"impl-Debug-for-Arc%3CT,+A%3E"],[7096,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7097,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7174,"impl-From%3Ci8%3E-for-Expr"],[7175,"impl-From%3Ci16%3E-for-Expr"],[7176,"impl-From%3Cbool%3E-for-Expr"],[7177,"impl-From%3Cu32%3E-for-Expr"],[7178,"impl-From%3Cu16%3E-for-Expr"],[7179,"impl-From%3CAggExpr%3E-for-Expr"],[7180,"impl-From%3Cu64%3E-for-Expr"],[7182,"impl-From%3Cu8%3E-for-Expr"],[7183,"impl-From%3Cf64%3E-for-Expr"],[7184,"impl-From%3Ci32%3E-for-Expr"],[7185,"impl-From%3Cf32%3E-for-Expr"],[7186,"impl-From%3Ci64%3E-for-Expr"],[7187,"impl-From%3C%26str%3E-for-Expr"],[7190,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7191,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7192,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7193,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7194,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7195,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7197,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7198,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7199,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7200,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7207,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7208,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7209,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7210,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7222,"impl-From%3CString%3E-for-Selector"],[7223,"impl-From%3CExpr%3E-for-Selector"],[7224,"impl-From%3CArc%3Cstr%3E%3E-for-Selector"],[7226,"impl-From%3C%26str%3E-for-Selector"],[7233,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7234,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7235,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7236,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7237,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7238,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7240,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7242,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7243,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7244,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7245,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7246,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7247,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7248,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7249,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7256,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7257,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7260,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[7261,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[7263,"impl-From%3CArrowSchema%3E-for-Schema"],[7264,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[7265,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[7266,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[7275,"impl-OptState"],[7276,"impl-Flags-for-OptState"],[7281,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7282,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7291,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7292,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7305,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7306,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8439,"impl-Array-for-StructArray"],[8440,"impl-StructArray"],[8446,"impl-Array-for-StructArray"],[8447,"impl-StructArray"],[8709,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[8710,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[8714,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[8715,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9158,"impl-Array-for-StructArray"],[9159,"impl-StructArray"],[9414,"impl-LazyFileListReader-for-LazyCsvReader"],[9415,"impl-LazyCsvReader"],[9416,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9417,"impl-LazyJsonLineReader"],[9461,"impl-LazyFileListReader-for-LazyCsvReader"],[9462,"impl-LazyCsvReader"],[9463,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9464,"impl-LazyJsonLineReader"],[9505,"impl-StructArray"],[9506,"impl-Array-for-StructArray"],[9979,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9980,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9985,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9986,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[10680,"impl-Display-for-RollingFunction"],[10681,"impl-Debug-for-RollingFunction"],[10710,"impl-Display-for-RollingFunctionBy"],[10711,"impl-Debug-for-RollingFunctionBy"],[10933,"impl-Add-for-Series"],[10934,"impl-Add%3CT%3E-for-Series"],[10935,"impl-Add%3CT%3E-for-%26Series"],[10936,"impl-Add-for-%26Series"],[10952,"impl-AsSeries-for-Series"],[10953,"impl-SeriesSealed-for-Series"],[11006,"impl-Div-for-%26Series"],[11007,"impl-Div%3CT%3E-for-%26Series"],[11008,"impl-Div-for-Series"],[11009,"impl-Div%3CT%3E-for-Series"],[11020,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11021,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11022,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11024,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11025,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11026,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11042,"impl-Debug-for-Series"],[11043,"impl-Display-for-Series"],[11048,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11049,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[11050,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[11051,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[11053,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[11059,"impl-FromIterator%3C%26u32%3E-for-Series"],[11060,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11061,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[11062,"impl-FromIterator%3C%26str%3E-for-Series"],[11063,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[11064,"impl-FromIterator%3C%26bool%3E-for-Series"],[11065,"impl-FromIterator%3Cbool%3E-for-Series"],[11066,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11067,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11068,"impl-FromIterator%3Cu8%3E-for-Series"],[11069,"impl-FromIterator%3C%26f64%3E-for-Series"],[11070,"impl-FromIterator%3C%26u8%3E-for-Series"],[11071,"impl-FromIterator%3Cf64%3E-for-Series"],[11072,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11073,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11074,"impl-FromIterator%3C%26f32%3E-for-Series"],[11075,"impl-FromIterator%3Cf32%3E-for-Series"],[11076,"impl-FromIterator%3Cu16%3E-for-Series"],[11077,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11078,"impl-FromIterator%3C%26u16%3E-for-Series"],[11079,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11080,"impl-FromIterator%3Cu32%3E-for-Series"],[11081,"impl-FromIterator%3C%26i64%3E-for-Series"],[11082,"impl-FromIterator%3Ci64%3E-for-Series"],[11083,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11084,"impl-FromIterator%3C%26i32%3E-for-Series"],[11085,"impl-FromIterator%3Ci32%3E-for-Series"],[11086,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11087,"impl-FromIterator%3Cu64%3E-for-Series"],[11088,"impl-FromIterator%3C%26u64%3E-for-Series"],[11089,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11090,"impl-FromIterator%3Ci8%3E-for-Series"],[11091,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11092,"impl-FromIterator%3C%26i8%3E-for-Series"],[11093,"impl-FromIterator%3C%26i16%3E-for-Series"],[11094,"impl-FromIterator%3Ci16%3E-for-Series"],[11095,"impl-FromIterator%3CString%3E-for-Series"],[11096,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11097,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11098,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11099,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11100,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11101,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11102,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11103,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11104,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11105,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11106,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11118,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11119,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11120,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11122,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11123,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11124,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11165,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11166,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11167,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11169,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11170,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11171,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11180,"impl-Mul-for-%26Series"],[11181,"impl-Mul-for-Series"],[11182,"impl-Mul%3CT%3E-for-Series"],[11183,"impl-Mul%3CT%3E-for-%26Series"],[11188,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11189,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11190,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11191,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11192,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11193,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11194,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11195,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11196,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11197,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11198,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11199,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11200,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11201,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11202,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11203,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11204,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11205,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11206,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11207,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11208,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11209,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11210,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11211,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11212,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11213,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11214,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11215,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11216,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11217,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11218,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11219,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11220,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11221,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11222,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11223,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11224,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11225,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11226,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11227,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11228,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11229,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11230,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11231,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11232,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11233,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11234,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11235,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11236,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11237,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11238,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11239,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11240,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11246,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11247,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11248,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11250,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11251,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11252,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11260,"impl-Rem%3CT%3E-for-Series"],[11261,"impl-Rem%3CT%3E-for-%26Series"],[11262,"impl-Rem-for-%26Series"],[11291,"impl-Sub%3CT%3E-for-Series"],[11292,"impl-Sub-for-%26Series"],[11293,"impl-Sub%3CT%3E-for-%26Series"],[11294,"impl-Sub-for-Series"],[11318,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11319,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11320,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11322,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAACMPbw+rD64Prw+wD7EPsg+3D7oPvw/AD+UP","e":"OzAAAAEAANkgXAQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB0AOwAFAEUAAQBIAAsAVwAIAGEAAQBkAAUAbAABAG8ABAB1ABYAjQAAAI8AEQCkAAMAqQABAK8ADQC+ABUA1gAHAN8ACgDrAAAA7QABAPEAHAAUARUALAETAEEBAABDARQAWgEBAF4BAQBhAR4AggECAIoBEACcAQMAowECAKgBAQCrAQYAswEAALgBIQDfAQYA6AEIAPIBNQArAhUAQgICAEYCBABMAgUAVgIAAFgCGgB0AgcAgAIRAJQCEACmAgAAqAIMALYCDgDIAgEAzwICANMCAQDaAgAA3gIGAOYCAADoAgIA7AINAPsCAAD9AigAKAMCACwDIwBTAzUAiwMIAJgDEQCtA1wAFwQSADUEBwA+BEkAiwQPAJwEAQCfBBkAugQAAL0EDgDPBAIA1QQCANoEHAD4BAkAAwUKABgFAAAaBQAAIAUgAEUFEgBaBQAAXAUJAGgFAwBuBQEAcgUNAIkFAACMBQAAkwUHAJwFBwCxBQEAtQUAALgFAwDABQUAxwUEANMFCwDmBQQA7QUNAP0FBgAHBgcAEAYBABQGFgAsBgcANQYAADcGAAA5BgAAOwYBAEAGEABSBgAAVAYAAFcGAwBcBgIAYAYBAGMGBwBsBgAAbgYFAHYGAQB5BgAAewYBAH4GAwCDBgMAiAYCAIwGAwCSBgAAlQYAAJ0GAACiBgAApQYBAKoGAQCtBgAAsAYAALgGAAC+BgIAyQYGANMGEgDoBgUA8AYIAPsGAwAABwAAAgcAAAQHAAAGBwEADAcFABUHAQAeBwEAKgcAACwHAQAvBwAAMgcAADQHAAA4BwAAOgcAAD8HDABOBwIAXQcAAF8HBwBoBwEAawcAAG8HAABxBwMAdgcBAHkHBQCFBxcAngcBAKIHBACoBwMArwcHAMQHAwDJBwgA0wcEANoHAgDeBwUA5gcAAOgHDQD6BwEA/gcBAAQIAQAHCAEACggDAA8IAAARCAAAFAgBABgIAAAaCAEAHQgAAB8IAgAjCAwAMQgAADMIAQA2CAAAOAgBADsIAAA9CAEAQAgAAEIIAQBFCAMATAgAAFAIAQBUCAAAVwgAAFkIAABbCAMAYAgAAGMICABtCAIAcQgEAHgIAQB8CAAAfggCAIIIAQCICAMAjQgBAJAIAACSCAEAlQgAAJcIAQCaCAAAnAgBAJ8IAAChCAEApAgAAKYIAACpCCQAzwgXAOgIZgBSCY4A4gkHAOwJlwCFCgUAjAoqALgKEADMCgEA2goEAOEKAQDkCgAA5goBAOoKAAD/CgAAAQsAAAMLAAALCwAADgsAABALBQAXCwQAHQsFACQLAAAmCxoARgsNAFYLKwCDCwAArwsHALkLAAC7CwIAvwsDAMQLAQDJCwAAywsFANILAADVCwIA2gsDAN8LAADiCw0A8gsAAPULDgAFDAAACAwLABUMDAAjDAEAJgwAACgMDQA3DAAAPwwAAEEMAABGDBAAWQwAAFsMAgBgDCAAgwwAAIcMZADtDC0AHA0BAB8NNQBWDQEAWQ0IAGMNAABlDQEAaA0EAG4NAQBzDQAAdQ0CAHkNAAB8DQQAgg0EAIgNEgCcDREArw0AALENBQC4DQMAvw0FAMYNFQDfDQAA4g0KAO4NAgD2DRYADw4PACAOAAApDgEALQ4CADEOAAAzDgAAOA4DAE8OAABRDgAAUw4BAFoODABtDgIAdA4AAHgOAAB9DgAAgQ4BAI4OAQCSDgAAmA4AAKEOAgClDgAAqA4AAKoOAQCyDgAAtA4DALsOBgDEDgkAzw4AANIOAQDXDgQA4w4OAPMOAgD3DgoAAw8BAAYPAwALDwMAEA8JABsPBwAkDwEAJw8dAEYPKABwDwYAew8CAH8PAACDDwMAiQ8AAI0PBwCdDw0ArA8BALMPAwC4DwEAvA8CAMEPAADDDx8A5g8MAPUPBQD8DwcABRAjACsQDgA7EA8ATRAAAE8QAwBWEAYAYBAOAHEQBgB6EAAAfRAIAIcQAQCLEAQAkRAFAJgQAACdEAkAqBABAKwQBACyEAEAtRAKAMEQAADEEAAAxhAJANEQAADUEAkA3xAEAOgQAADrEAAA8xACAPoQAAD9EAEAAxEKAA8REgAlEQcALhEBADERBQA7EQQAQxEEAE0RAwBSEQAAVBELAGIRBABoEQUAcBECAHURAAB4EQAAehECAH8RAgCDEQUAihEEAJARAwCXEQIAnREAAJ8RAQCjEQAApREEAKwRDwC9EQAAwBEBAMMRAwDJEQIAzxEWAOcRCQDzEQAA9REBAPkRAAD7EQEA/xEAAAESAQAFEgAABxIFAA8SAgATEgEAFxIAABoSAAAcEgIAIBICACQSCgAxEgcAOhIAADwSAABAEgEARBIAAEYSAABIEgEASxIBAE4SAQBTEgAAVRINAGYSBQBtEgcAdxICAHsSBgCGEgEAiRIAAIsSAQCOEgQAlBIDAJkSAgCdEgAAnxIEAKUSAACnEgYArxIEALUSAQC4EgEAuxIBAL4SAQDBEgAAwxIAAMUSAADJEgIAzhIDANMSBwDdEgIA5BIAAOYSBQDtEgMA8xIAAPUSAAD4EgAA+hIDAP8SAwAEEwIACBMAAAoTBwATEwYAHBMVADMTFABLEwEAThMGAFYTBQBeEwAAYBMBAGQTAABmEwUAbRMEAHMTAAB1EwIAehMAAHwTAACAEwEAhRMHAI4TAwCWEwYAnhMJAKoTAwCvEwgAuRMAALsTAgDAEwIAxxMFAM4TEgDjEwAA5RMBAOkTAADrEwEA7xMAAPETAQD1EwAA9xMEAP4TAwADFAEABhQBAAwUCQAXFAAAGhQGACMUAgAnFF8AiBQCAI8UAACRFAAAlBQGAJ0UAAClFAAAqRQAAKsUAACvFAUAuRQAAL0UAADEFAAAyBQAANQUAgDYFAgA4hQAAOQUAQDnFAIA7hQBAPEUBAD3FAEA/xQKAAwVAAAOFQAAERUAABQVAQAXFQAAGRX5ABQWAQAXFgEAGhYAABwWAgAiFgAAJhYAACoWAAAsFgAALhYAADQWAAA3FgEAOhYAAEQWTgCUFg0AoxbiAIcXAQCNFwIAkxcCAJkXCgCnFwQArRcAALMXAAC1FwAAwBcBAMQXAADGFwAAyxcAANAXAQDfFwAA5RcAAOoXAgDwFwAA8hcFAPoXKAAnGAYBMBkAADUZAQA4GQMAPxkAAEEZAwBJGQkAVBliALgZDwDNGQEA0hkBANYZAADZGQMA3hkrAAsaFwAkGgsAMxqzAOsaAADyGgAA9BoBAPcaAAD5GgAA/RoAAAEbAAADGwAACBsAAAsbAAAOGwAAFhsAABkbAgAgGwYAKBsBACsbAAAtGwMANRsAADcbAAA5GwEAPhtpAKkbAACsGwAAuRsBANwbAADlGwAA6BsAAAccBgAPHAUAFxwFAB4cAwAoHAMAMxwAADccAgA7HAAAPhwAAEocAABZHAEAXRwBAGAcAwBmHAAAbRwAAG8cAAByHAEAdhwAAHwcAQCBHAIAhxwFAI4cAgCSHAEAlhwCAJocAACcHAAAnhwAAKMcAACsHAAArxwBALIcAgC3HAAAuhwBAL8cAQDCHAEAxhwEAM4cAQDSHAAA3RwAAN8cQQAkHQMALB0AAC4dAAAwHQQANx0AADkdAAA7HQEAPh0AAEEdAQBHHQIATB2AAM8dAADVHQIA2R0BAFseAABdHgcAaB4DAG0eAgBxHgMAdx4AAHkeAAB7HgIAfx4BAIIeAACEHgAAhx4BAJQeAACWHgAAmR4BAJweAwCiHgIAsx4BALYeAQC/HgAAwR4BAMQeAADIHgIAzh4BANEeAADYHgIA3R4BAOEeAgDlHgMA6x4OAP8eAAAFHwEADB8AAA8fBQAYHwAAIB8CACwfAAA3HwAAPR8BAEEfAABFHwEASB8AAEsfAABQHwAAUh8AAFQfAABZHwAAXR8AAF8fAgBmHwYAcx8IAIEfAACDHwAAhx8AAI0fAACPHwQAmB8BAJsfAQCeHwAAoR8IAKwfAQCvHwAAsh8BALYfAAC6HwAAxB8AAMcfAQDSHwEA1R8EAOAfAgDoHwEA7x8CAPMfAgD+HwAAACAEAAYgBQANIAMAFiADABsgAAAdIAIAIyAAACUgAAAxIAAANCABADcgAQA6IAMAQCAFAEcgBABTIAAAWSAAAF8gAABhIAAAZiAAAGogAABsIAAAbiABAJEgAACWIAAAniADAKMgBQCrIAAAtCAAALggAgC8IAMAwyAAAMUgAQDIIAEAyyABAM8gAADUIAMA2yAAAOYgAADoIAAA6iAAAPAgAwD4IAAA+iAAAPwgAAD+IAEAAyEAAAUhAAALIQMAECEHABkhAAAbIQAAHyEAACUhAAAoIQAALiEAADIhCgA/IQIARCEAAEchAgBSIQAAYiEAAGQhAABnIQIAayEDAHEhAQB0IQAAdyEAAHshXwDdIQwA6yEAAO8hAQD0IQoAACIAAAIiAQAFIo8AlyIAAJsifAAbIwAAHSMDACgjAAArIwEALiN7AKsjAACzIwAAuCMAALojAAC8IwAAwiMFAMkjAQDNIwEA0SMAANUjAADbIwEA3iMAAOAjfABjJAMAbCQAAG8kAQB0JAEAeSQBAHwkAACEJAAAiCQBAI4kAACUJAAAniQAAKUkAQCwJAMAtyQBAMckAADJJAAAzSQAAM8kAADSJAAA2CQBANskAwDjJAAA8CQAAPYkAAD4JAAA/CQAAAQlAAAJJQAAFSUAABklAAAbJQEAIyUCACklFAA/JQEARSUBAEglSACTJQAAlSUAAJclAQCaJQEAnSUGAKUlNwDfJQUA5iUJAPElAQD0JQAA+CUAAPolAwD/JQEAAiYFAAwmEgAgJgEAIyYCACgmAAAsJhYARCYXAGAmBABpJhMAfiYGAJUmAACjJgIAuSYAAMAmCADNJgAAzyYNAN4mAgDiJhIA9iYBAPkmDwAKJxkAJicAACgnAgAtJwoAOScBADwnBQBDJwgATScEAFQnAgBYJwUAYCcAAGInDQB0JwEAeCcBAH4nAQCBJwEAhCcDAIknAACLJwAAjicBAJInAACUJwEAlycAAJknAgCdJwwAqycAAK0nAQCwJwAAsicBALUnAAC3JwEAuicAALwnAQC/JwMAxicAAMonAQDOJwAA0ScAANMnAADVJwMA2icAAN0nCADnJwIA6ycEAPInAQD2JwAA+CcCAPwnAQACKAMABygBAAooAAAMKAEADygAABEoAQAUKAAAFigBABkoAAAbKAEAHigAACAoAAAjKBIANygGAEAoAABDKBEAVigIAGAoAQBjKAgAbSgAAG8oAQB1KAAAdygEAIAoAQCJKAIAjygAAJEoAACbKAAAqigDALIoCgC+KAAAwCgIAMso7wC8KQEAvykZANopAQDdKQ8A7ykSAAMqAAAFKhcAHioBACIqAAAkKgsAMSoCADgqAABIKgMATyoHAGQqBQBsKgAAdSoAAHcqAQB+KgYAhioAAIwqCgCgKgUApyoAAKkqAwCuKgUAtioEALwqAQDAKgAAxioEAM8qAgDTKgkA4CoCAOQqAADoKgIA7CoEAPUqEQAKKwEADisBABErAAATKwAAFisCACIrAwApKwMALisAADErAQA0KzAAaCsAAGorAABvKwEAdCsBAHcrAAB9KwEAgCsDAIgrAwCTKwIAlysAAJkrAACcKwAAnisAAKArAACiKwAApCsAAKgrAACtKwMAsisAALUrBQC8Ky0A7CsBAO8rAADxKwAA8ysBAPgrAQD9KwIAAiwBAAUsAAAILAIADiwBABEsAAATLAAAFSwAABksAAAcLAMAJSwAAC0sAAAvLAEAMiwOAEIsBABNLAAAUCwDAFUsAABYLAsAZSwAAGcsAABpLAQAbywWAIgsAQCMLBAAniwBAKEsBAA="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNNMMNNNNNNNNMMNMCMMCNNCMMCMMNNNNNNNNNNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIKKKKRGPIKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPPKKPEPGPPPIFEKPPPGEEIEKGPPGFFFPPEPPEEPKPFPEPEEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNCNNNNNNNHRTKFKINNNNNNNNNNNHNNNNNNNNNNNNNNNNNNMNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGEPPKGGPPPFFIKPNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNNMNMHMNNNNNENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_nulls","head","init","init","init_rand","inner_dtype","interior_mut_metadata","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_views","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast_leaf","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_scalar","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","oldest","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","physical","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_scale","to_scale","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","len","max_horizontal","mean_horizontal","min_horizontal","mul","mul","mul","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_names_and_dtypes","get_unchecked","gt","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_raw_with_allocator","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_project","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","from","init","into","into_series","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","IndexOfSchema","Schema","SchemaNamesAndDtypes","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","contains","default","deref","deref_mut","drop","ensure_matching_schema","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","BitRepr","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Large","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_metadata","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_list","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","sort_with","split_at","split_at","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","var","var","var_reduce","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Arg","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","__clone_box","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","drop","drop","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","empty","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","flags","flatten","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_name","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","hash","hash","init","init","init","init","init","insert","intersection","intersects","into","into","into","into","into","into_inner","into_iter","into_iter","into_vec","into_vec","into_vec","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","n_chunks","new","new","next","next_back","not","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","trust_my_length","try_from","try_from","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","vzip","vzip","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[439,"polars_core::chunked_array::arithmetic"],[467,"polars_core::chunked_array::builder"],[575,"polars_core::chunked_array::builder::list"],[729,"polars_core::chunked_array::cast"],[759,"polars_core::chunked_array::collect"],[773,"polars_core::chunked_array::float"],[775,"polars_core::chunked_array::from_iterator_par"],[779,"polars_core::chunked_array::iterator"],[816,"polars_core::chunked_array::iterator::par"],[818,"polars_core::chunked_array::metadata"],[1106,"polars_core::chunked_array::object"],[1183,"polars_core::chunked_array::object::builder"],[1206,"polars_core::chunked_array::object::registry"],[1234,"polars_core::chunked_array::ops"],[1360,"polars_core::chunked_array::ops::arity"],[1396,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1398,"polars_core::chunked_array::ops::gather"],[1401,"polars_core::chunked_array::ops::search_sorted"],[1432,"polars_core::chunked_array::ops::sort"],[1439,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1440,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1448,"polars_core::chunked_array::ops::sort::options"],[1526,"polars_core::chunked_array::temporal"],[1527,"polars_core::chunked_array::temporal::conversion"],[1530,"polars_core::config"],[1534,"polars_core::datatypes"],[3004,"polars_core::datatypes::categorical"],[3145,"polars_core::datatypes::categorical::revmap"],[3200,"polars_core::datatypes::categorical::string_cache"],[3219,"polars_core::datatypes::revmap"],[3225,"polars_core::datatypes::string_cache"],[3229,"polars_core::error"],[3295,"polars_core::error::PolarsError"],[3299,"polars_core::error::constants"],[3302,"polars_core::export"],[3309,"polars_core::fmt"],[3341,"polars_core::frame"],[3613,"polars_core::frame::explode"],[3642,"polars_core::frame::group_by"],[3881,"polars_core::frame::group_by::GroupByMethod"],[3882,"polars_core::frame::group_by::GroupsProxy"],[3884,"polars_core::frame::group_by::aggregations"],[3897,"polars_core::frame::group_by::expr"],[3900,"polars_core::frame::row"],[3997,"polars_core::functions"],[3999,"polars_core::hashing"],[4047,"polars_core::prelude"],[4629,"polars_core::prelude::PolarsError"],[4633,"polars_core::prelude::default_arrays"],[4639,"polars_core::prelude::list"],[4662,"polars_core::prelude::null"],[4693,"polars_core::prelude::revmap"],[4699,"polars_core::prelude::slice"],[4702,"polars_core::prelude::string_cache"],[4706,"polars_core::prelude::utf8"],[4710,"polars_core::random"],[4711,"polars_core::scalar"],[4736,"polars_core::scalar::reduce"],[4737,"polars_core::schema"],[4817,"polars_core::series"],[5232,"polars_core::series::amortized_iter"],[5256,"polars_core::series::arithmetic"],[5281,"polars_core::series::arithmetic::checked"],[5289,"polars_core::series::ops"],[5317,"polars_core::utils"],[5530,"polars_core::utils::flatten"],[5535,"dyn_clone::sealed"],[5536,"num_traits"],[5537,"num_traits::cast"],[5538,"polars_error"],[5539,"polars_core::series::arithmetic::borrowed"],[5540,"polars_core::frame::group_by::proxy"],[5541,"core::option"],[5542,"core::iter::traits::iterator"],[5543,"core::ops::function"],[5544,"core::marker"],[5545,"alloc::string"],[5546,"polars_core::datatypes::dtype"],[5547,"polars_arrow::array::binview::view"],[5548,"polars_core::datatypes::aliases"],[5549,"polars_core::series::arithmetic::borrowed::checked"],[5550,"polars_arrow::array"],[5551,"alloc::vec"],[5552,"core::iter::traits::double_ended"],[5553,"core::fmt"],[5554,"core::iter::traits::collect"],[5555,"polars_arrow::bitmap::immutable"],[5556,"rayon::iter"],[5557,"polars_arrow::trusted_len"],[5558,"polars_core::datatypes::any_value"],[5559,"polars_utils::index"],[5560,"std::sync::rwlock"],[5561,"polars_core::chunked_array::logical::decimal"],[5562,"core::iter::traits::exact_size"],[5563,"polars_core::series::series_trait"],[5564,"core::slice::iter"],[5565,"core::iter::adapters::map"],[5566,"polars_core::chunked_array::metadata::guard"],[5567,"polars_core::chunked_array::metadata::interior_mutable"],[5568,"alloc::sync"],[5569,"polars_core::chunked_array::metadata::md_trait"],[5570,"core::convert"],[5571,"core::ops::range"],[5572,"polars_core::datatypes::field"],[5573,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5574,"polars_core::chunked_array::ops::rolling_window"],[5575,"polars_utils::aliases"],[5576,"polars_utils::hashing"],[5577,"ndarray::aliases"],[5578,"either"],[5579,"core::result"],[5580,"core::any"],[5581,"polars_core::chunked_array::arithmetic::numeric"],[5582,"polars_core::chunked_array::builder::string"],[5583,"polars_arrow::array::binview"],[5584,"polars_core::chunked_array::builder::boolean"],[5585,"polars_core::chunked_array::builder::null"],[5586,"polars_core::chunked_array::builder::primitive"],[5587,"core::clone"],[5588,"polars_core::chunked_array::builder::list::anonymous"],[5589,"polars_core::chunked_array::builder::list::boolean"],[5590,"polars_core::chunked_array::builder::list::primitive"],[5591,"polars_core::chunked_array::builder::list::binary"],[5592,"polars_core::chunked_array::builder::list::null"],[5593,"alloc::boxed"],[5594,"core::hash"],[5595,"polars_arrow::array::boolean"],[5596,"polars_core::chunked_array::metadata::env"],[5597,"polars_core::chunked_array::metadata::collect"],[5598,"bitflags::iter"],[5599,"std::fs"],[5600,"std::sync::mutex"],[5601,"polars_arrow::datatypes"],[5602,"polars_arrow::bitmap::utils::iterator"],[5603,"polars_arrow::bitmap::utils::zip_validity"],[5604,"polars_arrow::offset"],[5605,"polars_arrow::array::static_array"],[5606,"core::error"],[5607,"polars_arrow::array::primitive"],[5608,"polars_arrow::legacy::array::slice"],[5609,"polars_row::row"],[5610,"polars_arrow::array::binary"],[5611,"chrono::naive::datetime"],[5612,"alloc::borrow"],[5613,"polars_arrow::array::static_array_collect"],[5614,"bytemuck::zeroable"],[5615,"polars_core::chunked_array::logical::categorical"],[5616,"polars_core::chunked_array::logical::categorical::merge"],[5617,"polars_core::chunked_array::logical"],[5618,"polars_core::datatypes::time_unit"],[5619,"polars_arrow::types"],[5620,"polars_arrow::datatypes::physical_type"],[5621,"core::borrow"],[5622,"polars_arrow::pushable"],[5623,"polars_core::datatypes::into_scalar"],[5624,"core::cmp"],[5625,"polars_core::chunked_array::logical::categorical::builder"],[5626,"polars_core::chunked_array::logical::categorical::revmap"],[5627,"polars_core::chunked_array::logical::categorical::string_cache"],[5628,"polars_error::warning"],[5629,"polars_core::series::from"],[5630,"polars_arrow::datatypes::schema"],[5631,"polars_core::chunked_array::ndarray"],[5632,"polars_arrow::array::struct_"],[5633,"polars_arrow::record_batch"],[5634,"polars_utils::idx_vec"],[5635,"rayon::iter::plumbing"],[5636,"polars_core::frame::group_by::into_groups"],[5637,"core::iter::adapters::copied"],[5638,"core::iter::adapters::zip"],[5639,"polars_arrow::legacy::kernels::rolling"],[5640,"polars_utils::float"],[5641,"polars_arrow::types::native"],[5642,"polars_core::frame::group_by::aggregations::agg_list"],[5643,"polars_core::frame::row::av_buffer"],[5644,"polars_core::hashing::identity"],[5645,"hashbrown::map"],[5646,"polars_core::hashing::vector_hasher"],[5647,"core::alloc"],[5648,"std::os::fd::owned"],[5649,"std::os::fd::raw"],[5650,"core::mem::maybe_uninit"],[5651,"polars_arrow::legacy::kernels::time"],[5652,"core::ffi::c_str"],[5653,"core::default"],[5654,"polars_arrow::scalar"],[5655,"std::io::error"],[5656,"regex::error"],[5657,"simdutf8::basic"],[5658,"alloc::collections"],[5659,"std::path"],[5660,"std::ffi::os_str"],[5661,"alloc::ffi::c_str"],[5662,"polars_arrow::legacy::array::default_arrays"],[5663,"polars_arrow::buffer::immutable"],[5664,"polars_arrow::array::list"],[5665,"polars_core::named_from"],[5666,"polars_core::chunked_array::ops::aggregate"],[5667,"polars_core::chunked_array::ops::aggregate::quantile"],[5668,"polars_arrow::legacy::index"],[5669,"core::pin"],[5670,"core::io::borrowed_buf"],[5671,"std::io"],[5672,"polars_core::chunked_array::ops::aggregate::var"],[5673,"alloc::collections::btree::map"],[5674,"polars_arrow::legacy::array::list"],[5675,"polars_arrow::legacy::array::null"],[5676,"polars_arrow::bitmap::mutable"],[5677,"polars_arrow::array::utf8"],[5678,"polars_core::series::iterator"],[5679,"alloc::rc"],[5680,"polars_core::utils::supertype"],[5681,"polars_arrow::legacy::utils"],[5682,"polars_arrow::legacy::trusted_len::rev"],[5683,"smartstring::config"],[5684,"smartstring"],[5685,"polars_core::chunked_array::object::extension"],[5686,"polars_error::constants"],[5687,"polars_core::frame::horizontal"],[5688,"polars_arrow::legacy::prelude"],[5689,"polars_arrow::legacy::array"],[5690,"polars_arrow::legacy::array::utf8"],[5691,"polars_core::utils::any_value"],[5692,"polars_core::utils::schema"],[5693,"polars_core::utils::series"]],"if":"`````````````{{}b}``0```````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}{{Af{b}}}{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}e}CnBn{{Ch{{f{BhD`}}}}}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{{l{Db}}}}c}{{l{Db}}}{{Ch{{f{{Df{Dd}}}}}{{C`{{f{{Df{Dd}}}}}}}}}}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{Dh}}}}c}{{l{Dh}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{{l{c}}}}Djg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dl}}}}{{{f{{l{c}}}}g{f{Bh{Df{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{Dh}}}}c}{{l{Dh}}}{{Ch{Dn{f{Bf}}}{{C`{Dn}}}}Cd}}{{{f{{l{c}}}}E`}Ebn}{{{f{{l{c}}}}{f{{Df{Ad}}}}{f{Ed}}}{{Af{Eb}}}n}{{{f{{l{c}}}}}{{Af{Eb}}}n}`{{{f{{l{Dh}}}}}Ef}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Dj}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEh{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}{{{f{{l{c}}}}{f{Dj}}}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Dj}}Ej}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}El}{{{f{{l{c}}}}e}{{Af{Ad}}}ElAb}{{{f{{l{c}}}}}EnBn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{F`}}}}}}}Bn}{{{f{{l{c}}}}}{{f{{Fd{Fb}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Fd{Fb}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Bh{l{c}}}}}b{Bnn}}`{{{f{{l{c}}}}}{{Af{{f{Df}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}Ff}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}Ff}bBnBn}{{{f{{l{c}}}}}{{`{{Fh{}{{B`{{f{Df}}}}}}}}}n}{{}{{l{c}}}Bn}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}}bBn}{F`b}0{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Dj}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}Fjn}{{{f{{l{c}}}}e}FjnAb}01{{{f{Bh{l{c}}}}{f{{l{c}}}}}{{Af{b}}}n}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fj}}}{{Af{{l{c}}}}}{{Bn{}{{Fl{Bl}}{Fn{Bl}}}}}}{{{f{{l{c}}}}}{{An{F`}}}Bn}`{{{f{{l{Al}}}}{f{BhG`}}}Gb}{{{f{{l{c}}}}{f{BhG`}}}Gbn}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{c{{l{e}}}Gd{{Bn{}{{Gf{c}}}}}}{cc{}}0{{{f{Bf}}c}{{l{e}}}Gh{{Bn{}{{Gf{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{Gf{}}}}Bn}Gh}{{{f{Bf}}{Fd{Fb}}}{{l{c}}}Bn}{{{f{Bf}}{Fd{Fb}}Dj}{{l{c}}}Bn}{c{{l{e}}}{{Gh{}{{B`{An}}}}}n}{c{{l{Al}}}{{Gh{}{{B`{{An{d}}}}}}}}{c{{l{e}}}{{Gh{}{{B`{{Gl{Fd{An{Gj}}}}}}}}}n}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}23{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Gn{}{{B`{An}}}}}n}{{{f{Bf}}{f{Df}}}{{l{c}}}n}{{{f{Bf}}{f{{Df{An}}}}}{{l{c}}}n}{c{{l{e}}}{{H`{}{{B`{An}}}}}n}{{{f{Bf}}Fd}{{l{c}}}n}{{{f{Bf}}Fd{An{Gj}}}{{l{c}}}n}{{{f{Bf}}F`}{{l{c}}}n}0{{{f{{l{c}}}}F`}{{l{c}}}Bn}{{{f{Bf}}F`{f{Dj}}}Dl}{{{f{{l{c}}}}F`}AnBn}{{{f{{l{c}}}}F`}{{Af{Hb}}}n}{{{f{{l{c}}}}F`}Hbn}{{{f{{l{j}}}}F`}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{Hd}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HfBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}AnBn}0{{{f{{l{{Hh{c}}}}}}F`}{{An{{f{Hj}}}}}Hl}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}F`dF`}AjEh}{{{f{{l{c}}}}{f{{l{c}}}}}Fjn}{{{f{{l{c}}}}e}FjnAb}018{{{f{{l{c}}}}{An{F`}}}{{l{c}}}Bn}{{}F`}0{{F`Hn{An{I`}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Dj}}}}{{{f{{l{c}}}}}{{Id{{Ib{c}}}}}Bn}{ce{}{}}0{{{l{If}}{An{F`}}F`}{{Af{Ih}}}}{{{l{If}}{An{F`}}F`}Ih}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{IjIl{In{}{{B`{}}}}FhH`}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FjJ`}000{{{f{{l{c}}}}}FjBn}02{{{f{{l{c}}}}}JbBn}{{{f{{l{c}}}}}{{`{{Jd{}{{B`{An}}}}}}}Bn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{{l{c}}}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{Jf}}}}}}}}{{{f{{l{c}}}}}{{Jl{{Jh{Fb}}{Jj{{f{Fb}}}{{C`{{An{{f{Gj}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{F`}}}Bn}{{{f{{l{c}}}}}{{Jn{c}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{c}}}}}F`Bn}0{{{f{{l{c}}}}e}{{l{c}}}n{A`K`}}00{{{f{{l{c}}}}F`}{{l{c}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}Fjn}{{{f{{l{c}}}}e}FjnAb}01{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Kbn}{{{f{{l{Al}}}}}{{An{Kd}}}}{{{f{{l{c}}}}}{{An{Kd}}}n}{{{f{{l{c}}}}}{{An{Kd}}}Eh}{{{f{{l{c}}}}}KbEh}{{{f{Bh{l{c}}}}{Ib{c}}}bBn}`{{{f{{l{c}}}}}{{Kf{c}}}Bn}{{{f{{l{c}}}}}{{f{{Kj{{Kh{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{Kn{Kl}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Kj{{Kh{c}}}}}}}Bn}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Bn}<;{{{f{{l{c}}}}}{{An{Gl}}}n};{{{f{Bf}}{f{{Df{Dd}}}}F`F`}{{l{Al}}}}{{{f{Bf}}{f{Df}}}{{l{c}}}n}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}F`Bn}{{{f{{l{c}}}}}{{Af{F`}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{Cj}}}{{L`{{Df{{An{Hn}}}}}}}}{{{f{Bf}}c}{{l{Dh}}}{{L`{{Df{{An{D`}}}}}}}}{{{f{Bf}}{Lb{I`}}}{{l{Ld}}}}{{{f{Bf}}c}{{l{Cj}}}{{L`{{Df{Hn}}}}}}{{{f{Bf}}c}{{l{If}}}{{L`{{Df{Lf}}}}}}{{{f{Bf}}{Lb{Lh}}}{{l{Lj}}}}{{{f{Bf}}{Lb{Jf}}}{{l{Ll}}}}{{{f{Bf}}c}{{l{Cl}}}{{L`{{Df{{An{Kd}}}}}}}}{{{f{Bf}}c}{{l{Ll}}}{{L`{{Df{Jf}}}}}}{{{f{Bf}}c}{{l{Lj}}}{{L`{{Df{Lh}}}}}}{{{f{Bf}}c}{{l{Ld}}}{{L`{{Df{I`}}}}}}{{{f{Bf}}c}{{l{Ln}}}{{L`{{Df{M`}}}}}}{{{f{Bf}}c}{{l{Al}}}{{L`{{Df{d}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{L`{{Df{Kd}}}}}}{{{f{Bf}}c}{{l{If}}}{{L`{{Df{{An{Lf}}}}}}}}{{{f{Bf}}{Lb{M`}}}{{l{Ln}}}}{{{f{Bf}}c}{{l{Db}}}{{L`{{Df{{Fd{Dd}}}}}}}}{{{f{Bf}}c}{{l{Dh}}}{{L`{{Df{D`}}}}}}{{{f{Bf}}c}{{l{Lj}}}{{L`{{Df{{An{Lh}}}}}}}}{{{f{Bf}}c}{{l{Ld}}}{{L`{{Df{{An{I`}}}}}}}}{{{f{Bf}}c}{{l{Ln}}}{{L`{{Df{{An{M`}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{L`{{Df{{An{d}}}}}}}}{{{f{Bf}}c}{{l{Db}}}{{L`{{Df{{An{{Fd{Dd}}}}}}}}}}{{{f{Bf}}c}{{l{Ll}}}{{L`{{Df{{An{Jf}}}}}}}}{{{f{Bf}}}{{l{{Hh{c}}}}}Hl}{{{f{{l{c}}}}F`F`}{{l{c}}}n}{{{f{Bf}}{Fd{c}}}{{l{{Hh{c}}}}}Hl}{{{f{Bf}}{Fd{c}}Gj}{{l{{Hh{c}}}}}Hl}{{{f{Bf}}Fd}{{l{c}}}n}{{{Kj{Mb}}{Fd{Fb}}HdHd}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}J`}{{{f{{l{c}}}}{f{{l{c}}}}}Fjn}{{{f{{l{c}}}}e}FjnAb}10{{{f{{l{c}}}}}F`Bn}``{{{f{{l{Dh}}}}}{{`{{Md{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Md{}{{B`{{An{Ad}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Mf{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Dh}}}}}{{`{{Mf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{c}}}}}Kbn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}KdMh}{{Af{{An{Kd}}}}}Eh}{{{f{{l{c}}}}KdMh}{{Af{Kb}}}Eh}{{{f{Bf}}F`Kd}{{Af{{l{Al}}}}}}{{{f{Bf}}F`KdKd}{{Af{{l{c}}}}}n}{{{f{Bf}}F`}{{l{c}}}n}{{{f{Bf}}F`KdKd}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Mb}}}Bn}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Mj}{{Af{Ad}}}n}{{{f{{l{c}}}}F`e}{{Af{{l{c}}}}}J`{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Kddd{An{I`}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}F`dd{An{I`}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{Gh{}{{B`{Hd}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Gh{}{{B`{Hd}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Fj}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Dj}b}{{{f{Bh{l{c}}}}Hd}bBn}{{{f{Bh{l{c}}}}Jb}bBn}{{{f{{l{c}}}}Jf}{{l{c}}}n}{{{f{{l{c}}}}JfAn}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JfF`}{{l{c}}}Bn}0{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}E`}{{l{c}}}n}{{{f{{l{c}}}}Jf}{{Gl{{l{c}}{l{c}}}}}Bn}0{{{f{{l{c}}}}Dd}{{An{Kd}}}n}{{{f{{l{c}}}}Dd}KbEh}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{Hd}}}}{{{f{{l{c}}}}}Kbn}{{{f{{l{c}}}}{An{F`}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{L`{{Df{Hd}}}}Ml}}{{{f{{l{c}}}}{f{Eb}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Fl{Bl}}{Mn{Bl}}}}Bn}{{L`{{Df{Hd}}}}Ml}}{{{f{{l{c}}}}{f{Eb}}}{{l{c}}}{{Bn{}{{Fl{Bl}}{Mn{Bl}}}}Bn}}`{{{f{{l{c}}}}dN`}{{Fd{{Fd{Nb}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}J`}{{{f{{l{Dh}}}}F`}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Dj}b}{{{f{{l{c}}}}}{{Af{Nd}}}n}{{{f{{l{j}}}}}{{Af{Nf}}}}{{{f{c}}}e{}{}}{{{f{{l{Db}}}}}Cn}{{{f{{l{c}}}}}{{Fd{An}}}n}{{{f{{l{c}}}}}{{Nh{Fd{Fd{An}}}}}n}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}g}{{Nj{Cne}}}Bn{}{{Ch{{f{BhD`}}}{{C`{{Nj{be}}}}}}}}{{{f{{l{c}}}}i}{{Nj{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Nj{eg}}}}}}}Bn}{c{{Nj{e}}}{}{}}0{{{f{Bf}}g}{{Nj{{l{i}}e}}}Gd{}{{Gh{}{{B`{{Nj{ce}}}}}}}{{Bn{}{{Gf{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nl{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}F`}{}Bn}{{{f{{l{c}}}}Dd}{{An{Kd}}}n}{{{f{{l{c}}}}Dd}KbEh}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}Gd{{Bn{}{{Gf{c}}}}Bn}}{{{f{{l{e}}}}c}{{l{e}}}Gd{{Bn{}{{Gf{c}}}}Bn}}{{{f{{l{c}}}}{Fd{Fb}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Df{Nn}}}}e}c{}{{O`{{f{Eb}}}{{C`{c}}}}}}{{{f{{l{c}}}}Jb}{{l{c}}}Bn}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}2310{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}542310453267543201453210{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fj}}{f{{l{c}}}}}{{Af{{l{c}}}}}{{Bn{}{{Mn{Bl}}}}}}````{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}c}e{}{}{}}{{c{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}g{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}c}g{}{}{}}{{c{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}g{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhOj}}}b}{{{f{Bh{Ol{c}}}}}b{OnMl}}{{{f{BhA@`}}}b}{{{f{BhA@b}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{Bh{Ol{c}}}}{An{e}}}b{OnMl}{{L`{c}}}}{{{f{BhOj}}{An{c}}}b{}}{{{f{BhOj}}c}b{}}{{{f{Bh{Ol{c}}}}e}b{OnMl}{{L`{c}}}}{{{f{BhA@`}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Ol{c}}}}}{{Ol{c}}}{OnMl}}{{{f{A@`}}}A@`}{{{f{A@b}}}A@b}{{{f{{A@d{c}}}}}{{A@d{c}}}{nA@f}}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}000{F`{{f{c}}}{}}000{F`{{f{Bhc}}}{}}000{F`b}000{Oj{{l{c}}}Bn}{{{Ol{{Df{Dd}}}}}Ef}{{{Ol{Bf}}}Cn}{A@hCn}{A@jEf}{A@`Fj}`{{{A@d{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}A@l{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}A@l{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Df{c}}}}}A@l{}}{{{f{Bf}}{f{{Df{{An{c}}}}}}}A@l{}}{{}F`}000{ce{}{}}000`{{{f{Bf}}F`}{{Ol{c}}}{OnMl}}{{{f{Bf}}F`}A@`}{{{f{Bf}}F`}A@b}{{{f{Bf}}F`}{{A@d{c}}}n}{{{f{BhOj}}}b}{{{f{BhA@`}}}b}{{{f{BhA@b}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Nj{e}}}{}{}}0000000{{{f{c}}}Nl{}}000;;;;````````{{{f{BhA@n}}{f{Gd}}}b}{{{f{BhA@n}}}b}{{{f{BhAA`}}}b}{{{f{BhAAb}}c}b{{Bd{}{{B`{{An{d}}}}}}H`}}{{{f{Bh{AAd{c}}}}e}bn{{Bd{}{{B`{An}}}}H`}}{{{f{Bh{AAd{c}}}}e}bn{{Bd{}{{B`{}}}}H`}}{{{f{BhAAf}}}b}54{{{f{BhAAh}}}b}{{{f{BhAAj}}}b}{{{f{BhAAb}}}b}{{{f{BhAAl}}}b}{{{f{Bh{AAd{c}}}}}bn}{{{f{BhA@n}}{An{{f{Gd}}}}}b}{{{f{BhA@n}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhAAf}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{AAd{c}}}}{An{{f{Df}}}}}bn}{{{f{BhAAf}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@n}}{f{Ad}}}{{Af{b}}}}{{{f{BhAA`}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAh}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAj}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAb}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAl}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{AAd{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{AAd{c}}}}{f{Df}}}bn}{{{f{BhAAh}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}H`}}{{{f{BhAAj}}c}b{{Bd{}{{B`{{An{{f{{Df{Dd}}}}}}}}}}H`}}{{{f{BhAAh}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhAAj}}c}b{{Bd{}{{B`{{f{{Df{Dd}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}A@n}{{}AA`}{F`{{f{c}}}{}}000000{F`{{f{Bhc}}}{}}000000{F`b}000000{{{f{AAh}}}d}{{{f{AAj}}}d}{{{f{AAb}}}d}{{{f{{AAd{c}}}}}dn}{{{f{AAf}}}d}{{{f{AAh}}}{{f{Mb}}}}{{{f{AAj}}}{{f{Mb}}}}{{{f{AAb}}}{{f{Mb}}}}{{{f{{AAd{c}}}}}{{f{Mb}}}n}{{{f{AAf}}}{{f{Mb}}}}{{{f{BhA@n}}}Dl}{{{f{BhAA`}}}Dl}{{{f{BhAAl}}}Dl}{{{f{BhAAf}}}Dl}{cc{}}000000{{{f{Dj}}F`F`{f{Bf}}}{{Af{{AAn{AAf}}}}}}{{}F`}000000{{{f{BhAAh}}}Fb}{{{f{BhAAj}}}Fb}{{{f{BhAAb}}}Fb}{{{f{Bh{AAd{c}}}}}Fbn}{{{f{BhAAf}}}Fb}{ce{}{}}000000{{{f{Bf}}F`{An{Dj}}}A@n}{{{f{Bf}}F`{An{Dj}}}AA`}{{{f{Bf}}F`F`}AAh}{{{f{Bf}}F`F`}AAj}{{{f{Bf}}F`F`}AAb}{{{f{Bf}}F`}AAl}{{{f{Bf}}F`F`Dj}{{AAd{c}}}n}{{{f{Bf}}F`F`DjDj}{{AAd{c}}}n}{c{{Nj{e}}}{}{}}0000000000000{{{f{c}}}Nl{}}000000:::::::````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Ej}}}Ej}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}Ej}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{Ej}}{f{Ej}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Ej}}{f{BhG`}}}Gb}{cc{}}{{{f{Ej}}{f{Bhc}}}bAB`}{{}F`}{ce{}{}}{{{f{Ej}}}d}{{{f{c}}}e{}{}}{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}4``{{ABb{f{Bf}}}{{l{c}}}Bn}{{ABd{f{{l{c}}}}}{{l{c}}}Bn}10{{ABd{f{Bf}}Dj}{{l{c}}}Bn}0{{ABb{f{Bf}}}{{Nj{{l{c}}e}}}Bn{}}{{ABd{f{{l{c}}}}}{{Nj{{l{c}}e}}}Bn{}}10{{ABd{f{Bf}}Dj}{{Nj{{l{c}}e}}}Bn{}}0`{ABfABf}``{{ABh{f{Bf}}Dj}e{}{{ABj{c}}}}{{e{f{Bf}}Dj}ABj{}{{Gn{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{F`b}0{cc{}}0{{}F`}0{ce{}{}}000{{{f{ABl}}}ABn}{{{f{BhABn}}}{{An{c}}}{}}{{{f{Bh{AC`{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{AC`{c}}}}}{{An{e}}}Fh{}}`{{{f{ABn}}}{{Gl{F`{An{F`}}}}}}{{{f{{AC`{c}}}}}{{Gl{F`{An{F`}}}}}Bd}{c{{Nj{e}}}{}{}}000{{{f{c}}}Nl{}}088`````````````````````````{{{f{c}}h}b{}}0000{{}Ff}{{}Hf}{{FfFf}Ff}{{HfHf}Hf}{{{f{BhFf}}Ff}b}{{{f{BhHf}}Hf}b}3210{{{f{Ff}}}M`}0{{{f{Hf}}}Dd}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000{{{f{{Kh{c}}}}}{{Kh{c}}}Bn}{{{f{{Ib{c}}}}}{{Ib{c}}}Bn}{{{f{ACb}}}ACb}{{{f{Ff}}}Ff}{{{f{Hf}}}Hf}{{{f{c}}{f{Bhe}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{BhACd}}}b}0{FfFf}{HfHf}{{{f{Ff}}Ff}d}{{{f{Hf}}Hf}d}{{}{{Kh{c}}}Bn}{{}{{Ib{c}}}Bn}{{}Ff}{{}Hf}{F`{{f{c}}}{}}{{{f{{Kf{c}}}}}{{f{e}}}Bn{}}111111{F`{{f{Bhc}}}{}}000000{{FfFf}Ff}{{HfHf}Hf}{{}d}{{{f{Kl}}}{{An{Hd}}}}{{{Ib{c}}Hd}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}}{{An{Hd}}}Bn}{{{Ib{c}}{An{Hd}}}{{Ib{c}}}Bn}{F`b}000000<;5{{{f{Ff}}{f{Ff}}}d}{{{f{Hf}}{f{Hf}}}d}7{{{f{BhFf}}c}b{{Gh{}{{B`{Ff}}}}}}{{{f{BhHf}}c}b{{Gh{}{{B`{Hf}}}}}}{{{Ib{c}}d}{{Ib{c}}}Bn}{{{Ib{c}}{An{d}}}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}Ff}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}Ff}{{Ib{e}}}BnBn}{{{Ib{c}}Hf}{{Ib{c}}}Bn}{{{Ib{c}}{An{Hf}}}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}{f{BhG`}}}GbBn}{{{f{ACb}}{f{BhG`}}}Gb}{{{f{Ff}}{f{BhG`}}}Gb}0000{{{f{Hf}}{f{BhG`}}}Gb}0000{cc{}}000000{M`{{An{Ff}}}}{Dd{{An{Hf}}}}{M`Ff}0{DdHf}010{cFf{{Gh{}{{B`{Ff}}}}}}{cHf{{Gh{}{{B`{Hf}}}}}}{{{f{Bf}}}{{An{Ff}}}}{{{f{Bf}}}{{An{Hf}}}}{{{f{{Ib{c}}}}}{{An{Hd}}}Bn}{{{f{{Ib{c}}}}}dBn}{{{f{Hf}}}d}{{{f{Kl}}}Hf}{{{f{{Ib{c}}}}}HfBn}0{{{f{{Ib{c}}}}}{{An{f}}}Bn}0{{{f{Bh{Kh{c}}}}}{{f{Bh{Ib{c}}}}}Bn}{{{f{Hf}}}Jb}{{}F`}000000{{{f{BhFf}}Ff}b}{{{f{BhHf}}Hf}b}{{FfFf}Ff}{{HfHf}Hf}{{{f{Ff}}Ff}d}{{{f{Hf}}Hf}d}{ce{}{}}000000{Ffc{}}{Hfc{}}{{{f{Ff}}}d}{{{f{Hf}}}d}{{{f{{Ib{c}}}}}dBn}21{{{f{{Ib{c}}}}}JbBn}111{{{f{Ff}}}{{ACf{Ff}}}}{{{f{Hf}}}{{ACf{Hf}}}}{{{f{Ff}}}{{ACh{Ff}}}}{{{f{Hf}}}{{ACh{Hf}}}}{{}d}{{}{{f{{ACl{ACj}}}}}}{{{f{Kl}}}{{An{Kb}}}}{{{f{{Ib{c}}}}}{{An{Kb}}}Bn}{{{Ib{c}}}{{Ib{c}}}Bn}{{{Ib{c}}An}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}{Ib{c}}}{{ACn{c}}}Bn}4321{{{Ib{c}}}{{Kh{c}}}Bn}{FfFf}{HfHf}{{{f{{Kh{c}}}}}{{Kn{{Ib{c}}}}}Bn}{{{f{BhFf}}Ff}b}{{{f{BhHf}}Hf}b}{{{f{BhFf}}Ffd}b}{{{f{BhHf}}Hfd}b}{{{f{Bh{Ib{c}}}}{An{Hd}}}bBn}{{{f{Bh{Ib{c}}}}d}bBn}{{{f{BhHf}}d}b}{{{f{Bh{Ib{c}}}}Hf}bBn}{{{f{Bh{Ib{c}}}}An}bBn}033{{{f{Bh{Ib{c}}}}Jb}bBn}{{{f{BhHf}}Jb}b}{{{Ib{c}}Jb}{{Ib{c}}}Bn}{{{Ib{c}}{An{Jb}}}{{Ib{c}}}Bn}{{FfFf}Ff}{{HfHf}Hf}>=10{{{Kh{c}}}{{Ib{c}}}Bn}{{{f{c}}}e{}{}}0000{{{f{BhFf}}Ff}b}{{{f{BhHf}}Hf}b}{c{{Nj{e}}}{}{}}0000000000000{{{f{{Kh{c}}}}}{{An{{Kn{{Ib{c}}}}}}}Bn}{{{f{{Kh{c}}}}}{{An{{Id{{Ib{c}}}}}}}Bn}{{{f{c}}}Nl{}}00000098{{{f{{Kh{c}}}}}{{f{{AD`{Kl}}}}}Bn}{ce{}{}}000000{ACdACd}0{{{f{{Kh{c}}}}}{{Id{{Ib{c}}}}}Bn}````{{{f{c}}h}b{}}{{{f{{ADb{c}}}}F`}{{Gl{{ADb{c}}{ADb{c}}}}}Hl}{e{{ADb{c}}}Hl{{Gh{}{{B`{{f{c}}}}}}}}{e{{ADb{c}}}Hl{{Gh{}{{B`{{An{{f{c}}}}}}}}}}{{ADde}g{}{{Gh{}{{B`{c}}}}}{}}0{{{f{Hj}}}{{f{ADf}}}}{{{f{{ADb{c}}}}}{{f{ADf}}}Hl}{{{f{Bh{ADb{c}}}}}{{f{BhADf}}}Hl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{ADb{c}}}}F`}dHl}{{{f{{ADb{c}}}}}{{ADb{c}}}{HlA@f}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{{ADb{c}}}}}{{f{ADd}}}Hl}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{{f{Hj}}}}{f{{f{Hj}}}}}d}{{{f{Hj}}{f{Hj}}}d}{{{f{{ADb{c}}}}{f{BhG`}}}Gb{HlADh}}{cc{}}{{F`ADd}{{ADb{c}}}Hl}{{{f{{ADb{c}}}}F`}{{An{{f{c}}}}}Hl}{{}ADd}{{{f{Gj}}{f{{ADb{c}}}}{f{{ADb{c}}}}}{{ADb{c}}}Hl}{{ADd{f{Gj}}cc}{{ADb{e}}}{}Hl}{{{f{Gj}}{f{{ADb{c}}}}e}{{ADb{c}}}Hl{}}{{{f{Gj}}c{f{{ADb{e}}}}}{{ADb{e}}}{}Hl}{{}F`}{ce{}{}}{{{f{{ADb{c}}}}}eHl{}}{{{f{{ADb{c}}}}F`}dHl}{{{f{c}}F`}d{}}1{{{f{{ADb{c}}}}}{{ADl{egADj}}}Hl{}{}}{{{f{{ADb{c}}}}}{{ADl{{f{c}}{ADn{c}}ADj}}}Hl}{{{f{{ADb{c}}}}}F`Hl}0`{db}{{{f{Bh{ADb{c}}}}{An{Gj}}}bHl}{{{f{Bh{ADb{c}}}}F`F`}bHl}{{{f{c}}F`F`}e{}{}}01{{{f{{ADb{c}}}}F`}{{Gl{{AAn{Gd}}{AAn{Gd}}}}}Hl}0{{{f{Hj}}}{{AAn{Hj}}}}{{{f{{ADb{c}}}}}{{AAn{Gd}}}Hl}{{{f{c}}}e{}{}}{g{{Nj{{ADb{c}}e}}}Hl{}{{Gh{}{{B`{{Nj{{An{{f{c}}}}e}}}}}}}}{g{{Nj{{ADb{c}}e}}}Hl{}{{Gh{}{{B`{{Nj{{f{c}}e}}}}}}}}{{ADdg}{{Nj{ie}}}{}{}{{Gh{}{{B`{{Nj{ce}}}}}}}{}}0{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{Hj}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{ADb{c}}}}}{{An{{f{Gj}}}}}Hl}{{{f{{ADb{c}}}}F`}{{f{c}}}Hl}{{{f{{ADb{c}}}}F`}eHl{}}1{{{f{{ADb{c}}}}}{{f{{Kj{{Fd{c}}}}}}}Hl}{{{f{{ADb{c}}}}}{{ADn{c}}}Hl}{{{f{{ADb{c}}}}}eHl{}}{ce{}{}}{{{f{{ADb{c}}}}{An{Gj}}}{{AAn{Gd}}}Hl}{{{ADb{c}}{An{Gj}}}{{ADb{c}}}Hl}0`{{{f{Bh{AE`{c}}}}}bHl}0{{{f{Bh{AE`{c}}}}{An{c}}}bHl}{{{f{Bh{AE`{c}}}}c}bHl}{{{f{Bh{AE`{c}}}}{f{ADf}}}bHl}{{{f{Bh{AE`{c}}}}{f{ADf}}}{{Af{b}}}Hl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{AE`{c}}}Hl}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{AE`{c}}}{{AEb{c}}}Hl}{cc{}}{{}F`}{ce{}{}}{{{f{Bf}}F`}{{AE`{c}}}Hl}{{{f{Bh{AE`{c}}}}}AdHl}{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}4````{{{f{BhAEd}}}b}{{{f{BhAEd}}{An{{f{ADf}}}}}b}{{{f{BhAEd}}{f{ADf}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{AEf}}{f{BhG`}}}Gb}<{{{f{Bf}}F`}{{AAn{AEd}}}}{{}AEh}{{}ADd}>={{}d}`{{AEjAEhADd}b}{{{f{BhAEd}}}Ad}==<{ce{}{}}``````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{AEn{}{{AEl{c}}}}}}g}{{AEn{}{{AEl{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{AF`}}{f{Cb}}}AF`}{{{f{AF`}}{f{Cb}}}{{l{c}}}Bn}{{{f{{AEn{}{{AEl{c}}}}}}i{f{Bh{Df{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{AEn{}{{AEl{c}}}}}}g}{{AEn{}{{AEl{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AFb}}E`}Eb}{{{f{AFb}}{f{{Df{Ad}}}}{f{Ed}}}{{Af{Eb}}}}{{{f{AFd}}}{{Af{Eb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AFf}}{f{Dj}}}{{Af{Ad}}}}0{{{f{AFf}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{AFh}}}AFh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{AFh}}{f{AFh}}}d}{{{f{{AFj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFl}}}{{Af{Ad}}}}{{{f{AFl}}}{{Af{{Gl{Ad{AFn{Jf}}}}}}}}`{{{f{AG`}}c}{{Af{AG`}}}{}}{{{f{AGb}}{f{Fj}}}{{Af{{l{c}}}}}Bn}`{{{f{AFh}}{f{BhG`}}}Gb}{cc{}}`{{{f{Bf}}cF`}AGd{}}{{{f{Bf}}F`}AGf}`{{{f{AGh}}F`}{{Af{Hb}}}}{{{f{AGh}}F`}Hb}::{{{f{AFh}}{f{Bhc}}}bAB`}{{}F`}{ce{}{}}{{{f{AGj}}}{{Af{Fj}}}}{{{f{AGl}}}{{Af{Fj}}}}??{{{f{AGn}}}{{An{c}}}{}}{{{f{AGn}}}{{An{Kd}}}}{{{f{AH`}}}{{An{c}}}{}}2{{{f{AGn}}}{{An{{Gl{cc}}}}}{}}{{{f{AFd}}}{{Af{F`}}}}{{{f{AHb}}F`F`}{{l{c}}}Bn}{{{f{{AFj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFl}}}{{Af{{AFn{Jf}}}}}}{{{f{AH`}}KdMh}{{Af{{An{c}}}}}{}}{{{f{AHd}}}AHd}{{{f{AHf}}{f{Cb}}Mj}{{Af{Ad}}}}{{{f{AHh}}c{An{e}}}{{Af{AHh}}}{{Gh{}{{B`{Hd}}}}}{}}{{{f{AHh}}ci}{{Af{AHh}}}{{Gh{}{{B`{Hd}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AHh}}{f{Fj}}{An{c}}}{{Af{AHh}}}{}}{{{f{AHj}}Jf}{{l{c}}}Bn}{{{f{AHl}}Jfc}{{l{e}}}{}Bn}`{{{f{AFb}}d}{{l{c}}}Bn}{{{f{AFb}}E`}{{l{c}}}Bn}{{{f{AHn}}Dd}{{An{Kd}}}}{{{f{AGn}}}{{An{c}}}{}}{{{f{AI`}}{f{c}}}{{Af{AI`}}}Ml}{{{f{AIb}}{f{c}}}AIbMl}{{{f{AId}}}{{Fd{{f{{Df{Dd}}}}}}}}{{{f{c}}}e{}{}}{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{AFd}}}{{Af{AFd}}}}8{ce{}{}}`{{{f{AIf}}{f{Fj}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnGd{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AIh{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}CnBnBn{{Ch{{f{BhD`}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{GdAIj}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnGd{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gf{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnGd{{Ch{}{{C`{g}}}}}{{Bn{}{{Gf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{AAn{Gd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{AAn{Gd}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Nj{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Nj{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AIl{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Nj{{l{m}}i}}}BnBnGdAIn{{Ch{ff}{{C`{{Nj{gi}}}}}}}{{Bn{}{{Gf{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Nj{{l{m}}i}}}BnBnGdAIn{{Ch{ff}{{C`{{Nj{gi}}}}}}}{{Bn{}{{Gf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Nj{{l{c}}g}}}BnBnAIn{{Ch{ff}{{C`{{Nj{{AAn{Gd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Nj{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Nj{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Nj{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Nj{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Nj{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Nj{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Nj{{l{k}}g}}}Bn{GdAIj}AIn{{Ch{f}{{C`{{Nj{eg}}}}}}}{{Bn{}{{Gf{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AJ`{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAJ`Bn}{{{f{{l{c}}}}g}{{l{i}}}BnGd{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gf{e}}}}}}{{{l{c}}g}{{l{i}}}BnGd{{Ch{}{{C`{e}}}}}{{Bn{}{{Gf{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{GdAIj}{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gf{e}}}}}}0{{{f{{l{c}}}}}F`n}0{{JbJb}Jb}{{{f{Eb}}Hd}{{Af{b}}}}{{{f{{AJb{Hd}}}}Hd}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAJdd}{{Fd{Hd}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AJd}}}AJd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}AJd}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{AJd}}{f{AJd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJd}}{f{BhG`}}}Gb}{cc{}}{{{f{AJd}}{f{Bhc}}}bAB`}{{}F`}{ce{}{}}{{{f{{Df{f}}}}cHde}{{Fd{Hd}}}{{Bd{}{{B`{An}}}}}{{Cb{fF`f}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}4`{{F`{f{Bh{Fd{d}}}}}b}```{{{f{AJf}}F`F`}AJf}0{{F`{f{{Df{Ad}}}}{f{BhEd}}}{{Af{{AJh{Eb}}}}}}{{{f{{Df{Ad}}}}{f{{Df{d}}}}{f{{Df{d}}}}}{{Af{AJj}}}}{{{f{{Df{Ad}}}}{f{{Df{d}}}}{f{{Df{d}}}}}{{Af{{AJl{Jf}}}}}}{{{f{Bf}}{f{{Df{Ad}}}}{f{{Df{d}}}}{f{{Df{d}}}}}{{Af{AJn}}}}{{{f{Bf}}{f{{Df{Ad}}}}}{{Af{AJn}}}}{{{f{Ad}}}{{Af{Fb}}}}{{{f{{Df{Ad}}}}}{{Af{AJj}}}}{{{f{{Df{Ad}}}}}{{Af{AJn}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{E`}}}E`}{{{f{Ed}}}Ed}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}E`}{{}Ed}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0``{F`b}0{{{f{E`}}{f{E`}}}d}{{{f{Ed}}{f{Ed}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{E`}}{f{BhG`}}}Gb}{{{f{Ed}}{f{BhG`}}}Gb}{cc{}}{{{f{Ed}}}E`}{{{f{E`}}}Ed}2{{{f{E`}}{f{Bhc}}}bAB`}{{{f{Ed}}{f{Bhc}}}bAB`}{{}F`}0{ce{}{}}0````{{}E`}{{}Ed}``{{{f{AJf}}F`F`}AJf}0{{{f{c}}}e{}{}}0{c{{Nj{e}}}{}{}}000{{{f{c}}}Nl{}}066{{E`d}E`}{{Edd}Ed}1010{{Edc}Ed{{Gh{}{{B`{d}}}}}}210{E`E`}{EdEd}`{AK`Jf}00{{}d}>>0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dl}}}d}{{{f{Ih}}{f{Ih}}}c{}}{{{f{Fj}}{f{Fj}}}c{}}{{FjFj}c{}}{{{f{Cn}}{f{Cn}}}c{}}{{CnCn}c{}}{{{f{Cn}}{f{Bf}}}c{}}{{{f{Ef}}{f{Ef}}}c{}}{{EfEf}c{}}{{{f{Ef}}{f{{Df{Dd}}}}}c{}}{{{f{Hb}}{f{Hb}}}Hb}{{{f{{l{c}}}}{f{Ad}}}{{Nj{AdAKb}}}{}}000000{{{f{Cn}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ef}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fj}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dl}}{f{Aj}}}Ad}{{{f{Fj}}{f{Aj}}}Ad}{{{f{Cn}}{f{Aj}}}Ad}{{{f{Ef}}{f{Aj}}}Ad}{{{f{{AEb{c}}}}{f{Aj}}}AdHl}{{{f{Fj}}}d}{{{f{Fj}}}{{An{d}}}}{{{f{Dl}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dl}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dl}}c}Dl{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Fj}}c}Fj{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Cn}}c}Cn{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AKd{Bf}}}}}}}}Cd}}{{{f{Ef}}c}Ef{{Cb{{An{{f{{Df{Dd}}}}}}}{{C`{{An{{AKd{{Df{Dd}}}}}}}}}}Cd}}{{{f{{AEb{c}}}}e}{{AEb{c}}}Hl{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dl}}c}Dl{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dl}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AKf}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AKh}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Fj}}{f{Cb}}}Fj}{{{f{Cn}}{f{Cb}}}Cn}{{{f{Ef}}{f{Cb}}}Ef}{{{f{Fj}}{f{Cb}}}{{l{c}}}Bn}{{{f{Cn}}{f{Cb}}}{{l{c}}}Bn}{{{f{Ef}}{f{Cb}}}{{l{c}}}Bn}{{{f{Cn}}c}Cn{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Ef}}c}Ef{{Ch{{f{{Df{Dd}}}}}{{C`{{f{{Df{Dd}}}}}}}}}}{{{f{Dl}}{f{Cb}}}{{Af{Dl}}}}{{{f{Dl}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Fj}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Cn}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Ef}}e{f{Bh{Df{c}}}}}b{}{{Cb{{An{{f{{Df{Dd}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{AEb{c}}}}g{f{Bh{Df{e}}}}}bHl{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dl}}c}Dl{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Fj}}c}Fj{{Cb{d}{{C`{d}}}}Cd}}{{{f{Cn}}c}Cn{{Cb{{f{Bf}}}{{C`{{AKd{Bf}}}}}}Cd}}{{{f{Ef}}c}Ef{{Cb{{f{{Df{Dd}}}}}{{C`{{AKd{{Df{Dd}}}}}}}}Cd}}{{{f{{AEb{c}}}}e}{{AEb{c}}}Hl{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Cn}}c}Cn{{Ch{Dn{f{Bf}}}{{C`{Dn}}}}Cd}}{{{f{Fj}}E`}Eb}{{{f{Cn}}E`}Eb}{{{f{Ef}}E`}Eb}{{{f{AJn}}E`}Eb}{{{f{Fj}}{f{{Df{Ad}}}}{f{Ed}}}{{Af{Eb}}}}{{{f{Cn}}{f{{Df{Ad}}}}{f{Ed}}}{{Af{Eb}}}}{{{f{Ef}}{f{{Df{Ad}}}}{f{Ed}}}{{Af{Eb}}}}{{{f{AJn}}{f{{Df{Ad}}}}{f{Ed}}}{{Af{Eb}}}}{{{f{Fj}}}{{Af{Eb}}}}{{{f{Cn}}}{{Af{Eb}}}}{{{f{Ef}}}{{Af{Eb}}}}{{{f{{AEb{c}}}}}{{Af{Eb}}}Hl}{eAKj{}{{Gh{}{{B`{c}}}}}}0{{ADde}AKl{}{{Gh{}{{B`{c}}}}}}0{{{f{Cn}}}Ef}{{{f{Hb}}}Hb}{{{f{Dj}}}{{f{Dj}}}}{{{f{Mb}}}{{f{Dj}}}}{{{f{AKn}}}{{f{Dj}}}}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{An{{f{{Df{c}}}}}}}A@f{ALf{ALh{c}}}{{Fh{}{{B`{c}}}}H`IjIl}}{{{f{Dl}}{f{{l{c}}}}{f{{l{e}}}}g}DlBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{Fj}}{f{Fj}}}c{}}{{FjFj}c{}}0110{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Dj{{AAn{Dj}}}}{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{ALn}}{f{Dj}}}{{Af{Ad}}}}0{{{f{Hb}}{f{Dj}}}Hb}{{{f{Dj}}Dj}Dj}{{{f{Dl}}{f{Dj}}}{{Af{Ad}}}}{{{f{Fj}}{f{Dj}}}{{Af{Ad}}}}{{{f{Cn}}{f{Dj}}}{{Af{Ad}}}}{{{f{Ef}}{f{Dj}}}{{Af{Ad}}}}{{{f{AJn}}{f{Dj}}}{{Af{Ad}}}}{{{f{ALn}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Ih}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Dl}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Fj}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Cn}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Ef}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{AJn}}{f{Dj}}Ej}{{Af{Ad}}}}`{{{f{{l{c}}}}{f{Ad}}}{{Nj{AdAKb}}}{}}0000{{{f{AKf}}{f{Ad}}}{{Af{Ad}}}}{{{f{AKh}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AM`{ce}}}}}{{AM`{ce}}}BnBn}{{{f{AMb}}}AMb}{{{f{Hb}}}Hb}{{{f{AMd}}}AMd}{{{f{Dj}}}Dj}{{{f{AMf}}}AMf}{{{f{Mb}}}Mb}{{{f{AMh}}}AMh}{{{f{AMj}}}AMj}{{{f{AMl}}}AMl}{{{f{Ln}}}Ln}{{{f{Ld}}}Ld}{{{f{AMn}}}AMn}{{{f{AN`}}}AN`}{{{f{Lj}}}Lj}{{{f{Ll}}}Ll}{{{f{Cj}}}Cj}{{{f{Cl}}}Cl}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{Dh}}}Dh}{{{f{Db}}}Db}{{{f{ANf}}}ANf}{{{f{Al}}}Al}{{{f{ANh}}}ANh}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{ANn}}}ANn}{{{f{ADd}}}ADd}{{{f{AO`}}}AO`}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{c}}}b{}}00000000000000000000000000000000000000000000000000000{{{f{BhMb}}Dj}b}{AObe{}{{AKj{c}}AIj}}0{{AObADd}e{}{{AKl{c}}AIj}}0{{{f{Dj}}}d}00{AOdDj}{{{f{Mb}}}{{f{Dj}}}}{{}Hb}{{}AMd}{{}Dj}{{}ADd}{F`{{f{c}}}{}}{{{f{{AM`{ce}}}}}{{f{g}}}BnBn{}}1111111111111111111111111111111111{{{f{Bh{AM`{ce}}}}}{{f{Bhg}}}BnBn{}}{F`{{f{Bhc}}}{}}0000000000000000000000000000000000{{{f{Ih}}{f{Ih}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Nj{AdAKb}}}{}}000000{F`b}0000000000000000000000000000000000{{{f{ALn}}}{{f{Dj}}}}{{{f{Ih}}}{{f{Dj}}}}{{{f{Hb}}}Dj}`{{{f{Hb}}{f{Hb}}}d}{{{f{AMd}}{f{AMd}}}d}{{{f{Dj}}{f{Dj}}}d}{{{f{Dj}}{f{ADd}}}d}{{{f{AMf}}{f{AMf}}}d}{{{f{Mb}}{f{Mb}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{ADd}}{f{ADd}}}d}{{{f{AO`}}{f{AO`}}}d}{{{f{Hb}}{f{Hb}}d}d}{{{f{Dl}}{f{Dl}}}Fj}{{{f{Fj}}{f{Fj}}}Fj}{{{f{Cn}}{f{Cn}}}Fj}{{{f{Cn}}{f{Bf}}}Fj}{{{f{Ef}}{f{Ef}}}Fj}{{{f{Ef}}{f{{Df{Dd}}}}}Fj}542301{{{f{c}}{f{e}}}d{}{}}00000000000000000000000{{{f{Dl}}}{{Af{{Gl{Ad{AFn{Jf}}}}}}}}{{{f{{AM`{ce}}}}}MbBnBn}{{{f{Fj}}d}{{Af{Fj}}}}{{{f{Ef}}{f{{Df{Dd}}}}}{{Af{Ef}}}}{{{f{Cn}}{f{Fj}}}{{Af{{l{Dh}}}}}}{{{f{Ef}}{f{Fj}}}{{Af{{l{Db}}}}}}{{{f{{AEb{c}}}}{f{Fj}}}{{Af{{l{{Hh{c}}}}}}}Hl}{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{{{f{Dl}}{f{BhG`}}}Gb}{{{f{Cn}}{f{BhG`}}}Gb}{{{f{Ef}}{f{BhG`}}}Gb}{{{f{{AEb{c}}}}{f{BhG`}}}GbHl}{{{f{AMb}}{f{BhG`}}}Gb}{{{f{Hb}}{f{BhG`}}}Gb}0{{{f{AMd}}{f{BhG`}}}Gb}{{{f{Dj}}{f{BhG`}}}Gb}0{{{f{AMf}}{f{BhG`}}}Gb}{{{f{Mb}}{f{BhG`}}}Gb}{{{f{AMh}}{f{BhG`}}}Gb}0{{{f{ADd}}{f{BhG`}}}{{Nj{bAOh}}}}{{{f{AO`}}{f{BhG`}}}{{Nj{bAOh}}}}{{{f{Dl}}c}b{{Ch{{An{Cf}}}}}}{cc{}}000000{cHbAOj}{{{f{Bf}}}Hb}{{{An{c}}}Hb{{AOl{Hb}}}}3{dHb}{{{f{{Df{Dd}}}}}Hb}55{{{f{ADd}}}Dj}{HbDj}{{{f{Hb}}}Dj}8{{{f{AOn}}}Mb}{{{f{Hb}}}Mb}::{{{f{AO`}}}AMh};;;;;;;;;;;;;;;;;;;;{B@`ADd}<{B@bADd}={{{f{ADd}}d}Dj}{cDl{{Gh{}{{B`{{An{Ad}}}}}}}}{eDl{{B@d{Ad}}}{{Gh{}{{B`{c}}}}}}{cDl{{Gh{}{{B`{{An{{AAn{Gd}}}}}}}}}}{cFj{{Gh{}{{B`{d}}}}}}{eCn{{L`{Bf}}}{{Gh{}{{B`{{An{c}}}}}}}}{eCn{{`{Bf}}}{{Gh{}{{B`{c}}}}}}{eEf{{`{{Df{Dd}}}}}{{Gh{}{{B`{c}}}}}}{eEf{{L`{{Df{Dd}}}}}{{Gh{}{{B`{{An{c}}}}}}}}{e{{AEb{c}}}Hl{{Gh{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Cn{{L`{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Ef{{L`{{Df{Dd}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{AEb{c}}}Hl{{Bd{}{{B`{{An{c}}}}}}}};<97856{eAJn{{`{{Df{Dd}}}}}{{Gh{}{{B`{c}}}}}}{eAJn{{L`{{Df{Dd}}}}}{{Gh{}{{B`{{An{c}}}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Cn{{L`{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Ef{{L`{{Df{Dd}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{AEb{c}}}Hl{{Bd{}{{B`{c}}}}}}{{B@fDj}Mb}{cDl{{Gn{}{{B`{{An{Ad}}}}}}}}{cFj{{Gn{}{{B`{{An{d}}}}}}}}{cFj{{Gn{}{{B`{d}}}}}}{eCn{{`{Bf}}IjIlB@h}{{Gn{}{{B`{c}}}}}}{eCn{{L`{Bf}}IjIl}{{Gn{}{{B`{{An{c}}}}}}}}{eEf{{`{{Df{Dd}}}}IjIlB@h}{{Gn{}{{B`{c}}}}}}{eEf{{L`{{Df{Dd}}}}IjIl}{{Gn{}{{B`{{An{c}}}}}}}}{{c{f{Bf}}Dj}Dl{{Gn{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Df{d}}}}}Fj}{{{f{Bf}}{f{{Df{c}}}}}Cn{{L`{Bf}}}}{{{f{Bf}}{f{{Df{c}}}}}Ef{{L`{{Df{Dd}}}}}}{{{f{Bf}}{f{{Df{c}}}}}{{AEb{c}}}Hl}{{{f{Bf}}{f{{Df{{An{d}}}}}}}Fj}{{{f{Bf}}{f{{Df{{An{c}}}}}}}Cn{{L`{Bf}}}}{{{f{Bf}}{f{{Df{{An{c}}}}}}}Ef{{L`{{Df{Dd}}}}}}{{{f{Bf}}{f{{Df{{An{c}}}}}}}{{AEb{c}}}Hl}{cFj{{H`{}{{B`{{An{d}}}}}}}}{{{Fd{c}}ADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fh{}{{B`{c}}}}H`IjIl}}{{{Fd{c}}ADd}{{AIj{}{{AL`{e}}{ALb{c}}{ALd{g}}}}}{ALf{ALh{e}}}A@f{{Fh{}{{B`{e}}}}H`IjIl}}{{F`cADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fh{}{{B`{c}}}}H`IjIl}}{{{f{Bf}}{f{Ad}}F`}Dl}{{{f{Bf}}dF`}Fj}{{{f{Bf}}{f{Bf}}F`}Cn}{{{f{Bf}}{f{{Df{Dd}}}}F`}Ef}{{{f{Bf}}{f{{Df{Dd}}}}F`}AJn}{{{f{Bf}}cF`}{{AEb{c}}}Hl}{{F`ADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fh{}{{B`{c}}}}H`IjIl}}{{{f{Bf}}F`}Dl}{{{f{Bf}}F`}Fj}{{{f{Bf}}F`}Cn}{{{f{Bf}}F`}Ef}{{{f{Bf}}F`}AJn}{{{f{Bf}}F`}{{AEb{c}}}Hl}{{{f{Bf}}F`{f{Dj}}}Dl}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}F`}{{An{c}}}A@f{ALf{ALh{c}}}{{Fh{}{{B`{c}}}}H`IjIl}}{{{f{Ih}}F`}{{Af{Hb}}}}{{{f{ALn}}F`}{{Af{Hb}}}}0{{{f{Dl}}F`}{{Af{Hb}}}}{{{f{Fj}}F`}{{Af{Hb}}}}{{{f{Cn}}F`}{{Af{Hb}}}}{{{f{Ef}}F`}{{Af{Hb}}}}{{{f{AJn}}F`}{{Af{Hb}}}}{{{f{{AEb{c}}}}F`}{{Af{Hb}}}Hl}{{{f{Ih}}F`}Hb}{{{f{ALn}}F`}Hb}0{{{f{Dl}}F`}Hb}{{{f{Fj}}F`}Hb}{{{f{Cn}}F`}Hb}{{{f{Ef}}F`}Hb}{{{f{AJn}}F`}Hb}{{{f{{AEb{c}}}}F`}HbHl}{{{f{Dl}}F`}{{An{Ad}}}}{{}Dj}00000000000000000000000{{{f{Dl}}}Ad}{{{f{{AEb{c}}}}F`}{{An{{f{Hj}}}}}Hl}0{{{f{Hb}}}{{An{{f{Bf}}}}}}{{{f{B@j}}F`}Hb}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}F`}{{An{c}}}A@f{ALf{ALh{c}}}{{Fh{}{{B`{c}}}}H`IjIl}}{{{f{Dl}}}F`}{{{f{Cn}}}F`}{{{f{AJn}}}F`}{{{f{Dl}}dd}{{Af{Aj}}}}{{{f{Fj}}dd}{{Af{Aj}}}}{{{f{Cn}}dd}{{Af{Aj}}}}{{{f{Ef}}dd}{{Af{Aj}}}}{{{f{AJn}}dd}{{Af{Aj}}}}{{{f{{AEb{c}}}}dd}{{Af{Aj}}}Hl}{{{f{Dl}}{f{Dl}}}Fj}{{{f{Fj}}{f{Fj}}}Fj}{{{f{Cn}}{f{Cn}}}Fj}{{{f{Cn}}{f{Bf}}}Fj}{{{f{Ef}}{f{{Df{Dd}}}}}Fj}{{{f{Ef}}{f{Ef}}}Fj}543210{{{f{Hb}}{f{Bhc}}}bAB`}{{{f{AMd}}{f{Bhc}}}bAB`}{{{f{Dj}}{f{Bhc}}}bAB`}{{{f{Mb}}{f{Bhc}}}bAB`}{{{f{AMh}}{f{Bhc}}}bAB`}{{{f{ADd}}{f{Bhc}}}bAB`}{{{f{AO`}}{f{Bhc}}}bAB`}{{{f{Hb}}{f{Bhc}}d}bAB`}{DjDj}{{}F`}0000000000000000000000000000000000{{{f{Dl}}}{{f{Dj}}}}{{{f{Dj}}}{{An{{f{Dj}}}}}}{{{f{ADd}}}{{An{{f{ADd}}}}}}{ce{}{}}0000000000000000000000000000000000{{B@l{An{F`}}F`}{{Af{Ih}}}}{{B@l{An{F`}}F`}Ih}{{{f{Dl}}}c{}}{{{f{Fj}}}c{}}{{{f{Cn}}}c{}}{{{f{Ef}}}c{}}{{{f{AJn}}}c{}}{{{f{{AEb{c}}}}}eHl{}}{{B@nDj}{{Af{Kb}}}}{IhAd}{B@lAd}{Hb{{Af{Hb}}}}{{{f{Dj}}}d}00{{{f{Hb}}}d}1111010111110101011110111101{{{f{ADd}}}d}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{ADl{cgADj}}}A@f{ALf{ALh{c}}}{{Fh{}{{B`{c}}}}H`IjIl}}{{{f{Dl}}}{{`{{Bd{}{{B`{Jf}}}}}}}}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{An{c}}}A@f{ALf{ALh{c}}}{{Fh{}{{B`{c}}}}H`IjIl}}{{{f{Dj}}}{{f{Dj}}}}{{{f{Dl}}{f{Dl}}}Fj}{{{f{Fj}}{f{Fj}}}Fj}{{{f{Cn}}{f{Cn}}}Fj}{{{f{Cn}}{f{Bf}}}Fj}{{{f{Ef}}{f{Ef}}}Fj}{{{f{Ef}}{f{{Df{Dd}}}}}Fj}543201{{{f{ALj}}{f{ALj}}}{{Af{{Gl{ALjALj}}}}}}{{DlDl}{{Af{{Gl{DlDl}}}}}}{{{f{Dj}}{f{Dj}}}{{Af{d}}}}{{{f{AMd}}}{{An{Dj}}}}{{{f{Fj}}}{{An{d}}}}{{{f{Fj}}}Kb}{{{f{Cn}}}Kb}{{{f{Ef}}}Kb}{{{f{Fj}}}{{An{Kd}}}}{{{f{AKf}}}{{An{Hn}}}}{{{f{AKh}}}{{An{Kd}}}}{{{f{AKf}}}Kb}{{{f{AKh}}}Kb}{{{f{Dj}}{f{Dj}}}{{Af{Dj}}}}9876{{{f{Bf}}{f{{Df{Dd}}}}F`F`}Fj}{{{f{Ih}}{f{Ih}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Nj{AdAKb}}}{}}000000{{{f{Cn}}}{{Af{F`}}}}{{{f{Ef}}}{{Af{F`}}}}{{{f{Mb}}}{{f{B@f}}}}`{{}c{}}00{{{f{Bf}}c}Cn{{L`{{Df{{f{Bf}}}}}}}}{{{f{Bf}}c}Cn{{L`{{Df{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Cn{{L`{{Df{{AKd{Bf}}}}}}}}{{{f{Bf}}c}Cn{{L`{{Df{{An{{AKd{Bf}}}}}}}}}}{{{f{Bf}}c}Ef{{L`{{Df{{AKd{{Df{Dd}}}}}}}}}}{{{f{Bf}}c}Ef{{L`{{Df{{An{{AKd{{Df{Dd}}}}}}}}}}}}{{{f{Bf}}c}Ef{{L`{{Df{{f{{Df{Dd}}}}}}}}}}{{{f{Bf}}c}Ef{{L`{{Df{{An{{f{{Df{Dd}}}}}}}}}}}}{{{f{Bf}}e}{{AEb{c}}}Hl{{L`{{Df{{An{c}}}}}}}}{{{f{Bf}}{f{{Df{c}}}}}{{AEb{c}}}Hl}{{{f{Bf}}Dj}Mb}{{{f{Bf}}}{{AEb{c}}}Hl}{{{f{Dl}}F`F`}Dl}{{{f{Fj}}F`F`}Fj}{{{f{Cn}}F`F`}Cn}{{{f{Ef}}F`F`}Ef}{{{f{AJn}}F`F`}AJn}{{{f{{AEb{c}}}}F`F`}{{AEb{c}}}Hl}{{{f{Bf}}{Fd{c}}}{{AEb{c}}}Hl}{{{f{Bf}}{Fd{c}}Gj}{{AEb{c}}}Hl}{{{l{c}}}{{AM`{ec}}}BnBn}{{}AMf}{Fjc{}}{{{f{Fj}}}c{}}{{{f{Dl}}{f{Dl}}}Fj}{{{f{Fj}}{f{Fj}}}Fj}{{{f{Cn}}{f{Bf}}}Fj}{{{f{Cn}}{f{Cn}}}Fj}{{{f{Ef}}{f{{Df{Dd}}}}}Fj}{{{f{Ef}}{f{Ef}}}Fj}543210{{{f{Dl}}}{{Af{{AFn{Jf}}}}}}9{{{f{Dl}}}{{`{{Md{}{{B`{{An{Ad}}}}}}}}}}{{{f{Cn}}}{{`{{Md{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDl}}}{{`{{Mf{}{{B`{{An{Ad}}}}}}}}}}{{{f{Cn}}}{{`{{Mf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Hb}}{f{Hb}}}{{An{BA`}}}}{{{f{AMh}}{f{AMh}}}{{An{BA`}}}}{{{f{{AM`{ce}}}}}{{f{{l{e}}}}}BnBn}{{{f{Ih}}}{{An{F`}}}}{{{f{{AM`{ANhIf}}}}}{{An{F`}}}}{{{f{AKf}}KdMh}{{Af{{An{Hn}}}}}}{{{f{AKh}}KdMh}{{Af{{An{Kd}}}}}}{{{f{AKf}}KdMh}{{Af{Kb}}}}{{{f{AKh}}KdMh}{{Af{Kb}}}}{{{f{Bf}}F`Kd}{{Af{Fj}}}}{{{f{{l{c}}}}{f{Ad}}}{{Nj{AdAKb}}}{}}000000{{{f{Dl}}}Dl}{{{f{Fj}}}Fj}{{{f{Cn}}}Cn}{{{f{Ef}}}Ef}{{{f{AJn}}}AJn}{{{f{{AEb{c}}}}}{{AEb{c}}}Hl}`{{{f{Ih}}}F`}{{{f{{AM`{ANhIf}}}}}F`}{{{f{Fj}}c{An{d}}}{{Af{Fj}}}{{Gh{}{{B`{Hd}}}}}}{{{f{Cn}}c{An{{f{Bf}}}}}{{Af{Cn}}}{{Gh{}{{B`{Hd}}}}}}{{{f{Ef}}c{An{{f{{Df{Dd}}}}}}}{{Af{Ef}}}{{Gh{}{{B`{Hd}}}}}}{{{f{Fj}}ce}{{Af{Fj}}}{{Gh{}{{B`{Hd}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Cn}}ce}{{Af{Cn}}}{{Gh{}{{B`{Hd}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{D`}}}}}}}}{{{f{Ef}}ce}{{Af{Ef}}}{{Gh{}{{B`{Hd}}}}}{{Cb{{An{{f{{Df{Dd}}}}}}}{{C`{{An{{Fd{Dd}}}}}}}}}}{{{f{Fj}}{f{Fj}}{An{d}}}{{Af{Fj}}}}{{{f{Cn}}{f{Fj}}{An{{f{Bf}}}}}{{Af{Cn}}}}{{{f{Ef}}{f{Fj}}{An{{f{{Df{Dd}}}}}}}{{Af{Ef}}}}{{{f{BhDl}}}b}{{{f{BhDl}}Dj}b}{{{f{BhMb}}B@f}b}{{{f{Dl}}Jf}Dl}{{{f{Fj}}Jf}Fj}{{{f{Cn}}Jf}Cn}{{{f{Ef}}Jf}Ef}{{{f{AJn}}Jf}AJn}{{{f{{AEb{c}}}}Jf}{{AEb{c}}}Hl}{{{f{Dl}}Jf{An{{f{Ad}}}}}Dl}{{{f{Fj}}Jf{An{d}}}Fj}{{{f{Cn}}Jf{An{{f{Bf}}}}}Cn}{{{f{Ef}}Jf{An{{f{{Df{Dd}}}}}}}Ef}{{{f{AJn}}Jf{An{{f{{Df{Dd}}}}}}}AJn}{{{f{{AEb{c}}}}Jf{An{{Hh{c}}}}}{{l{{Hh{c}}}}}Hl}{{{f{Fj}}d}Fj}{{{f{Cn}}d}Cn}{{{f{Ef}}d}{{l{Db}}}}{{{f{AJn}}d}AJn}{{{f{Fj}}E`}{{l{Al}}}}{{{f{Cn}}E`}{{l{Dh}}}}{{{f{Ef}}E`}{{l{Db}}}}{{{f{AJn}}E`}AJn}{{{f{AKf}}Dd}Kb}{{{f{AKh}}Dd}Kb}{{{f{Hb}}{f{Dj}}}{{An{Hb}}}}`{{{f{Ih}}{f{Ih}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Nj{AdAKb}}}{}}000000{{{f{Fj}}}{{An{Hd}}}}{{{f{Fj}}}Kb}{{{f{Ef}}}Kb}{{{f{Cn}}{f{c}}}Cn{{L`{{Df{Hd}}}}Ml}}{{{f{Cn}}{f{Eb}}}Cn}{{{f{Ef}}{f{Eb}}}Ef}{{{f{Ef}}{f{c}}}Ef{{L`{{Df{Hd}}}}Ml}}{{{f{Dj}}AMf}ADd}{{{f{Mb}}AMf}AOn}{AMhAO`}{{{f{Dj}}{f{Bf}}AMf}AOn}{AMh{{f{Bf}}}}{{{f{Cn}}F`}{{Af{Ad}}}}{{{f{BhDl}}Dj}b}{{{f{ADd}}}{{f{ADd}}}}{{{f{Dl}}}{{Af{Nf}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Dj}}}Dj}{{{f{ADd}}}BAb}{{{f{Ih}}F`}{{Af{{AKd{Ih}}}}}}{{{f{{AM`{ANhIf}}}}F`}{{Af{{AKd{{AM`{ANhIf}}}}}}}}{{{f{c}}}D`{}}00{{{f{Ef}}}Cn}{{{f{Hb}}{f{Hb}}}d}{{{f{Dl}}c}{{Af{Dl}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dl}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Nj{AKje}}}{}{}{{Gh{}{{B`{{Nj{ce}}}}}}}}0{{ADdg}{{Nj{AKle}}}{}{}{{Gh{}{{B`{{Nj{ce}}}}}}}}0{AOb{{Nj{eg}}}{}{{AKj{c}}AIj}{}}0{{AObADd}{{Nj{eg}}}{}{{AKl{c}}AIj}{}}0{{{f{Hb}}}{{Af{c}}}K`}{c{{Nj{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{Hb}}{f{Dj}}}{{Af{Hb}}}}{{{f{Dj}}AMf}{{Af{ADd}}}}{{{f{Dl}}{f{{l{c}}}}e}{{Af{Dl}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nl{}}0000000000000000000000000000000000{{{f{ADd}}}ADd}{{{f{Fj}}}{{Af{Fj}}}}{{{f{Cn}}}{{Af{Cn}}}}{{{f{Ef}}}{{Af{Ef}}}}{{{f{{AEb{c}}}}}{{Af{{l{{Hh{c}}}}}}}Hl}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}F`}cA@f{ALf{ALh{c}}}{{Fh{}{{B`{c}}}}H`IjIl}}0{{{f{Dj}}Hb}d}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}gA@f{ALf{ALh{c}}}{{Fh{}{{B`{c}}}}H`IjIl}}{{{f{AKf}}Dd}Kb}{{{f{AKh}}Dd}Kb}{{{f{Fj}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{BAd}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{BAf}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{AOf}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{BAh}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{BAj}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{BAl}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{BAn}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{BB`}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{B@l}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{AKf}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{AKh}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{Cn}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{Ef}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{AJn}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}{{{f{{AEb{c}}}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}Hl}{{{f{Fj}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{BAd}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{BAf}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{AOf}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{BAh}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{BAj}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{BAl}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{BAn}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{BB`}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{B@l}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{AKf}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{AKh}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{Cn}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{Ef}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{AJn}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}{{{f{{AEb{c}}}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}Hl}{ce{}{}}0000000000000000000000000000000000{F`c{}}0{F`{{BBb{ce}}}{}{}}{{{f{{Df{Nn}}}}e}c{}{{O`{{f{Eb}}}{{C`{c}}}}}}{{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}{An{Gj}}}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fh{}{{B`{c}}}}H`IjIl}}{{{f{Dj}}}Hb}{{{f{Dl}}{f{{l{c}}}}e}DlBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{ALj}}}d}{{ALjd}ALj}{{{f{BhBBd}}{An{{f{Bf}}}}}b}{{{f{BhALj}}{f{ALj}}}{{Af{b}}}}{{{f{BhBBd}}}b}{{{f{BhBBd}}{f{Bf}}}b}{{{f{ALj}}E`}Eb}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{ALj}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{ALj}}}ALj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BBf}{F`{{f{c}}}{}}000{F`{{f{Bhc}}}{}}000{{BBdc}ALj{{Gh{}{{B`{{An{{f{Bf}}}}}}}}}}{F`b}000{{{f{ALj}}}{{f{Dj}}}}{{{f{ALj}}{f{Bf}}}c{}}{{{f{ALj}}{f{ALj}}}c{}}{{{f{ALj}}{f{Cn}}}c{}}210{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{BBdALj}{BBf{{Kj{BBh}}}}{cc{}}000{{AOf{Kj{BBh}}dBBj}ALj}{{AOfBBj}ALj}{{{f{Cn}}{f{AOd}}BBj}{{Af{ALj}}}}{{{f{Bf}}dF`BBj}ALj}{{{f{ALj}}F`}{{Af{Hb}}}}{{{f{ALj}}F`}Hb}{{{f{ALj}}}{{f{{Kj{BBh}}}}}}<=;=;<{{}F`}000{ce{}{}}0000{ALjAd}{{{f{ALj}}}d}0{{{f{ALj}}}BBl}{{{f{ALj}}}F`}{{{f{ALj}}{f{ALj}}}c{}}{{{f{ALj}}{f{Bf}}}c{}}{{{f{ALj}}{f{Cn}}}c{}}012{{{f{ALj}}{f{ALj}}}{{Af{{Gl{ALjALj}}}}}}{{DlDl}{{Af{{Gl{DlDl}}}}}}{{{f{ALj}}}Kb}{{{f{BhBBf}}{f{{Kj{BBh}}}}}{{Af{b}}}}1{{{f{ALj}}}{{Af{F`}}}}{{{f{ALj}}}{{f{Bf}}}}{{{f{Bf}}F`BBj}BBd}{{{Kj{BBh}}}BBf}{{{f{BhBBl}}}{{An{c}}}{}};9::9;<{{{f{ALj}}}{{f{AOf}}}}{{{f{BhBBd}}{f{Bf}}}{{Gl{M`d}}}}`{{{f{BBl}}}{{Gl{F`{An{F`}}}}}}{{{f{ALj}}d}ALj}{{{f{ALj}}E`}ALj}`{{{f{ALj}}AMfd}Fb}{{{f{ALj}}{f{AOd}}BBn}ALj}{{{f{ALj}}}{{Af{ALj}}}}{{{f{ALj}}}ALj}{{{f{c}}}e{}{}}{c{{Nj{e}}}{}{}}0000000{{{f{c}}}Nl{}}0004{{{f{ALj}}}d}{{{f{ALj}}}{{Af{BC`}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AOdBBh}{{{f{BBj}}}BBj}{{{f{BBh}}}BBh}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}BBj}{{}BBh}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{F`b}0{{{f{BBj}}{f{BBj}}}d}{{{f{BBh}}{f{Bf}}}{{An{M`}}}}{{{f{BBj}}{f{BhG`}}}Gb}{{{f{BBh}}{f{BhG`}}}Gb}{cc{}}0{{{f{BBh}}M`}{{f{Bf}}}}{{{f{BBh}}}{{f{AOd}}}}{{{f{BBh}}M`}{{An{{f{Bf}}}}}}{{}F`}0{ce{}{}}0{{{f{BBh}}}d}0{{{f{BBh}}}F`}{{{f{BBh}}{f{BBh}}}d}{{{f{c}}}e{}{}}0{c{{Nj{e}}}{}{}}000{{{f{c}}}Nl{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}BCb}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{{}b}{{{f{BhBCb}}}b}{F`b}2{cc{}}6{{}F`}{ce{}{}}<<;{{}d}1```````660````````````````````````{{{f{BCd}}}{{f{Bf}}}}<<;;`99{{{f{BCd}}}f}9966`{{{f{BCf}}{f{BhG`}}}{{Nj{bAOh}}}}{{{f{BCd}}{f{BhG`}}}{{Nj{bAOh}}}}077{cBCd{{AOl{{AKd{Bf}}}}}}{{}{{Jj{{f{Bf}}BCf}{{C`{b}}}}}}8877{cAKbAIn}{{{f{Bf}}}BCd}````{{{Jj{{f{Bf}}BCf}{{C`{b}}}}}b}{cAKbBCh}{{{f{c}}}D`{}}{c{{Nj{e}}}{}{}}000{{{f{c}}}Nl{}}0>>`````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCj}}}BCj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{BhG`}}LfF`}Gb}{cc{}}{{}BCl}{{}BCj}{{}{{An{F`}}}}{{}D`}{{}d}{{}F`}{ce{}{}}{{{An{BCl}}}b}{BCjb}{{{An{F`}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}7```````````{{{f{c}}h}b{}}00{{{f{BhBC`}}{Fd{Ad}}{f{BCn}}}{{Af{b}}}}{{{f{BC`}}{f{Cb}}}{{Fd{Ad}}}}0{{{f{BC`}}{f{Fj}}}{{Af{BC`}}}}{{{f{BC`}}{f{{Df{B@f}}}}}{{Af{BC`}}}}0{{{f{BC`}}JfF`}BC`}{{BC`{f{Ad}}}c{}}{{{f{BC`}}{f{BC`}}}c{}}{{{f{BC`}}{f{Ad}}}c{}}{{{f{BhBC`}}}{{f{BhBC`}}}}{{{f{BhBC`}}{f{Bf}}e}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBC`}}F`e}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{BC`}}}{{`{{Bd{}{{B`{F`}}}}}}}}{{{f{BC`}}}BC`}{{{f{BDb}}}BDb}{{{f{BDd}}}BDd}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{BC`}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{BC`}}e}{{Af{{Fd{{f{Ad}}}}}}}{{L`{Bf}}}{{Gh{}{{B`{c}}}}}}{{}BDd}{{}BC`}{F`{{f{c}}}{}}0000{F`{{f{Bhc}}}{}}0000{{{f{BC`}}{f{Ad}}}c{}}{{BC`{f{Ad}}}c{}}{{{f{BC`}}{f{BC`}}}c{}}{F`b}0000{{{f{BC`}}{f{Bf}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{Bf}}}{{Af{Ad}}}}{{{f{BC`}}{f{{Df{c}}}}}BC`{{L`{Bf}}}}{{{f{BC`}}{f{{BDf{{f{Bf}}}}}}}BC`}{{{f{BC`}}{An{{f{{Df{c}}}}}}}{{Af{BC`}}}{{L`{Bf}}}}{{{f{BC`}}}{{Fd{Dj}}}}<{{{f{BDh}}}BC`}{{{f{BCn}}}BC`}{{{f{BDd}}{f{BDd}}}d}{{{f{BC`}}{f{BC`}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BC`}}}F`}`{{{f{BC`}}e}{{Af{BC`}}}{{L`{Bf}}}{{Gh{}{{B`{c}}}}}}{{{f{BC`}}{Fd{Ad}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{BC`}}}{{Af{b}}}}{{{f{BC`}}}{{Fd{Mb}}}}{{{f{BC`}}AFh}{{Af{BC`}}}}{{{f{BC`}}{f{Fj}}}{{Af{BC`}}}}{{{f{BDb}}{f{BhG`}}}Gb}{{{f{BDd}}{f{BhG`}}}Gb}{{{f{BC`}}{f{BhG`}}}Gb}0{cc{}}0000{cBC`{{Gh{}{{B`{Ad}}}}}}{{{f{{Df{BDj}}}}}{{Af{BC`}}}}{{{f{{Df{BDj}}}}{f{BCn}}}{{Af{BC`}}}}{{c{f{BCn}}}{{Af{BC`}}}{{Bd{}{{B`{{f{BDj}}}}}}}}{{{f{BC`}}F`}{{An{{Fd{Hb}}}}}}{{{f{BC`}}{f{Bf}}}{{An{F`}}}}{{{f{BC`}}}{{Fd{{f{Bf}}}}}}{{{f{BC`}}}{{Fd{B@f}}}}{{{f{BC`}}}{{f{{Df{Ad}}}}}}{{{f{BhBC`}}}{{f{Bh{Fd{Ad}}}}}}{{{f{BC`}}F`}{{Af{BDj}}}}{{{f{BC`}}F`{f{BhBDj}}}{{Af{b}}}}{{{f{BC`}}F`{f{BhBDj}}}b}{{{f{BC`}}}{{An{{Af{Dj}}}}}}`{{{f{BC`}}e}{{Af{BDl}}}{{L`{Bf}}}{{Gh{}{{B`{c}}}}}}0{{{f{BC`}}{Fd{Ad}}dd}{{Af{BDl}}}}{{{f{BDd}}{f{Bhc}}}bAB`}{{{f{BhBC`}}{An{N`}}}{{Af{BAh}}}}{{{f{BC`}}{An{F`}}}BC`}{{{f{BC`}}}F`}{{{f{BC`}}{f{{Df{Ad}}}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{{Df{Ad}}}}}{{Af{{f{BhBC`}}}}}}{{{f{BhBC`}}{f{{Df{Ad}}}}}{{f{BhBC`}}}}{{{f{BC`}}F`}{{f{c}}}{}}{{{f{BC`}}{Lb{F`}}}{{f{c}}}{}}{{{f{BC`}}{BDn{F`}}}{{f{c}}}{}}{{{f{BC`}}{BE`{F`}}}{{f{c}}}{}}{{{f{BC`}}{BEb{F`}}}{{f{c}}}{}}{{{f{BC`}}{BEd{F`}}}{{f{c}}}{}}{{{f{BC`}}BEf}{{f{c}}}{}}{{{f{BC`}}{f{Bf}}}{{f{c}}}{}}{{}F`}0000{{{f{BhBC`}}F`c}{{Af{{f{BhBC`}}}}}BD`}{ce{}{}}000000{{{f{BC`}}}{{Af{Fj}}}}{{{f{BC`}}}d}1{{{f{BC`}}}{{Jh{Ad}}}}{{{f{BC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{{f{BC`}}AMfd}BEh}{{{f{BC`}}}BEj}{{{f{BC`}}}F`}{{{f{BC`}}}{{Af{{An{Ad}}}}}}{{{f{BC`}}BDb}{{Af{{An{Ad}}}}}}1{{{f{BC`}}{f{BC`}}}c{}}{{BC`{f{Ad}}}c{}}{{{f{BC`}}{f{Ad}}}c{}}55{{{Fd{c}}}{{Af{BC`}}}BD`}{{{Fd{Ad}}}BC`}{{{Fd{Ad}}}{{Af{BC`}}}}{{{f{BhBEh}}}{{An{c}}}{}}{{{f{BhBEj}}}{{An{c}}}{}}{{{f{BC`}}}BC`}{{{f{BC`}}cd}{{Af{{Fd{BC`}}}}}{{BEl{D`}}}}0{{BC`e}{{Af{c}}}{}{{Cb{BC`}{{C`{{Af{c}}}}}}}}{{{f{BhBC`}}e}{{Af{c}}}{}{{Cb{{f{BhBC`}}}{{C`{{Af{c}}}}}}}}{{BC`gc}{{Af{e}}}{}{}{{Cb{BC`c}{{C`{{Af{e}}}}}}}}{{{f{BhBC`}}}{{An{Ad}}}}{{{f{BC`}}{f{BC`}}}d}=<>{{{f{BhBC`}}{f{Bf}}{f{Bf}}}{{Af{{f{BhBC`}}}}}}{{{f{BhBC`}}{f{Bf}}c}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}F`c}{{Af{{f{BhBC`}}}}}BD`}19`{{{f{BC`}}{f{Ad}}dd{An{I`}}}{{Af{BC`}}}}0{{{f{BC`}}F`dd{An{I`}}}{{Af{BC`}}}}{{{f{BC`}}}BCn}{{{f{BC`}}{f{BC`}}}{{Af{b}}}}{{{f{BC`}}e}{{Af{BC`}}}{{L`{Bf}}}{{Gh{}{{B`{c}}}}}}{{{f{BC`}}F`}{{An{{f{Ad}}}}}}{{{f{BC`}}c}{{Af{BC`}}}{{BEn{F`}}}}2{{{f{BC`}}c}{{Af{{Fd{Ad}}}}}{{BEl{B@f}}}}{{{f{BC`}}e{f{BF`}}}{{Af{BC`}}}{{L`{Bf}}}{{Gh{}{{B`{c}}}}}}{{{f{BC`}}e{f{BCn}}}{{Af{BC`}}}{{L`{Bf}}}{{Gh{}{{B`{c}}}}}}{{{f{BhBC`}}{f{{Df{c}}}}}{{Af{b}}}{{L`{Bf}}}}{{{f{BC`}}}{{Gl{F`F`}}}}{{{f{BC`}}Jf}BC`}{{{f{BC`}}}d}{{{f{BhBC`}}}b}{{{f{BEh}}}{{Gl{F`{An{F`}}}}}}{{{f{BEj}}}{{Gl{F`{An{F`}}}}}}{{{f{BC`}}JfF`}BC`}00{{{f{BC`}}cEd}{{Af{BC`}}}{{BEl{B@f}}}}{{{f{BhBC`}}cEd}{{Af{{f{BhBC`}}}}}{{BEl{B@f}}}}{{{f{BC`}}Jf}{{Gl{BC`BC`}}}}0{{{f{BhBC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{BC`F`d}{{Fd{BC`}}}}{{BC`{f{Ad}}}c{}}{{{f{BC`}}{f{BC`}}}c{}}{{{f{BC`}}{f{Ad}}}c{}}{{{f{BC`}}BDb}{{Af{{An{Ad}}}}}}{{{f{BC`}}{An{F`}}}BC`}{{{f{BC`}}{f{Eb}}}{{Af{BC`}}}}{BC`{{Fd{Ad}}}}{{{f{BC`}}{f{Eb}}}BC`}{{{f{BC`}}{f{Eb}}d}BC`}{{{f{BC`}}BFb}{{Af{Nf}}}}{{{f{c}}}e{}{}}00{{{f{c}}}D`{}}{{{f{BhBC`}}{An{{f{Bf}}}}{An{{Nh{D`{Fd{D`}}}}}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{Bf}}e}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBC`}}F`e}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Nj{e}}}{}{}}0000{BFd{{Af{BC`}}}}{{{Gl{BFf{f{{Df{AOn}}}}}}}{{Af{BC`}}}}{{c{f{BCn}}}{{Af{BC`}}}{{Bd{}{{B`{{Af{{f{BDj}}}}}}}}}}{{{f{BC`}}{f{Bf}}}{{Af{F`}}}}44444{{{f{c}}}Nl{}}0000{{{f{BC`}}{An{{f{{Df{D`}}}}}}BDd{An{{Gl{JfF`}}}}}{{Af{BC`}}}}{{{f{BC`}}d{An{{f{{Df{D`}}}}}}BDd{An{{Gl{JfF`}}}}}{{Af{BC`}}}}1{{{f{BC`}}{f{BC`}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{BC`}}}{{Af{{f{BhBC`}}}}}}{{{f{BhBC`}}{f{BC`}}}b}{ce{}{}}0000{{{f{BC`}}}F`}{{{f{BhBC`}}c}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}c{f{BCn}}}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}Ad}{{f{BhBC`}}}}{{{f{BC`}}{f{Bf}}{An{Hd}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{Bf}}{An{Hd}}}{{f{BhBC`}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BFh}}}BFh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BFh}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{BFh}}{f{BFh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BFh}}{f{BhG`}}}Gb}{cc{}}{{{f{BFh}}{f{Bhc}}}bAB`}`{{}F`}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BDl}}}{{Af{BC`}}}}`{{{f{BFj}}}{{f{{Df{BFl}}}}}}{{{f{BDl}}c}{{Af{BC`}}}{{Ch{BC`}{{C`{{Af{BC`}}}}}}IjIl}}{{{f{Aj}}}Dl}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BFj}}}BFj}{{{f{Aj}}}Aj}{{{f{BDl}}}BDl}{{{f{BFn}}}BFn}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BFj}{{}Aj}{F`{{f{c}}}{}}00{{{f{BG`}}}{{f{c}}}{}}11111{F`{{f{Bhc}}}{}}0000000`{{BGbe}{}{}{{BGd{c}}}}{F`b}000{{{f{BhBFj}}}b}1111{{{f{BFj}}{f{BFj}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BGf}}}Hd}{{{f{BFj}}}{{f{{Df{Hd}}}}}}{{{f{BDl}}}{{Af{BC`}}}}{{{f{BhBFj}}}{{f{Bh{Fd{Hd}}}}}}{{{f{BFj}}{f{BhG`}}}Gb}{{{f{Aj}}{f{BhG`}}}Gb}{{{f{BDl}}{f{BhG`}}}Gb}{{{f{BFn}}{f{BhG`}}}Gb}0{{{f{Bf}}BFn}D`}{cc{}}000{{{Fd{{Fd{BGh}}}}}BFj}{{{Fd{BGh}}}BFj}{{{Fd{{Gl{{Fd{Hd}}{Fd{BFl}}}}}}}BFj}33{BFjAj}44{cBFj{{Gh{}{{B`{BGh}}}}}}{cBFj{{Gn{}{{B`{BGh}}}}}}{{{f{Aj}}F`}BGf}{{{f{BDl}}}{{f{Aj}}}}{{{f{BhBDl}}}{{f{BhAj}}}}{{{f{Aj}}}Eb}{{{f{BGj}}dd}{{Af{Aj}}}}0{{{f{BDl}}}{{Af{BC`}}}}{{{f{BhAj}}}{{f{BhBFj}}}}{{}F`}0000000{ce{}{}}0000000{AjBFj}1{BFjc{}}{{{f{BFj}}}c{}}301{{{f{BGf}}}d}{{{f{Aj}}}d}{{{f{BFj}}}d}{{{f{BFj}}}{{BGn{{BGl{{Jh{Hd}}}}{Jh{BFl}}}}}}{{{f{Aj}}}BH`}{{{f{BDl}}}{{Fd{Ad}}}}{{{f{BDl}}{An{{Gl{JfF`}}}}}{{Fd{Ad}}}}={{{f{BGf}}}F`}{{{f{Aj}}}F`}?????{{{Fd{Hd}}{Fd{BFl}}d}BFj}{{{f{BC`}}{Fd{Ad}}Aj{An{{Fd{D`}}}}}BDl}{{{f{BhBH`}}}{{An{c}}}{}}{{{f{BhBH`}}F`}{{An{c}}}{}}{{{f{BDl}}c}{{Af{BC`}}}{{Cb{BC`}{{C`{{Af{BC`}}}}}}IjIl}}{{{f{c}}}{}{}}{{{f{Aj}}}BGb}{{{f{BDl}}KdMh}{{Af{BC`}}}}{{BDle}BDl{{L`{Bf}}}{{Gh{}{{B`{c}}}}}}{{{f{Aj}}JfF`}BG`}{{{f{BhBFj}}}b}{{{f{BhAj}}}b}{{{f{BDl}}Dd}{{Af{BC`}}}}{{{f{BDl}}}{{Af{BC`}}}}{Aj{{Fd{Hd}}}}0{BDlAj}{{{f{BhBDl}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}D`{}}{c{{Nj{e}}}{}{}}000000000000000{{{f{c}}}Nl{}}0000000{AjAj}{{{f{Aj}}}{{f{BFj}}}}{{{f{Aj}}}{{f{BHb}}}};{ce{}{}}0000000`````{{{f{BFj}}c}Ad{{Cb{{Gl{Hd{f{BFl}}}}}{{C`{An}}}}IjIl}}{{{f{BFj}}c}Ad{{Cb{{Gl{Hd{f{BFl}}}}}{{C`{}}}}IjIl}}{{{f{{Df{{BHd{Hd}}}}}}c}Ad{{Cb{{BHd{Hd}}}{{C`{An}}}}IjIl}}{{{f{{Df{{BHd{Hd}}}}}}c}Ad{{Cb{{BHd{Hd}}}{{C`{}}}}IjIl}}{{{f{{Df{c}}}}eBHf}{{AJb{c}}}{BHhBHj}{{Bd{}{{B`{{Gl{HdHd}}}}}}H`}}{{{f{{Df{c}}}}{f{Gj}}eBHf}{{AJb{c}}}{BHhBHj}{{Bd{}{{B`{{Gl{HdHd}}}}}}H`}}{{{f{{l{c}}}}HdHd}{{l{c}}}Bn}{{{f{BHb}}{f{{Df{Fb}}}}}d}{{{f{BHl}}{f{Aj}}}Ad}{{BHnBHn}BHn}0`{{{f{BI`}}{f{BC`}}{f{Aj}}}{{Af{Ad}}}}{{{f{BI`}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBIb}}Hb}{{An{b}}}}{{{f{BhBId}}{f{Hb}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BIb}}}BIb}{{{f{BId}}}BId}{{{f{BDj}}}BDj}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Df{c}}}}}Dj{{B@d{Dj}}}}{{}BDj}{F`{{f{c}}}{}}00{F`{{f{Bhc}}}{}}00{F`b}00{{{f{BDj}}{f{BDj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDj}}{f{BhG`}}}Gb}{cc{}}{{{Gl{{f{Dj}}F`}}}BIb}1{{{Gl{{f{Dj}}F`}}}BId}2{{eF`}BCn{{AOl{Dj}}}{{Bd{}{{B`{{Fd{{Gl{D`c}}}}}}}}}}{{}F`}00{ce{}{}}00{BIbAd}{BIdAd}{{{f{Dj}}F`}BIb}{{{f{Dj}}F`}BId}{{{Fd{Hb}}}BDj}{{{f{BhBIb}}F`}Ad}{{{f{BhBId}}F`}Ad}{{{f{{Df{BDj}}}}{An{F`}}}{{Af{BCn}}}}0{{{f{{Df{BDj}}}}{An{F`}}}{{Af{{Fd{Dj}}}}}}{{{f{c}}}e{}{}}00{c{{Nj{e}}}{}{}}00000{{{f{c}}}Nl{}}00<<<{{{f{{Df{BC`}}}}}{{Af{BC`}}}}{{{f{{Df{BC`}}}}d}{{Af{BC`}}}}`````{{I`I`}I`}{{{f{{Df{BC`}}}}{An{N`}}}{{Af{{Gl{{Fd{BAh}}N`}}}}}}{{{f{{AJl{Jf}}}}N`{f{Bh{Fd{I`}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BIf}{F`{{f{c}}}{}}0{F`{{f{Bhc}}}{}}0{F`b}0{{{f{BIf}}}I`}{{{f{BIh}}{f{BhG`}}}Gb}{cc{}}0{{{f{BIh}}{f{Bhc}}}bAB`}``{{}F`}0{ce{}{}}0{{{f{Bh{BIj{BIhce}}}}HdI`{f{BC`}}gi}b{}BIl{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Nj{e}}}{}{}}000{{{f{c}}}Nl{}}0{{{f{BIn}}N`{f{Bh{Fd{I`}}}}}{{Af{b}}}}0{{{f{BIn}}N`{f{Bh{Df{I`}}}}}{{Af{b}}}}055{{{f{BhBIf}}{f{{Df{Dd}}}}}b}{{{f{BhBIf}}Lh}b}{{{f{BhBIf}}Jf}b}{{{f{BhBIf}}M`}b}{{{f{BhBIf}}I`}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{Kj{ce}}}}}{{f{e}}}MlBJ`}{{{f{{Kj{c}}}}}BJb{BJdMl}}{{{f{{Kj{ce}}}}}{}MlBJ`}{{{f{{Kj{c}}}}}LhBJf}{{{f{{Kj{ce}}}}}{{f{c}}}MlBJ`}{{{Kj{{Df{{BJh{c}}}}e}}}{{Kj{{Df{c}}e}}}{}BJ`}{{{Kj{{BJh{c}}e}}}{{Kj{ce}}}{}BJ`}{{{f{c}}}{{f{e}}}{}{}}0003000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{{Kj{c}}}}}{{An{{f{AIn}}}}}{AInMl}}`{{{f{BJj}}{f{Ad}}}{{Af{Ad}}}}{{{f{BJj}}c}{{Af{Ad}}}Ab}{{{f{Nn}}}Nn}{{{f{BJl}}}BJl}{{{f{{Kj{ce}}}}}{{Kj{ce}}}Ml{BJ`A@f}}{{{f{Mj}}}Mj}{{{f{BFb}}}BFb}{{{f{AOn}}}AOn}{{{f{BDh}}}BDh}{{{f{Mh}}}Mh}{{{f{BJn}}}BJn}{{{f{BK`}}}BK`}{{{f{BKb}}}BKb}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{c}}}b{}}00000000000000000{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}BA`{BKdMl}BJ`}{AObe{}{{AKj{c}}AIj}}0{{AObADd}e{}{{AKl{c}}AIj}}0{{{f{c}}{f{e}}}BA`{}{}}{{AKbBCd}AKb}{AKbAKb}{{{f{Gd}}{f{ADd}}}{{AAn{Gd}}}}{{{f{AOn}}}{{f{ADd}}}}```{{}b}{cbBJ`}{{}{{Kj{{Df{c}}}}}{}}{{}{{Kj{BKf}}}}{{}{{Kj{Bf}}}}{{}{{Kj{c}}}BKh}{{}Mj}{{}BFb}{{}AOn}{{}BDh}{{}Mh}`{F`{{f{c}}}{}}00{{{f{{Kj{ce}}}}}{{f{c}}}MlBJ`}1111111111{F`{{f{Bhc}}}{}}000000000000{{{f{{Kj{c}}}}}{{f{Bf}}}{AInMl}}`{{{Kj{ADfc}}}{{Nj{{Kj{ec}}{Kj{ADfc}}}}}BJ`{ADfIjIl}}{{{Kj{ADfc}}}{{Kj{ec}}}BJ`{ADfIjIl}}{{{f{{Kj{ce}}}}}{{BKj{ce}}}Ml{A@fBJ`}}{F`b}00{{{f{Bh{Kj{ce}}}}}bMlBJ`}1111111111{{{f{Nn}}{f{Nn}}}d}{{{f{{Kj{BKl}}}}{f{BKl}}}d}{{{f{{Kj{Gd}}}}{f{Gd}}}d}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BKnMl}BJ`}{{{f{Mj}}{f{Mj}}}d}{{{f{BFb}}{f{BFb}}}d}{{{f{AOn}}{f{AOn}}}d}{{{f{BDh}}{f{BDh}}}d}{{{f{Mh}}{f{Mh}}}d}{{{f{BKb}}{f{BKb}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BJl{{Gl{M`M`}}}}`{{BDhc}BDh{{Cb{F`{f{AOn}}}{{C`{d}}}}}}{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{{{f{Bh{Kj{ACj}}}}}{{Nj{bBL`}}}}{{{f{AKb}}{f{BhG`}}}{{Nj{bAOh}}}}0{{{f{Nn}}{f{BhG`}}}{{Nj{bAOh}}}}{{{f{BJl}}{f{BhG`}}}{{Nj{bAOh}}}}{{{f{{Kj{ce}}}}{f{BhG`}}}{{Nj{bAOh}}}{ADhMl}BJ`}{{{f{{Kj{ce}}}}{f{BhG`}}}{{Nj{bAOh}}}{BChMl}BJ`}{{{f{{Kj{ce}}}}{f{BhG`}}}{{Nj{bAOh}}}MlBJ`}{{{f{Mj}}{f{BhG`}}}Gb}{{{f{BFb}}{f{BhG`}}}Gb}{{{f{AOn}}{f{BhG`}}}{{Nj{bAOh}}}}{{{f{BDh}}{f{BhG`}}}{{Nj{bAOh}}}}{{{f{Mh}}{f{BhG`}}}{{Nj{bAOh}}}}{{{f{BJn}}{f{BhG`}}}{{Nj{bAOh}}}}{{{f{BK`}}{f{BhG`}}}{{Nj{bAOh}}}}{{{f{BKb}}{f{BhG`}}}{{Nj{bAOh}}}}`{BL`AKb}{BLbAKb}{BLdAKb}{BLfAKb}{cc{}}{M`Nn}11{BLhc{}}{{{BHd{c}}}{{Kj{{Df{c}}}}}{}}{BLj{{Kj{BLl}}}}{{{Kj{Bf}}}{{Kj{{Df{Dd}}}}}}{{{AAn{ce}}}{{Kj{ce}}}MlBJ`}6{{{f{BLn}}}{{Kj{BLn}}}}{{{f{Bf}}}{{Kj{Bf}}}}{D`{{Kj{Bf}}}}{{{AKd{c}}}{{Kj{c}}}{BM`Ml}}{BMb{{Kj{BKf}}}}{{{f{BKf}}}{{Kj{BKf}}}}{{{Fd{ce}}}{{Kj{{Df{c}}e}}}{}{BJ`A@f}}{{{f{{Df{c}}}}}{{Kj{{Df{c}}}}}A@f}{{{f{BLl}}}{{Kj{BLl}}}}{BMd{{Kj{BLn}}}}{c{{Kj{c}}}{}}{cc{}}000{{{Fd{AOn}}}BDh}11111{{c{An{Gj}}}BMf{}}{{{BMh{Jf}}{BMh{Dd}}{An{Gj}}}BMj}{{{BMh{Jf}}{BMh{Dd}}{An{Gj}}}BMl}{e{{Kj{{Df{c}}}}}{}{{Gh{}{{B`{c}}}}}}{{gF`}{{BMn{Jf}}}L`{{Gh{}{{B`{{An{c}}}}}}}{{Gh{}{{B`{{An{e}}}}}}}}0{e{{BMn{Jf}}}{{Gh{}{{B`{{An{d}}}}}}}{{Gh{}{{B`{{An{c}}}}}}}}{{gADd}{{BMn{Jf}}}BHj{{Gh{}{{B`{{An{c}}}}}}}{{Gh{}{{B`{{An{e}}}}}}}}2{e{{Kj{{Df{c}}}}}Ij{{Gn{}{{B`{c}}}}}}{{}{{Kj{c}}}Ml}{c{{Kj{ec}}}BJ`Ml}{{{f{Bf}}}{{Nj{BN`}}}}{{{f{Bf}}c}BNb{}}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BNdMl}BJ`}{{{f{Bh{Kj{ce}}}}}{{An{{f{Bhc}}}}}MlBJ`}{{{f{Bh{Kj{ce}}}}}{{f{Bhc}}}MlBJ`}{{{f{BDh}}}{{Fd{{f{Bf}}}}}}{{{f{BDh}}}{{Fd{{Gl{{f{Bf}}c}}}}}{}}{{{f{Fb}}F`}Hb}5{{{f{{Kj{ce}}}}{f{Bhg}}}b{BNfMl}BJ`AB`}{{{f{BFb}}{f{Bhc}}}bAB`}{{{f{AOn}}{f{Bhc}}}bAB`}{{{f{Mh}}{f{Bhc}}}bAB`}{{{f{BKb}}{f{Bhc}}}bAB`}{{{f{Nn}}}M`}{{}b}{cb{A@fBJ`}}{{{f{BDh}}{f{Bf}}}{{An{F`}}}}{{{f{{Df{M`}}}}}{{`{{Bd{}{{B`{F`}}}}}}}}{{}F`}000000000000`{{{f{BhBJl}}}{{f{BhI`}}}}`{ce{}{}}000000000000{{{Kj{ce}}}{{An{c}}}{}BJ`}{{{Kj{ce}}}{}MlBJ`}{{{Kj{ce}}}{{Gl{e}}}MlBJ`}{{{Kj{BNh}}}Ad}{{{f{BDh}}}d}{{{f{BJl}}}d}{{{f{Nn}}}d}`{{{f{{Kj{ACj}}}}}d}{{{f{c}}}d{}}1{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BNdMl}BJ`}{{{f{BDh}}}F`}`1{{{f{ALj}}{f{ALj}}}{{Af{{Gl{ALjALj}}}}}}{{DlDl}{{Af{{Gl{DlDl}}}}}}{{{f{Bh{Kj{ce}}}}}{{f{Bhc}}}{BNjMl}{BJ`A@f}}{{{f{BNl}}}Kb}0{{{f{BNn}}}Kb}```11`{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BKnMl}BJ`}{{BO`F`}{{An{F`}}}}{{{f{Bf}}c}BOb{}}{c{{Kj{c}}}{}}{{cADdd}AOn{{AOl{D`}}}}{e{{Kj{c}}}{}{{O`{{f{{BKj{c}}}}}{{C`{c}}}}}}{{ce}{{Kj{ce}}}{}BJ`}{{}{{Kj{{BJh{c}}}}}{}}{c{{Kj{{BJh{e}}c}}}BJ`{}}{F`{{Kj{{Df{{BJh{c}}}}}}}{}}{{F`c}{{Kj{{Df{{BJh{e}}}}c}}}BJ`{}}3210`{{}Nn}{{}BJl}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}{{An{BA`}}}{BNdMl}BJ`}{c{{BOd{{Kj{c}}}}}{}}{{ce}{{BOd{{Kj{ce}}}}}{}BJ`}`````{{{f{BNl}}}Kb}0{{{f{{Kj{c}}}}{f{BhBOf}}}b{AInMl}}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}dMlBJ`}{{{f{BNn}}KdMh}{{Af{Kb}}}}{{{f{Bh{Kj{ACj}}}}{f{Bh{Df{Dd}}}}}{{Nj{F`BL`}}}}{{{f{Bh{Kj{ACj}}}}BOh}{{Nj{bBL`}}}}{{{f{Bh{Kj{ACj}}}}{f{Bh{Fd{Dd}}}}}{{Nj{F`BL`}}}}{{{f{Bh{Kj{ACj}}}}{f{BhD`}}}{{Nj{F`BL`}}}}{{{f{Bh{Kj{ACj}}}}{f{Bh{Df{BOj}}}}}{{Nj{F`BL`}}}}`{{{f{Bh{Kj{ACj}}}}BOl}{{Nj{I`BL`}}}}`{{{f{AJf}}F`F`}AJf}0{{{f{{Kj{c}}}}}{{An{{f{AIn}}}}}{AInMl}}{{{f{BOn}}Dd}Kb}{{M`M`}BJl}`{{{f{{Kj{ce}}}}}F`MlBJ`}>>{{{f{Nn}}}{{An{M`}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}D`{}}0{AOb{{Nj{eg}}}{}{{AKj{c}}AIj}{}}0{{AObADd}{{Nj{eg}}}{}{{AKl{c}}AIj}{}}0{c{{Nj{e}}}{}{}}00{{{Kj{{Df{c}}e}}}{{Nj{{Kj{{BHd{c}}e}}}}}{}BJ`}11111111111111111111111{{BO`F`}{{Nj{F`AKb}}}}{c{{Nj{{Kj{c}}C@`}}}{}}{{ce}{{Nj{{Kj{ce}}C@`}}}{}BJ`}{{}{{Nj{{Kj{{BJh{c}}}}C@`}}}{}}{c{{Nj{{Kj{{BJh{e}}c}}C@`}}}BJ`{}}10{c{{Nj{{BOd{{Kj{c}}}}C@`}}}{}}{{ce}{{Nj{{BOd{{Kj{ce}}}}C@`}}}{}BJ`}{{{f{BDh}}{f{{Df{F`}}}}}{{Nj{BDhAKb}}}}{{{Kj{ce}}}{{Nj{c{Kj{ce}}}}}{}BJ`}{{{f{c}}}Nl{}}000000000000{{{Kj{ce}}}cA@fBJ`}`{{{f{BOn}}Dd}Kb}{ce{}{}}000000000000{{{f{{Kj{ce}}}}}F`MlBJ`}``{{AOn{C@b{D`D`}}}AOn}{{BDh{C@b{D`D`}}}BDh}{{{f{Bh{Kj{ACj}}}}{f{{Df{Dd}}}}}{{Nj{F`BL`}}}}{{{f{Bh{Kj{ACj}}}}{f{{Df{C@d}}}}}{{Nj{F`BL`}}}}```````{{c{An{Gj}}}BMf{}}{{{BMh{Jf}}{BMh{Dd}}{An{Gj}}}BMj}{{{BMh{Jf}}{BMh{Dd}}{An{Gj}}}BMl}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{C@f{An{{f{ADd}}}}}{{Nj{{BMn{Jf}}AKb}}}}{cc{}}{{}F`}{ce{}{}}{{{f{C@f}}}d}{F`C@f}{{{f{C@f}}}{{f{{Df{Jf}}}}}}{{{f{BhC@f}}{f{Gd}}}b}{{{f{BhC@f}}}b}{{{f{BhC@f}}{f{{Df{{AAn{Gd}}}}}}}b}1{{{f{BhC@f}}{An{{f{Gd}}}}}b}{C@f{{C@h{Jf}}}}{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}:`{{{f{c}}h}b{}}{{{f{C@j}}}{{f{ADf}}}}{{{f{BhC@j}}}{{AAn{Gd}}}}{{{f{BhC@j}}}{{f{BhADf}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{C@j}}}C@j}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{C@j}}}{{f{ADd}}}}{{}C@j}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{BhC@j}}F`}b}{{{f{C@j}}{f{BhG`}}}{{Nj{bAOh}}}}{cc{}}{{}F`}{ce{}{}}{{{f{C@j}}}F`}{F`C@j}{{{f{BhC@j}}}b}70{{{f{c}}}e{}{}}{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{C@j}}}{{An{{f{C@l}}}}}}7```````{{{f{AJf}}F`F`}AJf}0`{{}b}0{{}d}``{{eF`F`}{{C@n{Jf}}}{{L`{Bf}}}{{Bd{}{{B`{c}}}}}}{{eF`F`}{{AJl{Jf}}}{{L`{{Df{Dd}}}}}{{Bd{}{{B`{c}}}}}}{I`b}`{{{f{c}}h}b{}}{{{f{Kb}}}Hb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Kb}}}Kb}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{Kb}}}{{f{Dj}}}}{cc{}}{{}F`}{ce{}{}}{{Kb{f{Bf}}}Ad}{{DjHb}Kb}`{{{f{c}}}e{}{}}{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{BhKb}}Hb}b}{{{f{Kb}}}{{f{Hb}}}}7{{{An{Kd}}Dj}Kb}``````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCn}}}BCn}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{BCn}}{f{Bf}}}d}{{}BCn}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{c}}{f{c}}}{{Af{b}}}CA`}{{{f{BCn}}{f{BCn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCn}}{f{BhG`}}}Gb}{BDhBCn}{{{f{BDh}}}BCn}{{{f{CAb}}}BCn}{CAbBCn}{{{f{{Df{Ad}}}}}BCn}{cc{}}{{{f{BDj}}}BCn}{eBCn{{AOl{Mb}}}{{Gh{}{{B`{c}}}}}}{{{f{BCn}}{f{Bf}}}{{An{{f{Dj}}}}}}{{{f{BCn}}F`}{{An{{Gl{{f{B@f}}{f{Dj}}}}}}}}{{{f{BhBCn}}F`}{{An{{Gl{{f{BhB@f}}{f{BhDj}}}}}}}}{{{f{BCn}}{f{Bf}}}{{An{Mb}}}}{{{f{BCn}}{f{Bf}}}{{An{{Gl{F`{f{B@f}}{f{Dj}}}}}}}}{{{f{CAd}}}{{Fd{{f{Bf}}}}}}{{{f{BCn}}}{{Fd{{f{Bf}}}}}}{{{f{{CA`{}{{CAf{c}}}}}}}{{Fd{{Gl{{f{Bf}}c}}}}}{ADhBKn}}{{{f{BCn}}}{{Fd{{Gl{{f{Bf}}c}}}}}{}}{{{f{BCn}}{f{Bhc}}}bAB`}{{{f{CAd}}{f{Bf}}}{{An{F`}}}}{{{f{BCn}}{f{Bf}}}{{An{F`}}}}{{}F`}{{{f{BhBCn}}F`B@fDj}{{Af{{An{Dj}}}}}}{ce{}{}}{BCnc{}}{{{f{BCn}}}d}{{{f{BCn}}}{{`{{Bd{}{{B`{{Gl{{f{B@f}}{f{Dj}}}}}}}}}}}}{{{f{BCn}}}{{`{{In{}{{B`{{f{Dj}}}}}}}}}}{{{f{BhBCn}}}{{`{{In{}{{B`{{f{BhDj}}}}}}}}}}{{{f{BCn}}}{{`{{In{}{{B`{Mb}}}}}}}}{{{f{BCn}}}{{`{{In{}{{B`{{f{B@f}}}}}}}}}}{{{f{BCn}}}F`}{{{f{BhBCn}}BCn}b}{{{f{BhBCn}}{f{BCn}}}b}{{}BCn}{{{f{BCn}}F`B@fDj}{{Af{BCn}}}}{{{f{BhBCn}}{f{Bf}}}{{An{Dj}}}}{{{f{BhBCn}}{f{Bf}}B@f}{{An{B@f}}}}{{{f{BhBCn}}F`}b}{{{f{BhBCn}}{f{Bf}}Dj}{{An{Dj}}}}{{{f{BhBCn}}F`Dj}{{An{Dj}}}}4{{{f{BhBCn}}F`}{{An{{Gl{B@fDj}}}}}}{{{f{BCn}}AMf}BDh}{{{f{c}}}e{}{}}{{{f{BhBCn}}{f{BCn}}}{{Af{d}}}}{c{{Nj{e}}}{}{}}{{{f{BCn}}{f{Bf}}}{{Af{{f{Dj}}}}}}{{{f{BCn}}F`}{{Af{{Gl{{f{B@f}}{f{Dj}}}}}}}}{{{f{BCn}}{f{Bf}}}{{Af{Mb}}}}{{{f{BCn}}{f{Bf}}}{{Af{{Gl{F`{f{B@f}}{f{Dj}}}}}}}}{{{f{BhBCn}}{f{Bf}}}{{Af{{f{BhDj}}}}}}{{{f{CAd}}{f{Bf}}}{{Af{F`}}}}6{{{f{c}}}Nl{}}{ce{}{}}{F`BCn}{{{f{BhBCn}}B@fDj}{{An{Dj}}}}`````````````````{{{f{c}}h}b{}}0{{{f{Bf}}{Fd{Fb}}{f{ADd}}}{{Af{Ad}}}}{{{f{Bf}}{Fd{Fb}}{f{ADd}}{An{{f{CAh}}}}}{{Af{Ad}}}}{{{f{Ad}}c}e{A`K`}{}}{{Adc}e{A`K`}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}`{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BNh}}E`}Eb}0{{{f{BNh}}}{{Af{Eb}}}}0`{{{f{Ad}}F`}{{f{Fb}}}}{{{f{BNh}}}{{f{ADf}}}}{{{f{BhBNh}}}{{f{BhADf}}}}0{{{f{Ad}}}Dl}{{{f{BhBNh}}}{{f{Bh{l{c}}}}}Bn}{{{f{BNh}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BNh}}}}{{{f{BhBNh}}}{{Af{F`}}}}0{{{f{BhAd}}}{{Af{F`}}}}{{{f{Ad}}}{{Af{{f{Ef}}}}}}{{{f{Ad}}}{{Af{{f{AJn}}}}}}{{{f{BNh}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fj}}}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{BNh}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Ad}}{f{Dj}}}{{Af{Ad}}}}0{{{f{Ad}}{f{Dj}}Ej}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{ALj}}}}}}77{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BNh}}}En}{{{f{Ad}}}{{`{{Bd{}{{B`{F`}}}}}}}}{{{f{BNh}}}{{f{{Fd{Fb}}}}}}{{{f{BhBNh}}}{{f{Bh{Fd{Fb}}}}}}{{{f{BhAd}}}{{f{Bh{Fd{Fb}}}}}}{{{f{Ad}}}Ad}{{{f{Jb}}}Jb}1{{{f{BNh}}}{{Kj{BNh}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Ih}}}}}}{{}Ad}{F`{{f{c}}}{}}00{{{f{Ad}}}{{f{c}}}{}}1{F`{{f{Bhc}}}{}}000{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`K`}{}}{{Adc}e{A`K`}{}}{{{f{Ad}}{f{Ad}}}{{Af{Kd}}}}{F`b}000{{{f{BNh}}}Ad}0{{{f{BNh}}}{{f{Dj}}}}0{{{f{Jb}}{f{Jb}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Ad}}}{{Af{Fj}}}}{{{f{Ad}}c}{{Af{Fj}}}AOj}{{{f{Ad}}{f{Bf}}}{{Af{Fj}}}}2{{{f{Ad}}c}eAOj{}}{{{f{Ad}}{f{Bf}}}c{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}F`}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}HbF`}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AKf}}}}}}{{{f{Ad}}}{{Af{{f{AKh}}}}}}{{{f{BNh}}}{{AKd{Mb}}}}0{{{f{Ad}}AFh}{{Af{Ad}}}}{{{f{BNh}}{f{Fj}}}{{Af{Ad}}}}{{{f{Jb}}{f{BhG`}}}Gb}{{{f{Ad}}{f{BhG`}}}Gb}0{{{f{Ad}}}D`}{cc{}}000{{{l{c}}}AdBn}{{{f{Bf}}{f{{Df{Hb}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Df{Hb}}}}{f{Dj}}d}{{Af{Ad}}}}{{{f{Bf}}Fb}{{Af{Ad}}}}{{{f{Bf}}{Fd{Fb}}}{{Af{Ad}}}}{{{f{Bf}}{Fd{Fb}}{f{Dj}}}Ad}{cAd{{Gh{}{{B`{{An{{f{Bf}}}}}}}}}}{cAd{{Gh{}{{B`{Hn}}}}}}{cAd{{Gh{}{{B`{{An{M`}}}}}}}}{cAd{{Gh{}{{B`{M`}}}}}}{cAd{{Gh{}{{B`{{f{M`}}}}}}}}{cAd{{Gh{}{{B`{{An{I`}}}}}}}}{cAd{{Gh{}{{B`{I`}}}}}}{cAd{{Gh{}{{B`{{f{I`}}}}}}}}{cAd{{Gh{}{{B`{{An{Lh}}}}}}}}{cAd{{Gh{}{{B`{Lh}}}}}}{cAd{{Gh{}{{B`{{f{Lh}}}}}}}}{cAd{{Gh{}{{B`{{An{Jf}}}}}}}}{cAd{{Gh{}{{B`{Jf}}}}}}{cAd{{Gh{}{{B`{D`}}}}}}{cAd{{Gh{}{{B`{{An{D`}}}}}}}}{cAd{{Gh{}{{B`{{f{Bf}}}}}}}}{cAd{{Gh{}{{B`{{f{Jf}}}}}}}}{cAd{{Gh{}{{B`{{An{Hn}}}}}}}}{cAd{{Gh{}{{B`{d}}}}}}{cAd{{Gh{}{{B`{{An{d}}}}}}}}{cAd{{Gh{}{{B`{{f{Kd}}}}}}}}{cAd{{Gh{}{{B`{Kd}}}}}}{cAd{{Gh{}{{B`{{An{Kd}}}}}}}}{cAd{{Gh{}{{B`{{f{Hn}}}}}}}}{cAd{{Gh{}{{B`{{f{d}}}}}}}}{{{f{Bf}}{Fd{M`}}}Ad}{{{f{Bf}}{Fd{Lf}}}Ad}{{{f{Bf}}{Fd{Jf}}}Ad}{{{f{Bf}}{Fd{Lh}}}Ad}{{{f{Bf}}{Fd{I`}}}Ad}{{{f{Bf}}{Fd{Hn}}}Ad}{{{f{Bf}}{Fd{Kd}}}Ad}{{{f{Bf}}F`{f{Dj}}}Ad}{{{f{Ad}}F`F`}Ad}{{{f{BNh}}F`}{{Af{Hb}}}}{{{f{Ad}}}F`}{{{f{Ad}}}Hf}{{{f{Ad}}}Ad}{{{f{BNh}}}{{An{{Kn{Kl}}}}}}0{{{f{BNh}}F`}{{An{{f{Hj}}}}}}0{{{f{BNh}}F`F`}{{An{{f{Hj}}}}}}0{{{f{BNh}}F`}Hb}0{{{f{Ad}}c}{{Af{Fj}}}AOj}{{{f{Ad}}{f{Bf}}}{{Af{Fj}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fj}}}}02{{{f{Ad}}{f{Bf}}}c{}}{{{f{BNh}}}d}{{{f{Jb}}{f{Bhc}}}bAB`}{{{f{Ad}}{An{F`}}}Ad}{{{f{Ad}}}{{Af{{f{BAl}}}}}}{{{f{Ad}}}{{Af{{f{BAn}}}}}}{{{f{Ad}}}{{Af{{f{BB`}}}}}}{{{f{Ad}}}{{Af{{f{BAj}}}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}`{{{f{Ad}}}{{Af{Dl}}}}{{}F`}000{ce{}{}}000{AdBC`}1{BD`Ad}{AdAd}=={{{f{Ad}}}{{Af{Fj}}}}000{{{f{BNh}}}Fj}0{{}d}00{{{f{Ad}}}Jb}{{{f{Ad}}}CAj}{{{f{Ad}}}{{`{{Bd{}{{B`{Ad}}}}}}}}{{{f{BNh}}}F`}{{{f{Ad}}}F`}{{{f{BNh}}F`}Ad}0{{{f{Ad}}}{{Af{{f{Dl}}}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fj}}}}{{{f{Ad}}c}{{Af{Fj}}}AOj}{{{f{Ad}}{f{Bf}}}c{}}210{{{f{Ad}}}{{Af{{An{c}}}}}K`}{{{f{BNh}}}{{Af{Kb}}}}0{{{f{BNh}}}{{An{Kd}}}}0{{{f{Ad}}}Kb}1122322{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{Adc}e{A`K`}{}}{{{f{Ad}}c}e{A`K`}{}}>>={{{f{BNh}}}{{Af{F`}}}}0{{{f{BNh}}}{{f{Bf}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{{AKd{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{Hb}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{Ad}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{Lf}}}}}}{{{f{Bf}}{Lb{M`}}}Ad}{{{f{Bf}}c}Ad{{L`{{Df{Jf}}}}}}{{{f{Bf}}{Lb{I`}}}Ad}{{{f{Bf}}c}Ad{{L`{{Df{Lh}}}}}}{{{f{Bf}}{Lb{Lh}}}Ad}{{{f{Bf}}c}Ad{{L`{{Df{I`}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{Kd}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{M`}}}}}}{{{f{Bf}}c}AdBD`}{{{f{Bf}}c}Ad{{L`{{Df{d}}}}}}{{{f{Bf}}{Lb{Jf}}}Ad}{{{f{Bf}}c}Ad{{L`{{Df{{Fd{Dd}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{D`}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{D`}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{Kd}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{Hn}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{f{Bf}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{{Fd{Dd}}}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{d}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{Lf}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{{AKd{{Df{Dd}}}}}}}}}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{L`{{Df{{AKd{{Df{Dd}}}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{Jf}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{Hn}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{{f{{Df{Dd}}}}}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{AKd{Bf}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{I`}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{Lh}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{f{{Df{Dd}}}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Df{{An{M`}}}}}}}}{{{f{Bf}}{f{Dj}}}Ad}{{{f{BNh}}F`F`}Ad}{{{f{Bf}}F`}Ad}{{{f{BhCAj}}}{{An{c}}}{}}{{{f{Ad}}c}{{Af{Fj}}}AOj}{{{f{Ad}}{f{Bf}}}{{Af{Fj}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fj}}}}{{{f{Ad}}c}eAOj{}}1{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BNh}}}F`}`{{{f{Ad}}}CAl}{{{f{Ad}}}{{Af{Kb}}}}{{{f{BNh}}KdMh}{{Af{Kb}}}}0{{{f{BNh}}}Ad}{{Adc}e{A`K`}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`K`}{}}{{{f{BhBNh}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{f{{Df{Jf}}}}}{{Af{Ad}}}}6{JbJb}{{{f{BNh}}{f{Cb}}Mj}{{Af{Ad}}}}0{{{f{Ad}}Kddd{An{I`}}}{{Af{Ad}}}}{{{f{Ad}}F`dd{An{I`}}}{{Af{Ad}}}}{{{f{Ad}}F`}Ad}{{{f{BhAd}}Jb}b}{{{f{BNh}}Jf}Ad}{{{f{BhBNh}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{I`}}}Ad}{{{f{CAj}}}{{Gl{F`{An{F`}}}}}}{{{f{BNh}}JfF`}Ad}{{{f{Ad}}JfF`}Ad}{{{f{Ad}}E`}{{Af{Ad}}}}{{{f{BNh}}E`}{{Af{Ad}}}}0{{{f{BNh}}Jf}{{Gl{AdAd}}}}{{{f{Ad}}Jf}{{Gl{AdAd}}}}{{{f{BNh}}Dd}{{An{Kd}}}}0{{{f{BNh}}Dd}{{Af{Kb}}}}0{{{f{Ad}}}{{Af{{f{Cn}}}}}}{{{f{Ad}}F`}{{Af{{AKd{Bf}}}}}}{{{f{Ad}}{f{Dj}}}{{Af{Ad}}}}{{Adc}e{A`K`}{}}{{AdAd}c{}}{{{f{Ad}}c}e{A`K`}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}}{{Af{c}}}K`}{{{f{BNh}}}{{Af{Kb}}}}0{{{f{Ad}}}{{Af{Kb}}}}{{{f{Ad}}{An{F`}}}Ad}{{{f{BNh}}{f{Eb}}}{{Af{Ad}}}}{{{f{BNh}}{f{{Df{Hd}}}}}{{Af{Ad}}}}{{{f{BNh}}{f{{Df{Hd}}}}}Ad}{{{f{BNh}}{f{Eb}}}Ad}{{{f{Ad}}{f{{Df{Hd}}}}}Ad}{{{f{Ad}}F`AMf}Fb}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AKd{Ad}}}}{{{f{c}}}D`{}}{{AdAd}{{Af{Ad}}}}{c{{Nj{e}}}{}{}}00{{{Gl{{f{Bf}}{Fd{Fb}}}}}{{Af{Ad}}}}{{{Gl{{f{Bf}}Fb}}}{{Af{Ad}}}}{{{Gl{{f{AOn}}{Fd{Fb}}}}}{{Af{Ad}}}}{{{Gl{{f{AOn}}Fb}}}{{Af{Ad}}}}444445{{{f{BhAd}}{Ib{c}}}dBn}6{{{f{c}}}Nl{}}000{{{f{Ad}}}{{Af{{f{BAf}}}}}}{{{f{Ad}}}{{Af{{f{AOf}}}}}}{{{f{Ad}}}{{Af{{f{BAh}}}}}}{{{f{Ad}}}{{Af{{f{BAd}}}}}}{{{f{BNh}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BNh}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{BNh}}Dd}{{An{Kd}}}}0{{{f{BNh}}Dd}{{Af{Kb}}}}0{ce{}{}}000{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`K`}}{{{f{Ad}}{f{Fj}}{f{Ad}}}{{Af{Ad}}}}``{{{f{c}}h}b{}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{Cf}}}Ad}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{cc{}}{{}F`}{ce{}{}}{{{CAn{Ad}}}Cf}{{{f{BhCf}}{f{BhFb}}}b}{{{f{c}}}e{}{}}{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}5{{{f{BhCf}}{f{BhFb}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````{{{CB`{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{CBb}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BJj}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{El}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BJj}}c}{{Af{Ad}}}Ab}{{{f{{l{El}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{CBd}}}CBd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}CBd}{F`{{f{c}}}{}}{F`{{f{Bhc}}}{}}{F`b}{{{f{CBd}}{f{CBd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CBd}}{f{BhG`}}}Gb}{cc{}}{{{f{CBd}}{f{Bhc}}}bAB`}{{}F`}{ce{}{}}{{{f{c}}}e{}{}}{c{{Nj{e}}}{}{}}0{{{f{c}}}Nl{}}3`````````````{{{f{c}}h}b{}}005{{{Fd{BC`}}}{{Af{BC`}}}}{c{{Af{BC`}}}{{Gh{}{{B`{BC`}}}}}}{cBC`{{Gh{}{{B`{BC`}}}}}}{c{{An{BC`}}}{{Gh{}{{B`{BC`}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gl{{AKd{{l{c}}}}{AKd{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gl{{AKd{{l{c}}}}{AKd{{l{e}}}}{AKd{{l{g}}}}}}}BnBnBn}{{}CBf}{{{f{CBh}}}d}0{c{{Af{Dj}}}{{Gh{}{{B`{{f{Hb}}}}}}}}{c{{Af{{Gl{DjF`}}}}}{{Gh{}{{B`{{f{Hb}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gj}}}BnBn}{{CBfCBf}CBf}{{{f{BhCBf}}CBf}b}10{{{f{CBf}}}Dd}021{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{CBj}}}{{`{{Bd{}{{B`{F`}}}}}}}}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{{CBl{ec}}}}}{{CBl{ec}}}A@f{A@f{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{{l{c}}}}{f{{l{c}}}}}{{Gl{{AKd{{l{c}}}}{AKd{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gl{AdAd}}}}{CBne{}{{CC`{c}}}}{CBne{}{{CCb{c}}}}{CBfCBf}{c{{Af{BC`}}}{{Gh{}{{B`{{f{BC`}}}}}}}}{cBC`{{Gh{}{{B`{{f{BC`}}}}}}}}{{{f{CBf}}CBf}d}{{}CBf}{{}CBh}{{{f{{CCd{c}}}}}{{f{e}}}{}{}}{F`{{f{c}}}{}}0{{{f{{AJh{c}}}}}{{f{e}}}{}{}}111{F`{{f{Bhc}}}{}}0{{{f{Bh{AJh{c}}}}}{{f{Bhe}}}{}{}}111{{CBfCBf}CBf}{F`b}0000{cBCn{{Gh{}{{B`{Dj}}}}}}{c{{Af{Dj}}}{{Gh{}{{B`{{f{Dj}}}}}}}}:{{{f{{CCd{Ad}}}}{f{{CCd{Ad}}}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{c}}{f{e}}}d{}{}}00000000{{{f{BhCBf}}c}b{{Gh{}{{B`{CBf}}}}}}``{{{f{CBf}}{f{BhG`}}}Gb}0000{{{f{CBh}}{f{BhG`}}}Gb}{cc{}}00{CBfCBh}11{Dd{{An{CBf}}}}{DdCBf}00{c{{AJh{Fj}}}{{Gh{}{{B`{d}}}}}}{c{{AJh{{l{e}}}}}{{Gh{}{{B`{}}}}}n}{cCBf{{Gh{}{{B`{CBf}}}}}}{eCCb{}{{Gh{}{{B`{c}}}}}}23{{{f{Bf}}}{{An{CBf}}}}{c{{AJh{{l{e}}}}}{{Gn{}{{B`{}}}}}n}{c{{AJh{{l{e}}}}}{{H`{}{{B`{}}}}}n}{c{{AJh{Fj}}}{{H`{}{{B`{d}}}}}}{{{f{Dj}}{f{Dj}}}{{An{Dj}}}}{{{f{Dj}}{f{Dj}}CBh}{{An{Dj}}}}{{{f{AMh}}{f{AMh}}}AMh}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CCd{Ad}}}}{f{Bhc}}}bAB`}{{{f{CBf}}{f{Bhc}}}bAB`}{{{f{CBh}}{f{Bhc}}}bAB`}{{}F`}0000{{{f{BhCBf}}CBf}b}{{CBfCBf}CBf}{{{f{CBf}}CBf}d}{ce{}{}}0000{{{AJh{c}}}c{}}{CBfc{}}2{BEl{{Fd{c}}}{}}{c{{Fd{D`}}}{}}{c{{Fd{{CCh{CCf}}}}}{}}{{{f{CBf}}}d}0{{{f{CBf}}}{{ACf{CBf}}}}{{{f{CBj}}}{{`{{Bd{}{{B`{CBj}}}}}}}}{{{f{CBf}}}{{ACh{CBf}}}}{{{f{CBj}}}F`}{LfHb}1{c{{AJh{c}}}{}}{{eF`}{{CBl{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBl{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBl{ec}}}}}An{}{{Bd{}{{B`{c}}}}Fh}}{CBfCBf}`{{{f{BhCBf}}CBf}b}{{{f{BhCBf}}CBfd}b}{{{f{{CBl{ec}}}}}{{Gl{F`{An{F`}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{CBj}}JfF`}CBj}{{{f{{Df{c}}}}JfF`}{{f{{Df{c}}}}}{}}{{{f{c}}F`}{{Fd{c}}}CBj}0{{{f{CBj}}Jf}{{Gl{CBjCBj}}}}{{{f{BC`}}F`d}{{Fd{BC`}}}}{{CBfCBf}CBf}80{{{f{c}}}e{}{}}009{{CBnF`}{{CBl{CBnc}}}{}}{c{{Nj{e}}}{}{}}0000{{{f{Dj}}{f{Dj}}}{{Af{Dj}}}}11111{{{f{c}}}Nl{}}00005{ce{}{}}0000{{{f{Dj}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Df{{Fd{c}}}}}}}{{Gl{F`{Fd{F`}}}}}{}}{{{f{BC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{{f{{Df{c}}}}}{{AJb{Hd}}}{{L`{{Df{Nn}}}}IjIl}}{{{f{{Df{e}}}}}{{Fd{c}}}{IjIlCd}{{L`{{Df{c}}}}}}{{{f{Ad}}}{{Fd{Ad}}}}","D":"JIf","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5535],[5,"ListType",1534],[5,"ChunkedArray",40],[10,"PolarsNumericType",1534],[10,"Num",5536],[10,"ToPrimitive",5537],[5,"Series",4817],[8,"PolarsResult",4047,5538],[10,"NumOpsDispatchInner",5256,5539],[6,"GroupsProxy",3642,5540],[5,"BooleanType",1534],[6,"Option",5541],[17,"Item"],[8,"ArrayBox",5232],[10,"Iterator",5542],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1534],[10,"PolarsDataType",1534],[17,"Output"],[10,"Fn",5543],[10,"Copy",5544],[5,"AmortSeries",5232],[10,"FnMut",5543],[5,"Float32Type",1534],[5,"Float64Type",1534],[8,"StringChunked",1534],[5,"String",5545],[5,"BinaryType",1534],[1,"u8"],[1,"slice"],[5,"StringType",1534],[6,"DataType",1534,5546],[8,"ListChunked",1534],[5,"View",5547],[5,"SortOptions",1448],[8,"IdxCa",1534,5548],[5,"SortMultipleOptions",1448],[8,"BinaryChunked",1534],[10,"PolarsIntegerType",1534],[6,"CastOptions",729],[10,"NumOpsDispatchCheckedInner",5281,5549],[8,"ChunkLenIter",40],[1,"usize"],[8,"ArrayRef",4047,5550],[5,"Vec",5551],[5,"MetadataProperties",818],[10,"DoubleEndedIterator",5552],[8,"BooleanChunked",1534],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5553],[8,"Result",5553],[10,"Array",5550],[17,"Array"],[10,"IntoIterator",5554],[5,"Bitmap",5555],[1,"tuple"],[10,"IntoParallelIterator",5556],[10,"TrustedLen",5557],[6,"AnyValue",1534,5558],[8,"IdxSize",4047,5559],[5,"MetadataFlags",818],[5,"ObjectType",1534],[10,"PolarsObjectSafe",1106],[10,"PolarsObject",1106],[1,"f32"],[1,"u64"],[5,"Metadata",818],[5,"RwLockWriteGuard",5560],[5,"Int128Type",1534],[8,"DecimalChunked",1534,5561],[10,"Send",5544],[10,"Sync",5544],[10,"ExactSizeIterator",5562],[10,"PolarsFloatType",1534],[6,"IsSorted",4817,5563],[10,"PolarsIterator",779],[1,"i64"],[5,"Iter",5564],[1,"fn"],[5,"Map",5565],[6,"ChunkedArrayLayout",40],[10,"NumCast",5537],[5,"Scalar",4711],[1,"f64"],[6,"MetadataReadGuard",818,5566],[5,"IMMetadata",818,5567],[5,"Arc",4047,5568],[10,"MetadataTrait",818,5569],[5,"RwLockReadGuard",5560],[10,"AsRef",5570],[5,"Range",5571],[5,"UInt64Type",1534],[1,"i128"],[1,"i32"],[5,"Int32Type",1534],[5,"Int64Type",1534],[5,"UInt32Type",1534],[1,"u32"],[5,"Field",1534,5572],[10,"ParallelIterator",5556],[10,"IndexedParallelIterator",5556],[6,"QuantileInterpolOptions",4047,5573],[5,"RollingOptionsFixedWindow",4047,5574],[10,"Sized",5544],[17,"IsStruct"],[8,"PlRandomState",1534,5575],[5,"BytesHash",5576],[8,"ArrayView1",5577],[8,"Array2",5577],[6,"Either",5578],[6,"Result",5579],[5,"TypeId",5580],[5,"NullableIdxSize",4047,5559],[10,"FnOnce",5543],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",439,5581],[10,"ChunkedBuilder",467],[5,"BinViewChunkedBuilder",467,5582],[10,"ViewType",5583],[5,"BooleanChunkedBuilder",467,5584],[5,"NullChunkedBuilder",467,5585],[5,"PrimitiveChunkedBuilder",467,5586],[10,"Clone",5587],[8,"StringChunkedBuilder",467,5582],[8,"BinaryChunkedBuilder",467,5582],[10,"NewChunkedArray",467],[5,"AnonymousListBuilder",575,5588],[5,"AnonymousOwnedListBuilder",575,5588],[5,"ListBooleanChunkedBuilder",575,5589],[5,"ListPrimitiveChunkedBuilder",575,5590],[10,"ListBuilderTrait",575],[5,"ListStringChunkedBuilder",575,5591],[5,"ListBinaryChunkedBuilder",575,5591],[5,"ListNullChunkedBuilder",575,5592],[5,"Box",5593],[10,"Hasher",5594],[10,"ChunkedCollectInferIterExt",759],[10,"ChunkedCollectIterExt",759],[10,"Canonical",773],[10,"ChunkedCollectParIterExt",775],[10,"FromParIterWithDtype",775],[5,"BooleanArray",5595],[5,"BoolIterNoNull",779],[5,"SomeIterator",779],[5,"MetadataEnv",818,5596],[10,"MetadataCollectable",818,5597],[5,"Iter",5598],[5,"IterNames",5598],[5,"File",5599],[5,"Mutex",5600],[6,"MetadataMerge",818],[5,"RwLock",5560],[5,"ObjectArray",1106],[6,"ArrowDataType",1534,5601],[10,"Any",5580],[10,"Debug",5553],[5,"BitmapIter",5602],[6,"ZipValidity",5603],[8,"ObjectValueIter",1106],[5,"ObjectChunkedBuilder",1183],[8,"ObjectChunked",1534],[10,"AnonymousObjectBuilder",1206],[5,"ObjectRegistry",1206],[8,"ObjectConverter",1206],[8,"BuilderConstructor",1206],[17,"FuncRet"],[10,"ChunkApply",1234],[10,"ChunkApplyKernel",1234],[10,"ChunkSort",1234],[10,"ChunkUnique",1234],[10,"ChunkCast",1234],[6,"FillNullStrategy",1234],[10,"ChunkCompare",1234],[10,"ChunkExplode",1234],[5,"OffsetsBuffer",5604],[10,"ChunkFillNullValue",1234],[10,"ChunkFilter",1234],[10,"ChunkFull",1234],[10,"ChunkFullNull",1234],[10,"ChunkAnyValue",1234],[10,"IsFirstDistinct",1234],[10,"IsLastDistinct",1234],[10,"ChunkAgg",1234],[10,"ChunkQuantile",1234],[10,"ChunkExpandAtIndex",1234],[10,"ChunkReverse",1234],[10,"ChunkRollApply",1234],[10,"ChunkSet",1234],[10,"ChunkShift",1234],[10,"ChunkShiftFill",1234],[10,"ChunkVar",1234],[10,"ChunkTake",1234],[10,"ChunkTakeUnchecked",1234],[10,"ChunkBytes",1234],[10,"ChunkZip",1234],[10,"BinaryFnMut",1360],[10,"StaticArray",1534,5605],[10,"TernaryFnMut",1360],[10,"Error",5606],[10,"UnaryFnMut",1360],[5,"PrimitiveArray",5607],[6,"SearchSortedSide",1401],[10,"SlicedArray",4047,5608],[5,"NoNull",5317],[5,"RowsEncoded",5609],[5,"BinaryArray",5610],[8,"BinaryOffsetChunked",1534],[5,"NaiveDateTime",5611],[6,"PolarsError",4047,5538],[6,"Cow",5612],[8,"Float32Chunked",1534],[8,"Float64Chunked",1534],[10,"ArrayFromIter",1534,5613],[10,"ArrayFromIterDtype",1534,5613],[10,"AsRefDataType",1534,5546],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5614],[10,"From",5570],[5,"CategoricalChunked",3004,5615],[10,"CategoricalMergeOperation",3004,5616],[10,"LogicalType",1534,5617],[5,"Logical",1534,5617],[5,"OwnedObject",1534,5558],[6,"UnknownKind",1534,5546],[5,"CompatLevel",1534,5546],[6,"TimeUnit",1534,5618],[5,"UInt8Type",1534],[5,"UInt16Type",1534],[5,"Int8Type",1534],[5,"Int16Type",1534],[5,"DateType",1534],[5,"TimeType",1534],[5,"BinaryOffsetType",1534],[5,"DecimalType",1534],[5,"DatetimeType",1534],[5,"DurationType",1534],[5,"CategoricalType",1534],[6,"ArrowTimeUnit",1534],[10,"ArrayCollectIterExt",4047,5613],[8,"Utf8ViewArray",5583],[8,"UInt32Chunked",1534],[5,"Error",5553],[10,"NumericNative",1534],[10,"Into",5570],[5,"ArrowField",4047],[6,"PrimitiveType",5619],[6,"IntegerType",5620],[10,"Borrow",5621],[8,"SmartString",1534],[10,"NoOption",5622],[10,"GetAnyValue",1534,5558],[8,"Int128Chunked",1534],[10,"IntoScalar",1534,5623],[6,"Ordering",5624],[6,"PhysicalType",5620],[8,"UInt8Chunked",1534],[8,"UInt16Chunked",1534],[8,"UInt64Chunked",1534],[8,"Int8Chunked",1534],[8,"Int16Chunked",1534],[8,"Int32Chunked",1534],[8,"Int64Chunked",1534],[8,"PlIdHashMap",1534,5548],[5,"CategoricalChunkedBuilder",3004,5625],[5,"GlobalRevMapMerger",3004,5616],[6,"RevMapping",3145,5626],[6,"CategoricalOrdering",3145,5626],[5,"CatIter",3004,5615],[1,"u128"],[5,"DataFrame",3341],[5,"StringCacheHolder",3200,5627],[5,"ErrString",3229,5538],[6,"PolarsWarning",3229,5628],[10,"Display",5553],[6,"FloatFmt",3309],[1,"char"],[5,"Schema",4737],[10,"IntoSeries",4817,5629],[6,"NullStrategy",3341],[6,"UniqueKeepStrategy",3341],[8,"PlHashSet",1534,5575],[5,"ArrowSchema",4047,5630],[5,"Row",3900],[5,"GroupBy",3642],[5,"RangeInclusive",5571],[5,"RangeFrom",5571],[5,"RangeTo",5571],[5,"RangeToInclusive",5571],[5,"RangeFull",5571],[5,"RecordBatchIter",3341],[5,"PhysRecordBatchIter",3341],[10,"IntoVec",5317],[10,"RangeBounds",5571],[8,"SchemaRef",4737],[6,"IndexOrder",4047,5631],[5,"StructArray",5632],[8,"RecordBatch",5633],[5,"UnpivotArgsIR",3613],[5,"GroupsIdx",3642,5540],[8,"IdxVec",5634],[6,"GroupByMethod",3642],[5,"SlicedGroups",3642,5540],[5,"GroupsProxyParIter",3642,5540],[10,"UnindexedConsumer",5635],[6,"GroupsIndicator",3642,5540],[8,"IdxItem",3642,5540],[10,"IntoGroupsProxy",3642,5636],[5,"Copied",5637],[5,"Zip",5638],[5,"GroupsProxyIter",3642,5540],[8,"GroupsSlice",3642,5540],[1,"array"],[8,"DynArgs",4047,5639],[10,"IsFloat",5640],[10,"NativeType",5641],[10,"AggList",3884,5642],[10,"TakeExtremum",3884],[10,"PhysicalAggExpr",3897],[6,"AnyValueBuffer",3900,5643],[6,"AnyValueBufferTrusted",3900,5643],[5,"IdHasher",3999,5644],[5,"IdxHash",3999,5644],[5,"HashMap",5645],[10,"BuildHasher",5594],[10,"VecHash",3999,5646],[10,"Allocator",5647],[5,"BorrowedFd",5648],[10,"AsFd",5648],[10,"AsRawFd",5649],[20,"MaybeUninit",5650],[10,"NumOpsDispatchChecked",4047,5549],[5,"ChunkId",4047,5559],[5,"RollingVarParams",4047,5639],[5,"RollingQuantileParams",4047,5639],[6,"NonExistent",4047,5651],[10,"Ord",5624],[5,"CStr",5652],[10,"Default",5653],[5,"Weak",5568],[10,"Scalar",5654],[10,"PartialEq",5624],[5,"Error",5655],[6,"Error",5656],[5,"Utf8Error",5657],[5,"TryReserveError",5658],[1,"never"],[5,"PathBuf",5659],[5,"Path",5659],[5,"OsStr",5660],[10,"ToOwned",5612],[5,"CString",5661],[5,"OsString",5660],[10,"FromData",4633,5662],[5,"Buffer",5663],[10,"FromDataUtf8",4633,5662],[10,"FromDataBinary",4633,5662],[5,"ListArray",5664],[6,"Ambiguous",4047,5651],[10,"NamedFromOwned",4047,5665],[10,"PartialOrd",5624],[10,"Hash",5594],[10,"SeriesTrait",4817,5563],[10,"CloneToUninit",5587],[10,"ChunkAggSeries",4047,5666],[10,"QuantileAggSeries",4047,5667],[10,"IndexToUsize",4047,5668],[10,"NamedFrom",4047,5665],[5,"Pin",5669],[5,"Request",5606],[5,"BorrowedCursor",5670],[5,"IoSliceMut",5671],[6,"SeekFrom",5671],[10,"VarAggSeries",4047,5672],[5,"AllocError",5647],[5,"BTreeMap",5673],[5,"IoSlice",5671],[5,"AnonymousBuilder",4639,5674],[5,"Offsets",5604],[5,"MutableNullArray",4662,5675],[5,"MutableBitmap",5676],[5,"Utf8Array",5677],[10,"SchemaNamesAndDtypes",4737],[8,"ArrowSchemaRef",5630],[10,"IndexOfSchema",4737],[17,"DataType"],[8,"Metadata",5601],[5,"SeriesIter",4817,5678],[8,"SeriesPhysIter",4817,5678],[5,"Rc",5679],[10,"LhsNumOps",5256,5539],[10,"NumOpsDispatch",5256,5539],[6,"NullBehavior",5289],[5,"SuperTypeFlags",5317,5680],[5,"SuperTypeOptions",5317,5680],[10,"Container",5317],[5,"TrustMyLength",5317,5557],[10,"CustomIterTools",5317,5681],[10,"FromIteratorReversed",5682],[10,"FromTrustedLenIterator",5317,5681],[5,"Wrap",5317],[5,"LazyCompact",5683],[5,"SmartString",5684],[8,"FillNullLimit",1234],[10,"InitHashMaps",1534],[10,"InitHashMaps2",1534],[5,"TrueT",1534],[15,"IO",3295],[15,"Context",3295],[15,"Count",3881],[15,"Slice",3882],[10,"ListFromIter",4047],[10,"Utf8FromIter",4706],[10,"BinaryFromIter",4706],[6,"BitRepr",4817]],"r":[[0,5644],[4,5627],[13,5627],[16,5627],[32,5627],[439,5581],[467,5582],[468,5582],[469,5584],[472,5585],[473,5586],[474,5582],[575,5588],[576,5588],[577,5591],[578,5589],[580,5592],[581,5590],[582,5591],[823,5567],[829,5597],[830,5596],[834,5566],[835,5569],[1152,5685],[1432,5608],[1448,5608],[1535,5558],[1537,5613],[1538,5613],[1539,5613],[1540,5601],[1542,5546],[1558,5615],[1561,5615],[1562,5625],[1563,5616],[1564,5626],[1566,5546],[1567,5546],[1568,5546],[1569,5546],[1580,5561],[1590,5572],[1591,5572],[1606,5558],[1608,5616],[1612,5548],[1613,5668],[1614,5548],[1615,5548],[1616,5575],[1617,5548],[1642,5623],[1656,5617],[1657,5617],[1675,5558],[1679,5575],[1680,5575],[1681,5548],[1682,5575],[1683,5575],[1684,5575],[1690,5626],[1693,5605],[1705,5618],[1706,5546],[1733,5546],[1931,5616],[1948,5617],[2078,5546],[2599,5616],[2600,5616],[2612,5546],[2698,5615],[2736,5615],[3004,5615],[3005,5615],[3006,5625],[3007,5616],[3008,5626],[3010,5616],[3014,5626],[3031,5616],[3097,5616],[3098,5616],[3116,5615],[3120,5615],[3145,5626],[3150,5626],[3200,5627],[3206,5627],[3209,5627],[3217,5627],[3219,5626],[3224,5626],[3225,5627],[3226,5627],[3227,5627],[3228,5627],[3235,5538],[3242,5538],[3243,5538],[3244,5628],[3258,5538],[3266,5538],[3273,5628],[3278,5538],[3280,5538],[3281,5538],[3282,5538],[3283,5538],[3284,5628],[3285,5538],[3299,5686],[3300,5686],[3301,5686],[3302,3999],[3642,5540],[3648,5540],[3649,5540],[3650,5540],[3651,5540],[3652,5540],[3653,5540],[3656,5540],[3658,5636],[3670,5540],[3884,5642],[3902,5643],[3903,5643],[3998,5687],[3999,5644],[4000,5644],[4001,5644],[4002,5646],[4005,5646],[4006,5646],[4047,5651],[4048,5568],[4049,5581],[4050,5613],[4051,5550],[4053,5630],[4054,5582],[4055,5584],[4057,5615],[4058,5615],[4059,5625],[4060,5616],[4061,5626],[4062,5666],[4063,5559],[4064,40],[4065,467],[4066,759],[4067,759],[4071,3341],[4073,5639],[4077,5662],[4078,5662],[4079,5662],[4081,5616],[4084,5668],[4085,5559],[4086,5631],[4087,5668],[4088,5629],[4089,5317],[4091,5688],[4092,5688],[4093,5688],[4096,5539],[4098,5591],[4099,5589],[4100,575],[4101,5689],[4102,5590],[4103,5591],[4107,5665],[4108,5665],[4110,467],[4112,5651],[4116,5559],[4117,5559],[4118,5539],[4119,5549],[4123,5538],[4124,779],[4125,1106],[4126,5538],[4127,5586],[4128,5667],[4129,5573],[4132,5626],[4133,5574],[4134,5639],[4135,5639],[4138,4711],[4141,4817],[4142,5563],[4144,5608],[4146,5627],[4148,5582],[4150,3341],[4151,3613],[4152,5672],[4153,5646],[4199,5616],[4252,5689],[4255,0],[4268,5689],[4297,0],[4432,5668],[4475,5689],[4477,5616],[4478,5616],[4504,5689],[4510,5538],[4511,5538],[4512,5538],[4513,5538],[4525,5615],[4527,5689],[4533,5615],[4607,5689],[4633,5662],[4634,5662],[4635,5662],[4639,5674],[4662,5675],[4693,5626],[4698,5626],[4699,5608],[4702,5627],[4703,5627],[4704,5627],[4705,5627],[4706,5690],[4707,5690],[4819,5563],[4820,1234],[4823,5629],[4824,5563],[4825,5563],[4830,5678],[4831,5678],[4832,5563],[5256,5539],[5257,5539],[5258,5539],[5264,5539],[5281,5549],[5282,5549],[5321,5681],[5322,5681],[5323,5681],[5326,5680],[5327,5680],[5328,5557],[5343,5691],[5344,5691],[5406,5692],[5407,5680],[5450,5680],[5451,5680],[5453,5693],[5482,5680],[5512,5680],[5529,5693]],"b":[[49,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[50,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add-for-ChunkedArray%3CT%3E"],[52,"impl-Add-for-%26ChunkedArray%3CT%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[71,"impl-ChunkedArray%3CBinaryType%3E"],[72,"impl-ChunkedArray%3CT%3E"],[73,"impl-ChunkedArray%3CStringType%3E"],[101,"impl-ChunkedArray%3CT%3E"],[102,"impl-Container-for-ChunkedArray%3CT%3E"],[121,"impl-Div-for-ChunkedArray%3CT%3E"],[122,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[123,"impl-Div-for-%26ChunkedArray%3CT%3E"],[124,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[131,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[140,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[141,"impl-Debug-for-ChunkedArray%3CT%3E"],[151,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[152,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[155,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[156,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[184,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[185,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[220,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[222,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[223,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[225,"impl-ChunkedArray%3CT%3E"],[226,"impl-Container-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[233,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[234,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkedArray%3CBooleanType%3E"],[238,"impl-ChunkedArray%3CBooleanType%3E"],[239,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[249,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[250,"impl-ChunkedArray%3CBooleanType%3E"],[253,"impl-ChunkedArray%3CBooleanType%3E"],[254,"impl-ChunkedArray%3CT%3E"],[255,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[256,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[257,"impl-Mul-for-ChunkedArray%3CT%3E"],[258,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[263,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[264,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[265,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[266,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[267,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[268,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[269,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[270,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[271,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[272,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[273,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[275,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[276,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[277,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[278,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[279,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[281,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[284,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[294,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[295,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[296,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[297,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[301,"impl-ChunkedArray%3CStringType%3E"],[302,"impl-ChunkedArray%3CListType%3E"],[303,"impl-ChunkedArray%3CListType%3E"],[304,"impl-ChunkedArray%3CStringType%3E"],[315,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[316,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[317,"impl-Rem-for-ChunkedArray%3CT%3E"],[318,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[337,"impl-Container-for-ChunkedArray%3CT%3E"],[338,"impl-ChunkedArray%3CT%3E"],[341,"impl-ChunkedArray%3CT%3E"],[342,"impl-Container-for-ChunkedArray%3CT%3E"],[345,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[346,"impl-Sub-for-ChunkedArray%3CT%3E"],[347,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[348,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[350,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[351,"impl-ChunkedArray%3CBooleanType%3E"],[354,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[355,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[363,"impl-ChunkedArray%3CT%3E"],[364,"impl-ChunkedArray%3CListType%3E"],[369,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[370,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[371,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[372,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[373,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[374,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[401,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[523,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[524,"impl-BinViewChunkedBuilder%3Cstr%3E"],[856,"impl-MetadataProperties"],[857,"impl-Flags-for-MetadataProperties"],[858,"impl-Flags-for-MetadataFlags"],[859,"impl-MetadataFlags"],[925,"impl-Metadata%3CT%3E"],[926,"impl-MetadataTrait-for-Metadata%3CT%3E"],[951,"impl-UpperHex-for-MetadataProperties"],[952,"impl-Debug-for-MetadataProperties"],[953,"impl-LowerHex-for-MetadataProperties"],[954,"impl-Octal-for-MetadataProperties"],[955,"impl-Binary-for-MetadataProperties"],[956,"impl-UpperHex-for-MetadataFlags"],[957,"impl-LowerHex-for-MetadataFlags"],[958,"impl-Octal-for-MetadataFlags"],[959,"impl-Debug-for-MetadataFlags"],[960,"impl-Binary-for-MetadataFlags"],[970,"impl-Flags-for-MetadataProperties"],[971,"impl-MetadataProperties"],[972,"impl-MetadataFlags"],[973,"impl-Flags-for-MetadataFlags"],[984,"impl-Metadata%3CT%3E"],[985,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1028,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1029,"impl-Metadata%3CT%3E"],[1033,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1034,"impl-Metadata%3CT%3E"],[1112,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1113,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1147,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1148,"impl-ObjectArray%3CT%3E"],[1163,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1164,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1174,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1175,"impl-ObjectArray%3CT%3E"],[1177,"impl-ObjectArray%3CT%3E"],[1178,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1180,"impl-Array-for-ObjectArray%3CT%3E"],[1181,"impl-ObjectArray%3CT%3E"],[1184,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1185,"impl-ObjectChunkedBuilder%3CT%3E"],[1187,"impl-ObjectChunkedBuilder%3CT%3E"],[1188,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1772,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1773,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1774,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1775,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1776,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1777,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1778,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1779,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1854,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1855,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1856,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1857,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1858,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1859,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2205,"impl-PartialEq-for-DataType"],[2206,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2215,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2216,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2217,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2218,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2221,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2222,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2223,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2224,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2262,"impl-Display-for-AnyValue%3C\'_%3E"],[2263,"impl-Debug-for-AnyValue%3C\'a%3E"],[2265,"impl-Debug-for-DataType"],[2266,"impl-Display-for-DataType"],[2269,"impl-Display-for-TimeUnit"],[2270,"impl-Debug-for-TimeUnit"],[2281,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2282,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2283,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2285,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2286,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2289,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2290,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2291,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2293,"impl-From%3C%26Field%3E-for-Field"],[2294,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2318,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2320,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2323,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2324,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2325,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2327,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2328,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2329,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2330,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2336,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2337,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2339,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2340,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2341,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2342,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2343,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2344,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2352,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2353,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2354,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2355,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2356,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2357,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2446,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2447,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2448,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2449,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2452,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2453,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2454,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2455,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2589,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2590,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2591,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2592,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2595,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2596,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2597,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2598,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2633,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2634,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2635,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2636,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2637,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2638,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2639,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2640,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2641,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2642,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2655,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2656,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2659,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2660,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2661,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2662,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2665,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2666,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2667,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2668,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2748,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2749,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2750,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2751,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[3051,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3052,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3053,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3054,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3055,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3056,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3071,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3072,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3073,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3074,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3075,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3076,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3091,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3092,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3093,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3094,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3095,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3096,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3107,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3108,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3109,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3110,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3111,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3112,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3268,"impl-Display-for-ErrString"],[3269,"impl-Debug-for-ErrString"],[3362,"impl-Add%3C%26Series%3E-for-DataFrame"],[3363,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3364,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3407,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3408,"impl-Div%3C%26Series%3E-for-DataFrame"],[3409,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3441,"impl-Display-for-DataFrame"],[3442,"impl-Debug-for-DataFrame"],[3473,"impl-Index%3Cusize%3E-for-DataFrame"],[3474,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3475,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3476,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3477,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3478,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3479,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3480,"impl-Index%3C%26str%3E-for-DataFrame"],[3498,"impl-Container-for-DataFrame"],[3499,"impl-DataFrame"],[3505,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3506,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3507,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3508,"impl-Container-for-DataFrame"],[3509,"impl-DataFrame"],[3523,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3524,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3525,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3551,"impl-Container-for-DataFrame"],[3552,"impl-DataFrame"],[3556,"impl-Container-for-DataFrame"],[3557,"impl-DataFrame"],[3560,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3561,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3562,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3582,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3583,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3759,"impl-Display-for-GroupByMethod"],[3760,"impl-Debug-for-GroupByMethod"],[3766,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3767,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3768,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3802,"impl-IntoIterator-for-GroupsIdx"],[3803,"impl-IntoIterator-for-%26GroupsIdx"],[3805,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3806,"impl-IntoParallelIterator-for-GroupsIdx"],[4170,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4171,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4259,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4260,"impl-Default-for-Arc%3CCStr%3E"],[4261,"impl-Default-for-Arc%3Cstr%3E"],[4262,"impl-Default-for-Arc%3CT%3E"],[4316,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4317,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4318,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4351,"impl-Debug-for-PolarsError"],[4352,"impl-Display-for-PolarsError"],[4355,"impl-Debug-for-Arc%3CT,+A%3E"],[4356,"impl-Display-for-Arc%3CT,+A%3E"],[4357,"impl-Pointer-for-Arc%3CT,+A%3E"],[4367,"impl-From%3CError%3E-for-PolarsError"],[4368,"impl-From%3CError%3E-for-PolarsError"],[4369,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4370,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4376,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4377,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4378,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4379,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4381,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4382,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4383,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4384,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4385,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4386,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4387,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4388,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4389,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4390,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4391,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4760,"impl-From%3CArrowSchema%3E-for-Schema"],[4761,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4762,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4763,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4764,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4766,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4838,"impl-Add%3CT%3E-for-%26Series"],[4839,"impl-Add%3CT%3E-for-Series"],[4840,"impl-Add-for-Series"],[4841,"impl-Add-for-%26Series"],[4912,"impl-Div-for-Series"],[4913,"impl-Div-for-%26Series"],[4914,"impl-Div%3CT%3E-for-%26Series"],[4915,"impl-Div%3CT%3E-for-Series"],[4927,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4928,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4929,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4930,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4931,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4932,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4949,"impl-Display-for-Series"],[4950,"impl-Debug-for-Series"],[4962,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[4963,"impl-FromIterator%3Cf32%3E-for-Series"],[4964,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4965,"impl-FromIterator%3Cu32%3E-for-Series"],[4966,"impl-FromIterator%3C%26u32%3E-for-Series"],[4967,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4968,"impl-FromIterator%3Cu64%3E-for-Series"],[4969,"impl-FromIterator%3C%26u64%3E-for-Series"],[4970,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4971,"impl-FromIterator%3Ci32%3E-for-Series"],[4972,"impl-FromIterator%3C%26i32%3E-for-Series"],[4973,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4974,"impl-FromIterator%3Ci64%3E-for-Series"],[4975,"impl-FromIterator%3CString%3E-for-Series"],[4976,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[4977,"impl-FromIterator%3C%26str%3E-for-Series"],[4978,"impl-FromIterator%3C%26i64%3E-for-Series"],[4979,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4980,"impl-FromIterator%3Cbool%3E-for-Series"],[4981,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4982,"impl-FromIterator%3C%26f64%3E-for-Series"],[4983,"impl-FromIterator%3Cf64%3E-for-Series"],[4984,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4985,"impl-FromIterator%3C%26f32%3E-for-Series"],[4986,"impl-FromIterator%3C%26bool%3E-for-Series"],[4987,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4988,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[4989,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4990,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4991,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4992,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4993,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5008,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5009,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5010,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5011,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5012,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5013,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5055,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5056,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5057,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5058,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5059,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5060,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5074,"impl-Mul-for-%26Series"],[5075,"impl-Mul-for-Series"],[5076,"impl-Mul%3CT%3E-for-Series"],[5077,"impl-Mul%3CT%3E-for-%26Series"],[5084,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5085,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5086,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5087,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5088,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5089,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5090,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5091,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5092,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5093,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5094,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5095,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5096,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5097,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5098,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5099,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5100,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5101,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5102,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5103,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5104,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5105,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5106,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5107,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5108,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5109,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5110,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5111,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5112,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5113,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5114,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5115,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5116,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5117,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5118,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5119,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5120,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5125,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5126,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5127,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5128,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5129,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5130,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5139,"impl-Rem%3CT%3E-for-Series"],[5140,"impl-Rem-for-%26Series"],[5141,"impl-Rem%3CT%3E-for-%26Series"],[5173,"impl-Sub%3CT%3E-for-Series"],[5174,"impl-Sub-for-Series"],[5175,"impl-Sub%3CT%3E-for-%26Series"],[5176,"impl-Sub-for-%26Series"],[5197,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5198,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5199,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5200,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5351,"impl-Flags-for-SuperTypeFlags"],[5352,"impl-SuperTypeFlags"],[5424,"impl-Debug-for-SuperTypeFlags"],[5425,"impl-Octal-for-SuperTypeFlags"],[5426,"impl-Binary-for-SuperTypeFlags"],[5427,"impl-LowerHex-for-SuperTypeFlags"],[5428,"impl-UpperHex-for-SuperTypeFlags"],[5437,"impl-SuperTypeFlags"],[5438,"impl-Flags-for-SuperTypeFlags"],[5440,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5441,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5444,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5445,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5448,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5449,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAF8Oqw7nDuoO6w7sDu0O7g7zDvYO+w78DiEP","e":"OzAAAAEAAFQQHwIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADAA/AAAAQgABAEUABQBNAAEAUAAAAFIAAABUAAsAYgADAGcAAABqAAMAbwABAHUADQCEAAMAiQABAIwABQCUAAEAmAAFAKAAAwCmAAMAqwAFALIAAQC3AAUAvwACAMYABADMAAMA0wACANgAAQDbAAYA4wAAAOgADAD6AAMAAAEGAAgBGwAnAQMALAEAAC4BBAA0AQEAOgEAADwBBABCAQAARwEFAE8BAQBSAQAAVAEBAFcBCgBoAQEAbgEAAHIBCAB8AQgAhgEAAIgBBQCQAQAAkgEjALcBKQDlAQIA6wEnABkCBQAjAgAAJQImAE4CTACiAgwAtgIkAN4CDwDvAgEA8gIZAA8DCQAbAwEAHwMBACIDFQA5AwkARAMKAFoDAQBhAyEAhwMSAJwDAACeAwkAqgMDALADAQC0Aw0AywMAAM4DAADVAwcA3gMHAPMDAQD3AwAA+gMDAAIEBQAJBAQAFQQLACgEBAAvBA0APwQGAEkECABTBAEAVwQWAG8EBwB4BAAAegQAAHwEAAB+BAEAgwQQAJUEAACXBAAAmgQDAJ8EAgCjBAAApQQIAK8EAACxBAUAuQQBALwEAAC+BAEAwQQDAMYEAwDLBAIAzwQDANUEAADYBAAA4AQAAOUEAADoBAEA7QQBAPAEAADzBAAA/QQAAAYFAgAMBQcAFgUCABsFAQAeBQAAIAUBACYFAQApBQEAMAUBADYFAAA5BQAAPAUAAD4FAABABQAAQgUAAEcFBABOBQEAUQUHAFoFAQBdBQAAYQUAAGMFAwBoBQEAawUFAHcFFwCQBQEAlAUEAJoFAwChBQcArAUSAMEFCwDOBQEA0QUDAOEFCQD3BQ0ABwYCAAsGBQATBgAAFQYNACYGAAAoBgAALQYBADAGAAAyBgIANgYAADgGAAA7BgAAPgYAAEAGAQBDBgAARQYCAEkGDABXBgAAWQYBAFwGAABeBgEAYQYAAGMGAQBmBgAAaAYBAGsGAwByBgAAdgYBAHoGAAB9BgAAfwYAAIEGAwCGBgAAiQYIAJMGAgCXBgQAngYBAKIGAACkBgAAqQYCAK0GAQCwBgAAsgYBALUGAAC3BgEAugYAALwGAQC/BgAAwQYBAMQGAADGBgAAyQY7AAsHBAASBwkAHQcEACMHAwAoBwQALgcAADAHXwCRB4UAGAgHACEIdgCZCAAAmwhHAOoIAgDuCAEA8ggCAPYIAQD6CAAADwkAABEJAAATCRcALwkkAFYJBgBfCR4AhAlAAMcJAADrCQoA+AkAAPoJAgD+CQEAAQoAAAYKBQANCgAAEAoCABUKAwAaCgAAHAodADsKCQBGCg0AVQoeAHUKBwB+ChoAmgoVALEKCwC+CgAAwwoAAMUKAADKCh0A6goEAPAKUQBDCyoAbwtMAL0LBADDCwEAxgsCAMoLBADQCyQA/AsCAAAMCQAODAMAEwwXAC0MAQAwDAQANgwNAEUMBQBMDAAATgwYAGgMAQBuDAIAcwwBAHcMCQCCDAQAiAwBAI0MAACPDAIAkwwBAJYMAACYDAEAngwEAKQMBACqDBAAvAwKAMkMAwDPDAUA1gwlAP0MBQAEDQkAEQ0AABQNCgAgDQUAKw0WAEQNEwBhDQEAZQ0CAGkNAABrDQAAcA0DAIcNAACKDQEAkg0MAKUNAQCrDQAArg0AALINAwC6DQEAxA0CAMwNAADPDQAA1Q0AAN4NAgDiDQAA5Q0AAOcNBADzDQMA+g0GAAMOCQAODgAAEw4EAB8ODgAvDgIAMw4KAD8OAQBCDgMARw4DAEwOCQBXDgcAYA4BAGMOHQCCDigArA4GALcOAgC8DgAAvw4CAMQOAADJDgcA2Q4NAOgOAQDvDgMA9A4BAPgOAgD9DgAA/w4fACIPDAAxDwUAOA8HAEEPFgBaDw4Aag8OAHoPAAB8DwAAfg8DAIUPBgCPDw4AoA8BAKMPEQC3DwQAvw8FAMcPCQDSDwIA1w8HAOAPCwDtDwMA8g8WAAoQBwATEAUAGhAWADQQEQBHEAAASRABAE0QHABsEAIAcBAkAJYQBgCgEAEAqBAiAM4QAgDSEAwA4BAbAP4QFQAVEQAAGBEAAC0RAAAzEQAAPBEAAD8RAABEEQIASBEFAFAREQByEQMAdxECAHsRAQB+EQEAmRECAJ8RBACmEQAAqREHALMRAAC1EQEAuhEtAPARAADyEQwAABIAAAISDAAUEgkAIBIGACgSAAAqEh0ASRIAAEsSCwBYEgAAWhIBAGMSEAB1EgAAdxIMAIYSBwCPEg4AnxIBAKcSAACpEgEArBIBALASAQDEEgAAxhIAAMgSAADMEgMA0hIFANkSBADfEgUA5xIEAPESAAD3EgIA/xIFAAYTCQATEwMAGBMAABwTAgAgEwQAJxMSAD4TAQBBEwEARBMBAEgTAgBVEwMAXRMAAGATAQBjEyAAhxMAAIkTAQCREwEAlRMBAJgTAACeEwEAoRMDAKkTAwC1EwMAuhMAALwTAADBEwEAxBMBAMsTAADTEwMA2RMAAN0TAADfEyIABBQDAAkUAAALFAAADhQBABQUAgAZFAAAGxQAAB8UAgAmFAEAKRQAACsUAQAuFAAANBQAADYUAwBGFAEASRQOAFkUBABlFAAAahQDAG8UAAByFAsAfxQAAIEUAACDFAQAiRQaAKcUAgCsFBAAvhQBAMEUBADIFAUAzxQIANoUAADeFAEA4hQBAOgUAADsFBUAAxUCAAoVDgAaFQQAIhULAC8VBwA6FQAAPxUAAEEVAQBEFQIASBUDAE0VCQBfFQUAaBUAAGoVAwBvFQEAchUAAHUVAgB6FQAAfxUCAIQVBACKFQkAlRUEAJsVBAA="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNHNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCHEHHHCHCSSSSSH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","cloud","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache","finish","finish","fmt","fmt","from","from","hash","hash","hive","hive_start_idx","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_parse_dates","type_id","type_id","utils","vzip","vzip","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","download","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","build_http","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache_ttl","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fields_to_cast","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","float_scientific","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","count_rows","data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compat_level","with_compat_level","with_compression","with_compression","with_compression","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","with_n_rows","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","ensure_not_mapped","from","from","init","into","into_mem_slice","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","arr_from_iter","arr_from_iter_with_dtype","arr_from_iter_with_dtype","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","check_bound","clone","clone_into","clone_to_uninit","count","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","full_null","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","propagate_nulls","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","with_validity","with_validity_typed","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_schema","check_schema","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_include_file_path","with_include_file_path","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_slice","with_slice","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","data_page_size","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distinct_count","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_and_compress","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","full","get_writer","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","__clone_box","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","field_name","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","live_variables","new","new","null_count","num_rows","schema","serialize","serialize","should_read","take_indices","to_max","to_min","to_min_max","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_schema","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","compression","get_reader_bytes","is_compressed","materialize_projection","maybe_decompress_bytes","overwrite_schema","slice","is_compressed","magic","GZIP","ZLIB0","ZLIB1","ZLIB2","ZSTD","split_slice_at_file"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[154,"polars_io::cloud"],[227,"polars_io::cloud::options"],[417,"polars_io::csv"],[419,"polars_io::csv::read"],[680,"polars_io::csv::read::buffer"],[754,"polars_io::csv::read::buffer::Buffer"],[757,"polars_io::csv::read::schema_inference"],[784,"polars_io::csv::write"],[930,"polars_io::file_cache"],[951,"polars_io::ipc"],[1193,"polars_io::json"],[1291,"polars_io::mmap"],[1314,"polars_io::ndjson"],[1316,"polars_io::ndjson::core"],[1420,"polars_io::parquet"],[1423,"polars_io::parquet::metadata"],[1476,"polars_io::parquet::read"],[1619,"polars_io::parquet::write"],[1849,"polars_io::partition"],[1850,"polars_io::path_utils"],[1857,"polars_io::pl_async"],[1879,"polars_io::predicates"],[1947,"polars_io::prelude"],[1958,"polars_io::utils"],[1970,"polars_io::utils::compression"],[1972,"polars_io::utils::compression::magic"],[1977,"polars_io::utils::slice"],[1978,"dyn_clone::sealed"],[1979,"polars_io::options"],[1980,"core::result"],[1981,"serde::de"],[1982,"polars_io::shared"],[1983,"polars_core::frame"],[1984,"polars_error"],[1985,"core::fmt"],[1986,"core::hash"],[1987,"std::io"],[1988,"polars_arrow::record_batch"],[1989,"core::option"],[1990,"serde::ser"],[1991,"core::any"],[1992,"polars_io::avro::read"],[1993,"polars_arrow::datatypes::schema"],[1994,"polars_io::avro::write"],[1995,"polars_core::schema"],[1996,"alloc::string"],[1997,"alloc::vec"],[1998,"polars_io::cloud::glob"],[1999,"object_store"],[2000,"alloc::sync"],[2001,"polars_io::cloud::polars_object_store"],[2002,"object_store::path"],[2003,"tokio::io::async_write"],[2004,"core::marker"],[2005,"polars_io::cloud::adaptors"],[2006,"std::io::error"],[2007,"crossterm::command"],[2008,"url"],[2009,"bytes::bytes"],[2010,"core::ops::range"],[2011,"core::ops::function"],[2012,"parquet_format_safe::thrift::varint::decode"],[2013,"object_store::aws::builder"],[2014,"object_store::azure::builder"],[2015,"object_store::gcp::builder"],[2016,"core::convert"],[2017,"core::iter::traits::collect"],[2018,"polars_io::csv::read::reader"],[2019,"alloc::boxed"],[2020,"polars_io::csv::read::read_impl::batched"],[2021,"polars_io::csv::read::options"],[2022,"std::path"],[2023,"std::fs"],[2024,"polars_core::datatypes::dtype"],[2025,"polars_core::series"],[2026,"polars_utils::aliases"],[2027,"polars_io::csv::write::writer"],[2028,"polars_io::csv::write::options"],[2029,"core::num::nonzero"],[2030,"polars_io::file_cache::entry"],[2031,"polars_io::ipc::ipc_stream"],[2032,"polars_io::ipc::write"],[2033,"futures_io::if_std"],[2034,"polars_io::ipc::ipc_file"],[2035,"polars_io::ipc::ipc_reader_async"],[2036,"polars_arrow::io::ipc::read::file"],[2037,"polars_utils::mmap::private"],[2038,"polars_arrow::array::struct_"],[2039,"polars_arrow::array"],[2040,"polars_arrow::datatypes"],[2041,"polars_arrow::datatypes::field"],[2042,"polars_arrow::array::struct_::mutable"],[2043,"polars_arrow::array::growable::structure"],[2044,"polars_arrow::bitmap::immutable"],[2045,"polars_arrow::scalar"],[2046,"polars_arrow::array::struct_::iterator"],[2047,"polars_arrow::bitmap::utils::iterator"],[2048,"polars_arrow::bitmap::utils::zip_validity"],[2049,"polars_parquet::parquet::metadata::file_metadata"],[2050,"polars_parquet::parquet::metadata::column_order"],[2051,"polars_parquet::parquet::metadata::row_metadata"],[2052,"polars_parquet::arrow::read::statistics"],[2053,"parquet_format_safe::parquet_format"],[2054,"polars_parquet::parquet::metadata::schema_descriptor"],[2055,"polars_parquet::parquet::error"],[2056,"polars_io::parquet::read::reader"],[2057,"polars_io::parquet::read::read_impl"],[2058,"polars_io::parquet::read::options"],[2059,"polars_io::parquet::write::writer"],[2060,"polars_io::parquet::write::batched_writer"],[2061,"polars_io::parquet::write::options"],[2062,"polars_parquet::arrow::write"],[2063,"polars_parquet::parquet::write"],[2064,"core::iter::traits::iterator"],[2065,"polars_parquet::arrow::write::file"],[2066,"std::sync::mutex"],[2067,"core::future::future"],[2068,"tokio::runtime::task::join"],[2069,"smartstring::alias"],[2070,"polars_core::datatypes::field"],[2071,"avro_schema::file"],[2072,"polars_io::cloud::object_store_setup"],[2073,"polars_io::csv::read::parser"],[2074,"polars_io::file_cache::cache"],[2075,"polars_io::file_cache::utils"],[2076,"polars_io::parquet::read::utils"],[2077,"polars_io::utils::other"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,5,6,0,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,0,11,14,5,6,5,6,5,6,0,6,5,6,5,6,0,0,0,5,0,11,14,20,5,0,0,0,0,0,0,6,5,6,5,6,5,6,5,6,6,5,6,0,5,6,25,0,0,0,0,29,29,29,29,29,26,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,29,26,30,29,26,30,29,26,30,26,26,29,26,30,29,26,30,29,26,30,29,26,30,29,26,30,26,30,26,0,0,0,41,45,37,41,45,37,41,37,0,41,41,41,37,45,37,41,45,37,41,41,45,45,37,41,37,45,37,45,37,41,45,37,41,37,41,41,41,0,41,45,37,41,45,37,41,45,37,41,45,0,0,37,45,37,45,41,45,37,41,45,37,41,45,37,41,45,37,41,45,45,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,58,36,59,60,58,59,60,58,36,61,59,60,58,36,61,59,60,36,36,36,36,58,36,59,60,58,36,59,60,58,58,36,59,59,60,60,36,58,36,61,59,60,58,36,61,59,60,58,36,59,60,58,36,61,59,60,58,36,61,59,60,58,58,58,36,36,36,59,59,59,60,60,60,36,58,36,59,60,58,36,61,59,60,58,61,59,60,36,58,36,59,60,58,36,61,59,60,58,36,61,59,60,36,58,36,59,60,58,36,59,60,58,36,61,59,60,58,36,61,59,60,58,36,61,59,60,58,36,61,59,60,36,36,36,36,0,0,77,77,0,0,0,0,0,0,75,76,77,0,0,76,75,73,74,75,76,77,66,66,66,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,0,73,73,74,75,76,77,73,74,75,76,77,73,74,75,75,76,77,73,74,0,74,73,74,75,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,74,73,74,75,76,77,73,73,73,74,74,74,75,75,75,76,76,76,77,77,77,73,66,73,74,75,76,77,72,71,66,73,74,75,76,76,77,73,73,73,74,75,76,77,73,0,73,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,73,73,74,73,73,66,76,76,76,72,71,74,73,73,73,74,73,73,73,73,73,0,73,74,73,74,75,76,77,73,73,73,74,75,76,77,74,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,72,71,66,73,74,75,76,77,73,72,71,66,73,74,75,76,77,73,73,74,74,73,74,74,73,73,73,73,74,73,73,74,73,73,73,74,73,73,73,73,73,73,74,73,73,74,74,83,0,83,0,83,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,83,174,175,176,83,174,175,176,83,0,174,175,176,83,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,177,177,177,0,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,0,0,81,81,81,81,81,81,81,81,81,91,0,0,0,91,91,91,0,0,89,90,91,89,87,87,88,89,90,91,87,88,89,90,91,89,90,91,89,90,91,89,90,91,91,90,90,89,90,91,87,88,89,90,91,87,88,89,90,91,89,90,91,87,88,89,90,91,89,90,91,89,89,89,90,90,90,91,91,91,87,88,90,90,89,90,91,87,88,89,90,91,89,90,91,87,89,87,89,87,88,89,90,91,87,88,89,90,91,90,89,87,87,90,90,90,90,89,90,91,89,90,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,87,87,87,87,87,87,87,87,87,87,88,0,0,0,94,94,94,94,94,94,0,94,0,94,94,94,94,94,94,94,94,94,0,0,0,0,0,0,0,0,0,0,0,103,103,100,101,102,103,95,96,96,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,102,103,103,102,104,104,107,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,100,102,103,108,104,95,109,107,96,97,100,101,102,103,100,102,103,102,102,102,103,103,103,108,95,109,96,97,108,100,102,103,108,104,95,109,107,96,97,100,101,102,103,104,100,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,102,100,108,104,108,95,109,107,96,96,108,95,100,102,103,108,95,100,101,102,103,102,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,95,109,96,109,107,96,107,108,108,108,95,101,108,95,101,108,95,101,101,97,102,0,116,0,116,0,0,0,112,116,113,115,114,112,116,113,115,114,112,112,112,112,112,112,116,113,115,114,112,116,113,115,114,112,112,116,113,115,114,112,112,112,112,112,113,114,112,116,113,115,114,112,112,114,116,113,115,114,112,116,113,115,114,112,112,113,115,114,112,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,114,114,113,114,114,114,114,115,86,86,0,86,0,86,86,86,86,86,86,0,86,86,86,86,86,68,68,86,86,86,86,0,0,0,0,119,119,119,119,119,119,119,119,119,123,119,123,119,119,119,119,119,119,123,119,123,119,123,119,123,119,119,119,119,123,119,123,119,119,119,123,119,119,123,123,119,123,119,119,119,119,119,123,123,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,123,119,123,119,119,123,119,119,119,119,119,123,119,123,123,123,123,123,123,123,123,123,123,123,119,119,119,0,0,0,0,0,0,133,136,133,136,133,133,133,133,133,133,133,136,133,136,133,0,136,136,133,136,136,133,136,136,133,136,133,136,133,133,133,133,136,136,136,133,133,133,133,133,136,133,133,136,133,136,133,133,136,133,146,0,146,146,0,0,0,0,146,146,145,146,142,144,143,142,144,145,146,143,142,144,145,146,142,144,145,146,145,146,145,145,146,146,146,143,142,144,145,146,143,142,144,145,146,145,146,143,142,144,145,146,145,146,145,145,145,146,146,146,142,144,143,145,146,143,142,144,145,146,144,142,144,145,146,143,142,144,145,146,143,142,144,145,146,143,143,145,0,143,142,143,142,144,145,142,144,143,142,144,145,146,142,142,144,145,146,143,142,144,145,146,143,142,144,145,146,143,142,144,145,146,142,144,145,143,142,144,145,146,142,142,144,142,144,142,144,142,144,142,144,142,144,0,151,0,151,0,151,151,0,0,0,0,151,0,151,151,0,150,151,152,153,154,155,148,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,150,151,152,153,154,155,150,151,152,153,154,155,150,150,151,151,152,152,153,153,154,154,155,155,150,150,150,151,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,150,151,152,153,154,155,155,149,148,150,151,152,153,154,155,155,149,150,151,152,153,154,155,150,150,150,151,151,151,152,152,152,153,153,153,154,154,154,155,155,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,155,149,150,151,152,153,154,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,155,155,150,155,155,148,155,150,150,151,152,153,154,155,148,150,150,151,152,153,154,155,150,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,152,153,154,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,148,148,148,148,149,150,149,0,0,0,0,0,0,0,0,0,0,164,164,164,164,164,164,164,164,0,164,164,166,164,164,164,164,0,164,164,0,0,0,0,0,169,170,0,67,169,170,169,170,169,170,169,170,169,170,170,169,170,169,170,169,170,169,170,169,67,169,169,170,169,170,169,169,169,169,169,170,169,170,169,170,67,169,170,169,170,170,169,170,168,170,169,169,169,169,170,169,170,169,170,169,170,169,170,170,0,0,0,11,14,11,14,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{ce{}{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000`{{{b{c}}}C`{}}0`88{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{{b{c}}d}f{}}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cj}}}Cj}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{ce{}{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}00000{{{b{c}}}C`{}}00777{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{{{b{hEj}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{hc}}e}{{A`{{b{hg}}El}}}{}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{ce{}{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{hc}}e}{{A`{{b{hg}}El}}}{}En{}}`{{{b{hc}}i}{{A`{gEl}}}{}{}{}{{Fn{{b{he}}}{{Fl{g}}}}}}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}00000{{{b{c}}}C`{}}00:::{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{hc}}e}{{A`{nEl}}}{}Gb}```````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}000000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{ce{}{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{{{b{c}}}e{}{}}000{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000077777{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{{b{c}}d}f{}}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{c}}{b{he}}}f{}{}}0000{{{b{c}}}f{}}00000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000000`{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}00000{{{b{Df}}}Ih}11{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{ce{}{}}0000000{{Ibc}{{Hd{c}}}Hh}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh};{DbIh}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}`````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{{{b{c}}}e{}{}}0000`{c{{A`{e}}}{}{}}000000000000000{{Ib{Bl{Il}}}{{Aj{{Hd{J`}}}}}}`{{{b{c}}}C`{}}0000000{{{b{hIb}}{b{Jb}}}f}{ce{}{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{Db}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jd}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Il}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}>{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJf}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJf}}Ad}f}{{{b{c}}}{{b{e}}}{}{}}000{{{b{hc}}}{{b{he}}}{}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jf}}}Jd}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jf}}}}}}{ce{}{}}000{Jf{{Aj{Jh}}}}{c{{A`{e}}}{}{}}0000000{{{b{c}}}C`{}}0003333````{{{b{c}}d}f{}}=<{{{b{Jb}}}Jb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Jb}?>={{{b{{Jj{Jd}}}}}Jd}{{{b{Jb}}{b{hAn}}}B`}={{{b{Jb}}}n}{{{b{Jb}}}Hl}{{{b{Df}}AdAd}Jd}{{{b{Jl}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}?{{{b{c}}}e{}{}}>{{{b{Jl}}{b{Ib}}}{{Aj{Jb}}}}?>{ce{}{}}{{JbHl}Jb}`````````???`{{{Jn{c}}{b{D`}}}{{Aj{{K`{c}}}}}Bf}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Kb}}}Kb}{{{b{Kd}}}Kd}{{{b{Kf}}}Kf}{{{b{c}}{b{he}}}f{}{}}00{{{b{c}}}f{}}000``{{}Kb}{{}Kd}{{}Kf}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kb}}}Ab}{c{{A`{Kd}}}Ab}{c{{A`{Kf}}}Ab}{nf}0000{{{b{Kb}}{b{Kb}}}Ad}{{{b{Kd}}{b{Kd}}}Ad}{{{b{Kf}}{b{Kf}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000{{{b{h{Jn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{K`{c}}}}}{{Aj{f}}}Bf}``{{{b{Kb}}{b{hAn}}}B`}{{{b{Kd}}{b{hAn}}}B`}{{{b{Kf}}{b{hAn}}}B`}{cc{}}0000{{{b{Kb}}{b{hc}}}fBb}{{{b{Kd}}{b{hc}}}fBb}{{{b{Kf}}{b{hc}}}fBb}{{{Jn{c}}Ad}{{Jn{c}}}Bf}`0`{{}n}0000{ce{}{}}0000``{{{Jn{c}}n}{{Jn{c}}}Bf}{c{{Jn{c}}}Bf}````{{{b{Kb}}c}A`Bn}{{{b{Kd}}c}A`Bn}{{{b{Kf}}c}A`Bn}``{{{b{c}}}e{}{}}00{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000088888{{{Jn{c}}Kh}{{Jn{c}}}Bf}{{{Jn{c}}{Bl{Db}}}{{Jn{c}}}Bf}0{{{Jn{c}}{Bl{n}}}{{Jn{c}}}Bf}{{{Jn{c}}{Bl{Ad}}}{{Jn{c}}}Bf}{{{Jn{c}}Db}{{Jn{c}}}Bf}0{{{Jn{c}}G`}{{Jn{c}}}Bf}{{{Jn{c}}Kf}{{Jn{c}}}Bf}15{{{b{h{K`{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kj}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Kl}}}}}}}}{ce{}{}}{c{{A`{e}}}{}{}}0{{{b{Kl}}}{{Aj{J`}}}}0{{{b{c}}}C`{}}{{{b{Kl}}Kj}f}{{{b{Kl}}}{{b{{Dn{Df}}}}}}5`````````````{{{b{c}}d}f{}}000{{{b{h{Kn{c}}}}}{{Aj{Cf}}}Bd}{{{L`{c}}{b{D`}}}{{Aj{{Lb{c}}}}}Bf}{{{L`{c}}{b{D`}}}{{Aj{{`{c}}}}}{LdEhLf}}{{{b{c}}}{{b{e}}}{}{}}0000000000{{{b{hc}}}{{b{he}}}{}{}}0000000000{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}00000`{{{b{M`}}{Bl{{b{Mb}}}}}{{Aj{Md}}}}{{{b{M`}}{Bl{{b{Mb}}}}LjAd}{{Aj{Ah}}}}{{}Mf}{{}Lj}{{}Ll}{{}Ln}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Lh}}}Ab}{c{{A`{Ll}}}Ab}{c{{A`{Ln}}}Ab}{nf}0000000000{{{b{Lh}}{b{Lh}}}Ad}{{{b{Ll}}{b{Ll}}}Ad}{{{b{Ln}}{b{Ln}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000{{{Mh{c}}}{{Aj{Ah}}}Hh}{{{Kn{c}}}{{Aj{Ah}}}Bd}{{{b{h{Mj{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{L`{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lb{c}}}}}{{Aj{f}}}Bf}{{{Mh{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Lh}}{b{hAn}}}B`}{{{b{Ll}}{b{hAn}}}B`}{{{b{Ln}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{M`}}}}{{{b{Lh}}{b{hc}}}fBb}{{{b{Ll}}{b{hc}}}fBb}{{{b{Ln}}{b{hc}}}fBb}{{}n}0000000000{ce{}{}}0000000000``{{{Mh{c}}{Bl{Il}}}{{Mh{c}}}Hh}{{{b{M`}}}{{Aj{Mb}}}}{c{{Mh{c}}}Hh}{c{{Kn{c}}}Bd}{c{{Mj{c}}}Bf}{{}Mf}{c{{L`{c}}}Bf}{c{{L`{c}}}{LdEhLf}}{{{b{h{Mh{c}}}}}{{Aj{Ml}}}Hh}{{{b{h{Kn{c}}}}}{{Aj{D`}}}Bd}{{{b{Lh}}c}A`Bn}{{{b{Ll}}c}A`Bn}{{{b{Ln}}c}A`Bn}{{{Mh{c}}Ad}{{Mh{c}}}Hh}{{{Kn{c}}Ad}{{Kn{c}}}Bd}{{{b{c}}}e{}{}}000{{{b{Ll}}c}{{L`{c}}}Bf}{c{{A`{e}}}{}{}}000000000000000000000{{{b{c}}}C`{}}0000000000{ce{}{}}0000000000{{{Mh{c}}{Bl{{Dd{Db}}}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{{Dd{Db}}}}}{{Kn{c}}}Bd}{{{Mj{c}}Mn}{{Mj{c}}}{}}{{{L`{c}}Mn}{{L`{c}}}Bf}{{{Mj{c}}{Bl{Ln}}}{{Mj{c}}}{}}{{Mf{Bl{Ln}}}Mf}{{{L`{c}}{Bl{Ln}}}{{L`{c}}}Bf}{{MfIl}Mf}{{{Mh{c}}{Bl{{Dd{Jh}}}}}{{Mh{c}}}Hh}{{{Mh{c}}{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}{{Mh{c}}}Hh}{{{Mh{c}}{Bl{n}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{n}}}{{Kn{c}}}Bd}{{Ljc}Lj{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Mh{c}}{Bl{{Dd{n}}}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{{Dd{n}}}}}{{Kn{c}}}Bd}{{Lj{Bl{{Dn{{Fh{Db}}}}}}}Lj}{{{Mh{c}}{Bl{j}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{j}}}{{Kn{c}}}Bd}{{Ljc}Lj{{Gn{{Bl{j}}}}}}{{Ljc}Lj{{Gn{{Bl{n}}}}}}{{{b{h{Lb{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{Ll}}Ahc}{{Aj{f}}}Bf}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{N`}}}N`}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{{}N`}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{N`}}}Ab}{nf}0000{{{b{N`}}{b{N`}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00{{{b{h{Nb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nd{c}}}{{Aj{Ah}}}Hh}{{{b{N`}}{b{hAn}}}B`}{cc{}}0000{{{b{N`}}{b{hc}}}fBb}{{{Nd{c}}{Bl{Kh}}}{{Nd{c}}}Hh}{{}n}0000{ce{}{}}0000`{c{{Nb{c}}}Bf}{c{{Nf{c}}}Bf}{c{{Nd{c}}}Hh}{{{b{N`}}c}A`Bn}{{{Nd{c}}Ad}{{Nd{c}}}Hh}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000088888{{{Nd{c}}Kh}{{Nd{c}}}Hh}4{{{Nb{c}}Nh}{{Nb{c}}}Bf}{{{Nd{c}}Nh}{{Nd{c}}}Hh}{{{Nd{c}}{Bl{{Dd{Db}}}}}{{Nd{c}}}Hh}{{{Nd{c}}Hl}{{Nd{c}}}Hh}{{{Nd{c}}{b{D`}}}{{Nd{c}}}Hh}{{{b{h{Nf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jl}}}{{b{{Fh{G`}}}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{J`}}}{{Aj{f}}}}{cc{}}{{{b{hc}}}JlHh}{{}n}{ce{}{}}{JlNj}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{J`}}}}}}{c{{A`{e}}}{}{}}0{{{b{c}}}C`{}}5`{{{b{hc}}{Bl{Kh}}}{{Aj{D`}}}Nl}``{{{b{c}}d}f{}}{{{b{Nn}}n}{{E`{NnNn}}}}{Nn{{Dn{O`}}}}{cNn{{Hb{}{{H`{f}}}}}}{cNn{{Hb{}{{H`{{Bl{f}}}}}}}}{{Obc}Nn{{Hb{}{{H`{f}}}}}}{{Obc}Nn{{Hb{}{{H`{{Bl{f}}}}}}}}{{{b{Nn}}}{{b{Od}}}}{{{b{hNn}}}{{b{hOd}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nn{{Hj{O`}}}}{{{b{Nn}}n}Ad}{{{b{Nn}}}Nn}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{Of{c}}}{{Aj{n}}}Hh}{{{b{Nn}}}{{b{Ob}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Nn}}{b{Nn}}}Ad}{{{b{Nn}}{b{{b{O`}}}}}Ad}{{{b{Nn}}}{{b{{Fh{Oh}}}}}}{{{Of{c}}}{{Aj{Ah}}}Hh}{{{b{Nn}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0{OjNn}{OlNn}{c{{Aj{{Of{J`}}}}}{{Gn{Il}}}}{{nOb}Nn}{{{b{Ob}}}{{b{{Fh{Oh}}}}}}{{{Of{c}}{Bl{Kh}}}{{Of{c}}}Hh}{{}n}0{ce{}{}}0{Nn{{E`{{Dd{Oh}}{Dd{{Hj{O`}}}}{Bl{On}}}}}}{{{b{Nn}}}}{{{b{Nn}}}{{A@f{{Dd{{Hj{A@`}}}}A@bA@d}}}}{{{b{Nn}}}n}{{{Of{c}}Ad}{{Of{c}}}Hh}{c{{Of{c}}}Hh}{{Ob{Dd{{Hj{O`}}}}{Bl{On}}}Nn}{ObNn}{{Obn}Nn}{{{b{Nn}}}Nn}{{{b{hNn}}{Bl{On}}}f}{{{b{hNn}}nn}f}0{{{b{c}}nn}e{}{}}011{{Nnnn}Nn}0{{{b{Nn}}n}{{E`{{Hj{O`}}{Hj{O`}}}}}}0{{{b{hNn}}}{{Bl{On}}}}{{{b{Nn}}}{{Hj{O`}}}}{{{b{c}}}e{}{}}{{{b{Nn}}{b{Nn}}}On}{{{b{Nn}}b}On}10{e{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{e{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Obe}{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Obe}{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{c{{A`{e}}}{}{}}000{{Ob{Dd{{Hj{O`}}}}{Bl{On}}}{{A`{NnA@h}}}}{{{b{c}}}C`{}}0{{{b{Nn}}}{{Bl{{b{On}}}}}}0{{{b{Nn}}}{{b{{Fh{{Hj{O`}}}}}}}}{{{b{Nn}}}A@b}{ce{}{}}0{{{Of{c}}{Bl{Kh}}}{{Of{c}}}Hh}{{{Of{c}}Ad}{{Of{c}}}Hh}{{{Of{c}}{Bl{n}}}{{Of{c}}}Hh}0{{{Of{c}}{Bl{e}}}{{Of{c}}}Hh{{Gn{Il}}}}{{{Of{c}}{Bl{{Dn{Hf}}}}}{{Of{c}}}Hh}{{{Of{c}}{Bl{{Dn{{Fh{Db}}}}}}}{{Of{c}}}Hh}4{{{Of{c}}{Bl{{b{hj}}}}}{{Of{c}}}Hh}{{{Of{c}}Hl}{{Of{c}}}Hh}{{{Of{c}}{b{D`}}}{{Of{c}}}Hh}{{{b{Nn}}{Bl{On}}}{{Hj{O`}}}}{{Nn{Bl{On}}}Nn}0``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{A@j}}}A@j}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{b{A@j}}n}A@l}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Oh}}{b{A@n}}}{{A`{AA`A@h}}}}`{nf}0{{{b{AA`}}{b{AA`}}}Ad}{{{b{AA`}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@j}}{b{hAn}}}{{A`{fCn}}}}{AAbAA`}{cc{}}0{{}n}0{ce{}{}}0{A@jAAd}{{{b{A@j}}}{{b{{Bl{{Dd{AAf}}}}}}}}``````{{{b{A@j}}}{{b{AAh}}}}`{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}0{AAd{{A`{A@jAAj}}}}11{{{b{c}}}C`{}}0`77``````````{{{b{c}}d}f{}}0{{{AAl{c}}n}{{Aj{AAn}}}Hh}{{AB`n}{{Aj{AAn}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{AAl{c}}{b{Cf}}}{{Aj{{AAl{c}}}}}Hh}{{AB`{b{Cf}}}{{Aj{AB`}}}}{{{b{ABb}}}ABb}{{{b{ABd}}}ABd}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000{{}ABd}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ABb}}}Ab}{c{{A`{ABd}}}Ab}{nf}0000{{{b{ABb}}{b{ABb}}}Ad}{{{b{ABd}}{b{ABd}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000{{{AAl{c}}}{{Aj{Ah}}}Hh}{AB`{{Aj{Ah}}}}{{{b{AAn}}n}Ad}{{{b{ABb}}{b{hAn}}}B`}{{{b{ABd}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABf}}}{{Aj{AB`}}}}{{{b{h{AAl{c}}}}}{{Aj{{b{ABf}}}}}Hh}{{{b{hAB`}}}{{Aj{{b{ABf}}}}}}{{{b{ABb}}{b{hc}}}fBb}{{{b{ABd}}{b{hc}}}fBb}{{}n}0000{ce{}{}}0000{{{b{AAn}}}Ad}``{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jh}}}}}}{Bl{{b{j}}}}}Ah}`{c{{AAl{c}}}Hh}{{{b{hAAn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{AAl{c}}}}}{{Aj{n}}}Hh}{{{b{hAB`}}}{{Aj{n}}}}`{{{AAl{c}}ABd}{{AAl{c}}}Hh}{{AB`ABd}AB`}{{{b{AAn}}}{{b{Ml}}}}{{{b{h{AAl{c}}}}}{{Aj{Ml}}}Hh}{{{b{hAB`}}}{{Aj{Ml}}}}{{{b{ABb}}c}A`Bn}{{{b{ABd}}c}A`Bn}{{{AAl{c}}Ad}{{AAl{c}}}Hh}0{{AB`Ad}AB`}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000043`{ce{}{}}0000{{{AAl{c}}{Bl{{Dd{Db}}}}}{{AAl{c}}}Hh}{{{AAl{c}}{Bl{{Dd{Jh}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dd{Jh}}}}}AB`}{{{AAl{c}}{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}AB`}{{{AAl{c}}{Bl{{Dn{Hf}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dn{Hf}}}}}AB`}{{{AAl{c}}{Bl{{Dd{n}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dd{n}}}}}AB`}{{{AAl{c}}{Bl{j}}}{{AAl{c}}}Hh}{{AB`{Bl{j}}}AB`}{{{AAl{c}}{Bl{{E`{nn}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{E`{nn}}}}}AB`}````````````````{{{b{c}}d}f{}}00000{{{ABh{c}}{b{D`}}}{{Aj{{ABj{c}}}}}Bf}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{{b{ACf}}}ACf}{{{b{c}}{b{he}}}f{}{}}00000{{{b{c}}}f{}}00000000000``{{}ABl}{{}ABn}{{}ACf}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ABl}}}Ab}{c{{A`{ABn}}}Ab}{c{{A`{AC`}}}Ab}{c{{A`{ACb}}}Ab}{c{{A`{ACd}}}Ab}{c{{A`{ACf}}}Ab}`{nf}00000009{{{b{{ABj{c}}}}{b{Ah}}}{{`{{ACj{}{{H`{{Aj{{ACh{A@h}}}}}}}}}}}Bf}{{{b{ABl}}{b{ABl}}}Ad}{{{b{ABn}}{b{ABn}}}Ad}{{{b{AC`}}{b{AC`}}}Ad}{{{b{ACb}}{b{ACb}}}Ad}{{{b{ACd}}{b{ACd}}}Ad}{{{b{ACf}}{b{ACf}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000000000{{{b{{ABj{c}}}}}{{Aj{Kj}}}Bf}{{{ABh{c}}{b{hAh}}}{{Aj{Kj}}}Bf}{{{b{ABl}}{b{hAn}}}B`}{{{b{ABn}}{b{hAn}}}B`}{{{b{AC`}}{b{hAn}}}B`}{{{b{ACb}}{b{hAn}}}B`}{{{b{ACd}}{b{hAn}}}B`}{{{b{ACf}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000000{{}ACf}{{{b{{ABj{c}}}}}{{b{{ACn{{ACl{c}}}}}}}Bf}{{{b{ABl}}{b{hc}}}fBb}{{{b{ABn}}{b{hc}}}fBb}{{{b{AC`}}{b{hc}}}fBb}{{{b{ACb}}{b{hc}}}fBb}{{{b{ACd}}{b{hc}}}fBb}{{{b{ACf}}{b{hc}}}fBb}{{}n}0000000{ce{}{}}0000000{{{b{ACf}}}Ad}0```{c{{ABh{c}}}{BfBf}}``{{{b{ABl}}c}A`Bn}{{{b{ABn}}c}A`Bn}{{{b{AC`}}c}A`Bn}{{{b{ACb}}c}A`Bn}{{{b{ACd}}c}A`Bn}{{{b{ACf}}c}A`Bn}{{{ABh{c}}Ad}{{ABh{c}}}Bf}`{{{b{c}}}e{}{}}00000{{{b{ABl}}c}{{ABh{c}}}Bf}{c{{A`{e}}}{}{}}000000000000000{G`{{Aj{AC`}}}}{AD`{{Aj{ACb}}}}{ADb{{Aj{ACd}}}}{{{b{c}}}C`{}}0000000{ce{}{}}0000000{{{ABh{c}}ABn}{{ABh{c}}}Bf}{{{ABh{c}}{Bl{n}}}{{ABh{c}}}Bf}0{{{ABh{c}}ACf}{{ABh{c}}}Bf}{{{b{h{ABj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ABl}}Ahc}{{Aj{f}}}Bf}{{{b{{ABj{c}}}}{Dd{{ACh{A@h}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{ADd}}{b{{Fh{c}}}}{b{e}}n}{{Aj{f}}}{{Gl{Df}}}{CbLfADf}}`{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Dd{Il}}}}}}}}{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Dd{Il}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{ADd}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{ADd}}}}{{{b{ADd}}}Il}``{{{b{ADh}}c}{}ADj}{{{b{ADh}}c}{}{ADjLf}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{ADh}}}}{{}n}{ce{}{}}{{{b{ADl}}}Kj}{{{b{ADh}}c}ADn{ADjLf}}{{{b{ADh}}e}{{ADn{c}}}Lf{{Fn{}{{Fl{c}}}}Lf}}{c{{A`{e}}}{}{}}0{{AD`e}{}ADj{{Fn{}{{Fl{c}}}}}}{{{b{c}}}C`{}}61````{{{b{c}}d}f{}}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{AE`}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{AEb}}}AEb}{{{b{AEd}}}AEd}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0{{{b{AEd}}}{{b{{Fh{AEb}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AEb}}}Ab}{c{{A`{AEd}}}Ab}{nf}0{{{b{AEb}}}{{b{Jd}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jh}}}}{{{b{AEb}}}{{b{AEf}}}}{{{b{AEb}}{b{hAn}}}B`}{{{b{AEd}}{b{hAn}}}B`}{cc{}}0{JhAEb}{AEhAEb}{{{b{AEb}}}{{Bl{{b{Jh}}}}}}00{{{b{AEd}}{b{Df}}}{{Aj{{b{AEb}}}}}}{{}n}0{ce{}{}}0{{{b{Hf}}}{{Bl{{Dd{{Dn{Df}}}}}}}}{{AEh{Bl{Jh}}{Bl{Jh}}{Bl{Jh}}}AEb}{{Hl{Dd{AEb}}{Bl{n}}}AEd}{{{b{AEb}}}{{Bl{n}}}}{{{b{AEd}}}{{Bl{n}}}}{{{b{AEd}}}{{b{Hl}}}}{{{b{AEb}}c}A`Bn}{{{b{AEd}}c}A`Bn}{{{b{AE`}}{b{AEd}}}{{Aj{Ad}}}}{{{b{hAEd}}{b{{Fh{n}}}}}f}=={{{b{AEb}}}{{Bl{Jh}}}}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000{{{b{c}}}C`{}}0>>{{{b{hAEd}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00```````{{{b{hc}}}{{Aj{Jl}}}{BdHhAEj}}`{{{Bl{{b{{Fh{Db}}}}}}{b{D`}}{Bl{{b{{Fh{Jh}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}`{{{b{{Fh{G`}}}}}Ad}``````{{{b{hn}}nnn}{{E`{nn}}}}","D":"CMf","p":[[1,"reference"],[5,"Private",1978],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1979],[5,"HiveOptions",0,1979],[1,"usize"],[6,"Result",1980],[10,"Deserializer",1981],[1,"bool"],[10,"SerReader",1947,1982],[5,"DataFrame",1983],[8,"PolarsResult",1984],[10,"SerWriter",1947,1982],[5,"Formatter",1985],[8,"Result",1985],[10,"Hasher",1986],[10,"Read",1987],[10,"Write",1987],[10,"ArrowReader",0,1982],[8,"RecordBatch",1988],[6,"Option",1989],[10,"Serializer",1990],[5,"TypeId",1991],[10,"WriteDataFrameToFile",0,1982],[5,"AvroReader",86,1992],[5,"ArrowSchema",1993],[10,"Seek",1987],[6,"AvroCompression",86],[5,"AvroWriter",86,1994],[5,"Error",1985],[5,"Schema",1995],[5,"String",1996],[5,"Vec",1997],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",154,1998],[10,"ObjectStore",1999],[5,"Arc",2000],[1,"tuple"],[5,"PolarsObjectStore",154,2001],[5,"Path",2002],[10,"AsyncWrite",2003],[10,"Unpin",2004],[5,"CloudWriter",154,2005],[5,"Error",2006],[10,"Command",2007],[8,"Result",2006],[5,"Url",2008],[5,"Bytes",2009],[5,"Range",2010],[1,"slice"],[5,"ObjectMeta",1999],[17,"Output"],[10,"FnOnce",2011],[1,"u8"],[10,"VarInt",2012],[6,"AmazonS3ConfigKey",227,2013],[6,"AzureConfigKey",227,2014],[6,"GoogleConfigKey",227,2015],[6,"CloudType",227],[10,"AsRef",2016],[10,"Into",2016],[17,"Item"],[10,"IntoIterator",2017],[5,"CsvReader",419,2018],[10,"PhysicalIoExpr",1879],[10,"MmapBytesReader",1291],[5,"Box",2019],[8,"SchemaRef",1995],[5,"OwnedBatchedCsvReader",419,2020],[5,"BatchedCsvReader",419,2020],[5,"CsvReadOptions",419,2021],[5,"CsvParseOptions",419,2021],[6,"CsvEncoding",419,2021],[6,"CommentPrefix",419,2021],[6,"NullValues",419,2021],[5,"PathBuf",2022],[10,"Fn",2011],[5,"File",2023],[5,"SchemaInferenceResult",757],[6,"DataType",2024],[6,"Buffer",680],[5,"Series",2025],[8,"PlHashSet",2026],[6,"ReaderBytes",1291],[5,"CsvWriter",784,2027],[5,"BatchedWriter",784,2027],[5,"CsvWriterOptions",784,2028],[5,"SerializeOptions",784,2028],[6,"QuoteStyle",784,2028],[8,"NonZeroUsize",2029],[1,"u64"],[5,"FileCacheEntry",930,2030],[5,"IpcStreamReader",951,2031],[5,"IpcWriter",951,2032],[5,"BatchedWriter",951,2032],[10,"AsyncWrite",2033],[10,"Send",2004],[5,"IpcScanOptions",951,2034],[5,"IpcReadOptions",951,2035],[5,"IpcWriterOptions",951,2032],[6,"IpcCompression",951,2032],[5,"IpcReaderAsync",951,2035],[5,"FileMetadata",2036],[1,"i64"],[5,"IpcStreamWriterOption",951,2031],[5,"IpcReader",951,2034],[5,"IpcStreamWriter",951,2031],[8,"ArrowSchemaRef",1993],[5,"CompatLevel",2024],[5,"JsonWriterOptions",1193],[5,"JsonWriter",1193],[5,"JsonReader",1193],[5,"BatchedWriter",1193],[6,"JsonFormat",1193],[5,"MemSlice",2037],[10,"BufRead",1987],[5,"StructArray",1316,2038],[10,"Array",2039],[6,"ArrowDataType",2040],[10,"Any",1991],[5,"JsonLineReader",1316],[5,"Field",2041],[5,"MutableStructArray",2042],[5,"GrowableStruct",2043],[5,"Bitmap",2044],[10,"Scalar",2045],[5,"StructValueIter",2046],[5,"BitmapIter",2047],[6,"ZipValidity",2048],[6,"PolarsError",1984],[5,"FileMetaData",1423,2049],[6,"ColumnOrder",2050],[5,"RowGroupMetaData",2051],[5,"ParquetStatistics",1423],[5,"MutableStatistics",2052],[5,"FileMetaData",2053],[5,"KeyValue",2053],[5,"SchemaDescriptor",2054],[6,"ParquetError",2055],[5,"ParquetReader",1476,2056],[5,"BatchedParquetReader",1476,2057],[5,"ParquetAsyncReader",1476,2056],[5,"ParquetOptions",1476,2058],[6,"ParallelStrategy",1476,2058],[8,"FileMetaDataRef",1423],[5,"ParquetWriter",1619,2059],[5,"BatchedWriter",1619,2060],[5,"ParquetWriteOptions",1619,2061],[6,"ParquetCompression",1619,2061],[5,"GzipLevel",1619,2061],[5,"BrotliLevel",1619,2061],[5,"ZstdLevel",1619,2061],[5,"StatisticsOptions",1619,2062],[8,"RowGroupIterColumns",1619,2063],[10,"Iterator",2064],[5,"FileWriter",2065],[5,"Mutex",2066],[1,"u32"],[1,"i32"],[5,"Path",2022],[10,"Sync",2004],[5,"RuntimeManager",1857],[10,"Future",2067],[10,"GetSize",1857],[5,"JoinHandle",2068],[10,"StatsEvaluator",1879],[5,"ColumnStats",1879],[5,"BatchStats",1879],[8,"String",2069],[5,"Field",2070],[10,"Sized",2004],[5,"Utf8Field",680],[5,"CategoricalField",680],[5,"DatetimeField",680],[15,"Datetime",754]],"r":[[0,1982],[1,1979],[2,1979],[3,1982],[4,1982],[5,1982],[87,1992],[88,1994],[89,2071],[154,1998],[155,2005],[156,2001],[165,2072],[194,1998],[206,2072],[230,2013],[235,2014],[259,2015],[421,2020],[422,2021],[423,2021],[424,2021],[425,2021],[426,2018],[430,2021],[431,2020],[478,2073],[559,757],[785,2027],[786,2027],[787,2028],[791,2028],[792,2028],[930,2074],[931,2075],[932,2030],[939,2074],[941,2075],[951,2032],[952,2032],[953,2035],[954,2034],[955,2035],[956,2034],[957,2031],[958,2031],[959,2031],[960,2032],[961,2032],[1317,2038],[1423,2049],[1441,2052],[1477,2057],[1480,2058],[1481,2056],[1482,2058],[1483,2056],[1564,2076],[1619,2060],[1621,2061],[1623,2061],[1626,2061],[1627,2061],[1628,2059],[1629,2063],[1631,2062],[1634,2061],[1947,1982],[1948,1982],[1949,0],[1957,1849],[1958,2077],[1959,2077],[1960,2077],[1961,2077],[1964,2077],[1965,1970],[1966,2077],[1967,2077],[1968,2077]],"b":[[1321,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1322,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1323,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1324,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1344,"impl-PartialEq-for-StructArray"],[1345,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1351,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1352,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1372,"impl-StructArray"],[1373,"impl-Array-for-StructArray"],[1376,"impl-StructArray"],[1377,"impl-Array-for-StructArray"],[1389,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1390,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1391,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1392,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1400,"impl-StructArray"],[1401,"impl-Array-for-StructArray"],[1417,"impl-Array-for-StructArray"],[1418,"impl-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM8FrQAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGQB+AAMAhQABAIgADQCZAAAAngAGAKcADwC5AAIAvwADAMUAAgDNAAAA0AAAANUADgDqAAEA9gAAAAIBAQAFAQEAGwEQAC8BOQBuAQMAcwEIAIEBHACmAQQArwEBALMBKwDgATgAGgIEACUCAAAoAhEAQwIAAEUCAgBMAisAeQIIAIMCBwCbAgAAqQISAL0CFwDZAgQA4gIgAAQDAQAIAwAACgMGABIDAAAaAxgANQMhAFgDAABaAwIAYgMCAGYDAABoAwUAdAMCAHsDAwCAAxYAowMHAKwDAgCwAwEAtAMEALoDAAC9AwAAwAMAAMIDAADFAwMAygMlAPEDNgApBAMAOAQOAFMEAABVBAYAXgQ1AJYEAQCcBAEAoAQAAKMEAACmBAEAqQQBALAEJQDXBAAA3QQAAN8EBADrBBgABgUBAAwFAQAPBQgAGQUBABwFCQAnBQEAKgUJADUFDQBEBQEASAUBAEsFAABNBQIAUwUAAFUFAABeBQIAYgUAAGUFAQBoBQ0AdwUBAHoFAAB9BQEAgQUJAIwFAACRBQAAkwUHAJ4FAwCkBQUArAUBALoFAgC+BQMAwwUBAMYFAADJBQAAywUAAM8FDQDeBScACwYJABoGAAAcBgIAIAYAACIGAQAlBgEAKAYCACwGEgBBBgUASAYFAE8GAABRBgEAVAYBAFcGAABZBgEAXAYAAF4GAQBhBgEAZAYuAJUGOwDTBgUA4QYPAPkGAQD8BgEA/wYAAAEHBQAJBykAOAcBADsHAABCBwIARgcEAEwHAQBPBwAAUQcGAFoHBABgBwkAawcHAHUHAgCABwEAigcDAJEHDQCgBwAAogcAAKYHCQCxBwEAtAcFAA=="}],\
["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPGPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNONNMNNOOOONNNNNNNNNOMNNCNNMNNOONNNNNMNNOOONNNNNNONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","InterSect","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","Round","RoundSF","SearchSorted","Second","Selector","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","bitand","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cast_with_options","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","on","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","value_name","var","var","var","variable_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","clone_to_uninit","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptState","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","all","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","coalesce","collect","collect_concurrently","complement","concat_impl","concat_impl","concat_impl","contains","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","fetch","fetch_blocking","fill_nan","fill_null","filter","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","fmt","fmt","fmt","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","hive_options","how","include_file_paths","include_file_paths","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","not","null_count","on","optimize","parallel","paths","paths","paths","pivot","profile","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","remove","rename","reverse","right_on","rolling","row_index","row_index","row_index","row_index","row_index","row_index","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cloud_options","with_cloud_options","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_include_file_paths","with_include_file_paths","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_new_streaming","with_null_values","with_optimizations","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_page_size","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","new","next_batch","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","to_writer","to_writer","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","write_df_to_file","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1606,"polars_lazy::dsl::AggExpr"],[1613,"polars_lazy::dsl::BooleanFunction"],[1616,"polars_lazy::dsl::Expr"],[1651,"polars_lazy::dsl::FunctionExpr"],[1696,"polars_lazy::dsl::StringFunction"],[1716,"polars_lazy::dsl::TemporalFunction"],[1718,"polars_lazy::dsl::binary"],[1739,"polars_lazy::dsl::cat"],[1740,"polars_lazy::dsl::dt"],[1796,"polars_lazy::dsl::function_expr"],[2013,"polars_lazy::dsl::function_expr::BooleanFunction"],[2016,"polars_lazy::dsl::function_expr::FunctionExpr"],[2061,"polars_lazy::dsl::function_expr::StringFunction"],[2081,"polars_lazy::dsl::function_expr::TemporalFunction"],[2083,"polars_lazy::dsl::function_expr::cat"],[2085,"polars_lazy::dsl::function_expr::pow"],[2089,"polars_lazy::dsl::function_expr::rolling"],[2122,"polars_lazy::dsl::function_expr::rolling_by"],[2154,"polars_lazy::dsl::function_expr::trigonometry"],[2198,"polars_lazy::dsl::functions"],[2273,"polars_lazy::dsl::python_udf"],[2319,"polars_lazy::dsl::string"],[2380,"polars_lazy::dsl::udf"],[2386,"polars_lazy::frame"],[2864,"polars_lazy::frame::pivot"],[2866,"polars_lazy::prelude"],[3491,"polars_lazy::prelude::DslPlan"],[3546,"polars_lazy::prelude::LiteralValue"],[3549,"dyn_clone::sealed"],[3550,"polars_plan::dsl::meta"],[3551,"polars_plan::dsl::expr"],[3552,"polars_error"],[3553,"core::result"],[3554,"polars_plan::dsl::selector"],[3555,"polars_plan::dsl::array"],[3556,"polars_plan::dsl::list"],[3557,"core::convert"],[3558,"polars_plan::dsl::expr_dyn_fn"],[3559,"alloc::sync"],[3560,"polars_core::series"],[3561,"core::option"],[3562,"core::ops::function"],[3563,"core::marker"],[3564,"polars_plan::plans::visitor"],[3565,"polars_plan::dsl::function_expr"],[3566,"polars_core::datatypes::dtype"],[3567,"polars_core::chunked_array::ops::sort::options"],[3568,"polars_plan::dsl::function_expr::schema"],[3569,"polars_core::datatypes::field"],[3570,"core::any"],[3571,"alloc::vec"],[3572,"polars_plan::dsl::binary"],[3573,"core::clone"],[3574,"alloc::string"],[3575,"polars_plan::dsl::udf"],[3576,"polars_core::chunked_array::cast"],[3577,"polars_plan::dsl::cat"],[3578,"polars_plan::dsl::arity"],[3579,"polars_plan::dsl::function_expr::boolean"],[3580,"polars_plan::dsl::function_expr::cat"],[3581,"polars_plan::dsl::function_expr::datetime"],[3582,"polars_plan::dsl::function_expr::pow"],[3583,"polars_plan::dsl::function_expr::strings"],[3584,"polars_plan::dsl::function_expr::struct_"],[3585,"polars_plan::dsl::functions::temporal"],[3586,"polars_plan::dsl::options"],[3587,"polars_core::utils"],[3588,"polars_lazy::dsl::eval"],[3589,"polars_time::windows::duration"],[3590,"polars_time::windows::group_by"],[3591,"polars_core::datatypes::time_unit"],[3592,"serde::de"],[3593,"polars_plan::plans"],[3594,"polars_core::series::ops"],[3595,"polars_plan::dsl::dt"],[3596,"polars_lazy::dsl::list"],[3597,"polars_arrow::legacy::kernels::ewm"],[3598,"polars_plan::dsl::struct_"],[3599,"polars_core::chunked_array::ops"],[3600,"core::fmt"],[3601,"polars_plan::plans::apply"],[3602,"polars_plan::dsl::function_expr::array"],[3603,"polars_plan::dsl::function_expr::list"],[3604,"polars_plan::dsl::function_expr::binary"],[3605,"polars_plan::dsl::function_expr::range"],[3606,"polars_plan::dsl::function_expr::business"],[3607,"polars_plan::plans::options"],[3608,"polars_core::schema"],[3609,"core::hash"],[3610,"polars_ops::series::ops::interpolation::interpolate"],[3611,"polars_ops::series::ops::is_between"],[3612,"polars_plan::dsl::name"],[3613,"polars_plan::plans::lit"],[3614,"polars_core::utils::supertype"],[3615,"polars_plan::dsl::python_udf"],[3616,"polars_utils::idx_vec"],[3617,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3618,"polars_ops::series::ops::rank"],[3619,"polars_time::group_by::dynamic"],[3620,"polars_core::chunked_array::ops::rolling_window"],[3621,"polars_core::datatypes"],[3622,"polars_core::chunked_array"],[3623,"polars_time::chunkedarray::rolling_window"],[3624,"polars_core::chunked_array::ops::search_sorted"],[3625,"serde::ser"],[3626,"polars_core::series::series_trait"],[3627,"polars_plan::dsl::string"],[3628,"polars_ops::chunked_array::list::to_struct"],[3629,"polars_ops::series::ops::business"],[3630,"polars_arrow::legacy::kernels::time"],[3631,"polars_plan::dsl::function_expr::rolling"],[3632,"polars_plan::dsl::function_expr::rolling_by"],[3633,"polars_plan::dsl::function_expr::trigonometry"],[3634,"polars_core::frame"],[3635,"rayon::iter"],[3636,"pyo3::types::any"],[3637,"pyo3::instance"],[3638,"polars_utils::arena"],[3639,"polars_plan::plans::ir"],[3640,"polars_plan::plans::aexpr"],[3641,"polars_plan::frame::opt_state"],[3642,"polars_plan::plans::anonymous_scan"],[3643,"polars_lazy::scan::anonymous_scan"],[3644,"polars_utils::index"],[3645,"polars_lazy::frame::exitable"],[3646,"polars_utils::aliases"],[3647,"polars_lazy::scan::csv"],[3648,"polars_lazy::scan::ipc"],[3649,"polars_lazy::scan::ndjson"],[3650,"polars_lazy::scan::parquet"],[3651,"polars_lazy::scan::file_list_reader"],[3652,"polars_io::cloud::options"],[3653,"polars_ops::frame::join::args"],[3654,"core::iter::traits::collect"],[3655,"bitflags::iter"],[3656,"std::path"],[3657,"polars_io::options"],[3658,"polars_io::csv::write::options"],[3659,"polars_io::ipc::write"],[3660,"polars_io::json"],[3661,"polars_io::parquet::write::options"],[3662,"smartstring::alias"],[3663,"core::num::nonzero"],[3664,"polars_io::csv::read::options"],[3665,"chrono_tz::timezones"],[3666,"core::cmp"],[3667,"polars_core::frame::group_by::proxy"],[3668,"polars_core::datatypes::any_value"],[3669,"std::io"],[3670,"polars_io::parquet::write::writer"],[3671,"chrono::naive::datetime"],[3672,"polars_plan::dsl::functions::selectors"],[3673,"polars_plan::dsl::functions::horizontal"],[3674,"polars_plan::dsl::functions::arity"],[3675,"polars_plan::dsl"],[3676,"polars_plan::dsl::functions::range"],[3677,"polars_plan::dsl::functions::index"],[3678,"polars_plan::dsl::functions::coerce"],[3679,"polars_plan::dsl::functions::syntactic_sugar"],[3680,"polars_plan::dsl::functions::business"],[3681,"polars_plan::dsl::functions::concat"],[3682,"polars_plan::dsl::functions::correlation"],[3683,"polars_plan::dsl::functions::repeat"],[3684,"polars_plan::client"]],"i":[0,0,0,0,0,28,8,5,0,37,5,56,56,41,5,56,56,28,28,28,69,28,0,28,28,28,60,60,58,5,28,0,28,0,28,5,58,28,0,0,59,28,58,0,0,28,28,5,5,58,28,60,60,60,58,28,37,60,28,28,28,28,28,28,58,58,58,0,58,58,28,41,28,28,55,5,58,0,60,28,41,41,28,28,28,28,5,0,8,28,5,68,0,0,0,28,60,60,60,5,61,61,0,0,28,28,5,60,37,28,41,28,5,0,0,28,5,28,59,57,0,68,41,41,28,60,60,60,28,58,37,5,8,28,28,0,56,56,56,56,56,56,56,58,56,56,56,56,56,58,68,0,60,61,60,5,28,37,5,60,60,69,28,0,0,5,28,28,41,41,28,60,41,41,37,28,37,28,37,0,58,58,58,37,28,41,58,28,41,58,58,58,61,41,37,55,58,28,0,56,41,41,5,28,58,0,41,58,67,60,60,28,28,28,41,28,0,61,28,37,58,28,28,28,28,28,28,5,0,61,28,60,28,28,58,28,60,28,67,0,28,28,8,58,28,28,28,58,0,5,0,0,28,28,28,28,28,28,5,60,5,5,0,60,60,60,59,60,37,28,0,60,60,60,60,60,60,0,28,0,0,8,5,61,37,28,60,28,0,5,0,58,58,60,60,60,28,58,28,28,58,58,58,58,58,58,58,28,41,58,0,28,28,0,28,60,0,28,37,58,58,0,5,5,0,0,61,58,41,58,60,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,4,4,4,4,4,5,5,8,5,5,0,10,11,5,0,66,62,5,10,11,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,10,11,5,10,11,5,5,0,5,0,33,66,5,35,37,0,0,5,0,5,0,8,8,50,10,33,11,4,110,87,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,50,10,33,11,4,110,87,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,5,5,0,65,45,47,35,48,47,0,5,5,0,5,5,5,5,5,5,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,51,52,53,54,37,5,55,41,41,18,56,57,58,59,59,60,61,28,62,63,64,64,65,66,67,68,68,69,70,8,47,0,0,0,0,0,0,10,11,5,5,5,5,10,11,0,5,0,5,5,5,0,5,73,73,5,0,0,0,0,62,63,64,5,18,18,18,62,63,65,66,67,68,70,5,50,10,33,11,4,110,87,51,52,53,54,37,5,55,41,18,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,50,10,33,11,4,110,87,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,37,5,55,41,18,18,18,56,57,58,59,60,61,28,64,65,66,67,68,69,70,8,11,5,5,5,50,10,33,11,4,110,87,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,5,11,5,0,5,0,0,0,5,37,5,5,55,41,18,18,56,57,58,59,60,61,28,64,65,66,67,68,69,70,8,5,5,5,5,55,55,55,41,41,41,56,56,56,57,57,57,58,58,58,59,59,59,60,60,60,61,61,61,64,64,64,65,65,65,66,66,66,67,67,67,68,68,68,69,69,69,70,70,70,8,8,8,85,85,5,5,5,5,65,5,5,5,5,5,87,87,87,5,5,5,5,0,11,5,5,18,5,5,35,48,45,91,5,5,55,41,41,18,56,56,57,57,58,58,59,59,60,60,61,61,28,28,62,63,64,65,66,67,68,69,70,8,47,0,66,65,0,5,50,10,33,11,4,110,87,51,52,53,54,37,5,5,5,5,5,5,5,5,5,5,5,5,5,5,55,41,18,18,18,18,18,18,18,18,18,18,18,18,56,57,58,59,60,61,28,28,28,28,28,62,63,64,65,66,67,67,68,69,70,8,8,8,8,8,47,18,47,0,5,0,11,5,11,5,10,11,5,50,79,16,33,35,91,5,5,4,37,5,5,55,41,56,57,58,59,60,61,28,64,65,66,67,68,69,70,8,11,5,5,62,63,5,70,0,50,10,33,11,4,110,87,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,47,0,0,5,5,50,10,33,11,4,110,87,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,5,107,11,4,41,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,10,11,87,110,5,0,11,5,0,11,5,5,0,5,5,5,5,5,5,5,110,5,0,5,33,33,18,18,5,18,110,18,5,0,5,5,0,33,5,33,33,33,33,0,10,11,5,0,0,11,5,0,0,10,11,5,5,62,63,63,0,10,11,5,0,64,62,63,5,62,5,10,11,5,5,47,5,5,63,5,5,5,33,33,18,62,63,8,47,5,5,0,5,0,5,70,47,5,52,54,4,5,5,5,5,5,0,5,4,5,110,110,5,0,5,5,0,5,5,5,0,5,5,87,0,5,5,33,5,5,47,10,11,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,66,66,18,5,11,11,5,5,62,63,37,5,55,41,18,18,18,56,57,58,59,60,61,28,64,65,66,67,68,69,70,8,11,11,5,11,10,11,5,5,5,5,5,5,5,5,11,5,10,11,5,5,0,5,10,11,5,5,65,5,0,5,5,8,110,110,0,10,11,5,0,18,11,5,5,5,0,51,53,0,62,63,62,11,5,10,110,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,5,33,5,41,56,57,58,59,60,61,28,10,11,110,5,5,50,10,33,11,4,110,87,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,50,10,33,11,4,110,87,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,33,33,5,33,35,50,10,33,11,4,110,87,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,0,4,11,10,11,5,5,10,11,5,5,5,70,10,11,5,70,50,10,33,11,4,110,87,51,52,53,54,37,5,55,41,18,56,57,58,59,60,61,28,62,63,64,65,66,67,68,69,70,8,47,63,0,52,54,64,62,62,63,33,87,63,62,63,62,63,62,63,63,62,63,62,63,33,33,62,63,62,62,63,62,5,62,203,204,205,203,204,205,203,206,207,208,209,210,211,211,212,213,209,214,215,216,217,218,214,213,216,210,219,218,220,219,219,220,211,212,216,217,218,217,218,217,215,213,220,209,215,221,222,223,224,225,226,227,228,229,230,231,232,232,224,225,221,224,225,221,225,221,233,234,226,235,236,237,237,222,236,238,239,240,241,237,221,242,243,244,245,246,247,238,235,237,248,249,250,251,252,253,248,249,254,251,252,253,255,256,257,257,254,250,255,256,258,258,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,28,56,56,56,56,28,28,28,28,28,28,28,60,60,58,28,28,0,28,58,28,0,59,28,58,28,28,58,28,60,60,60,58,28,60,28,28,28,28,28,28,58,58,58,58,58,28,28,28,58,60,28,28,28,28,28,28,28,60,60,60,61,61,28,28,60,28,28,0,28,28,59,57,28,60,60,60,28,58,28,28,56,56,56,56,56,56,56,58,56,56,56,56,56,58,60,61,60,28,60,60,28,28,28,28,60,28,28,58,58,58,28,58,28,58,58,58,61,58,28,56,28,58,58,60,60,28,28,28,28,0,61,28,58,28,28,28,28,28,28,61,28,60,28,28,58,28,60,28,28,28,58,28,28,28,58,28,28,28,28,28,28,60,60,60,60,59,60,28,0,60,60,60,60,60,60,28,0,61,28,60,28,0,58,58,60,60,60,28,58,28,28,58,58,58,58,58,58,58,28,58,28,28,28,60,28,58,58,61,58,58,60,0,0,0,0,0,206,207,208,221,222,223,224,225,226,227,228,229,230,231,232,232,224,225,221,224,225,221,225,221,233,234,226,235,236,237,237,222,236,238,239,240,241,237,221,242,243,244,245,246,247,238,235,237,248,249,250,251,252,253,248,249,254,251,252,253,255,256,257,257,254,250,255,256,258,258,0,57,59,59,0,59,133,133,133,133,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,134,134,134,134,0,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,63,0,0,0,0,0,62,63,0,0,0,0,0,0,0,0,0,62,63,63,0,62,63,62,63,0,0,0,0,0,0,0,62,63,0,0,0,0,62,63,62,63,62,0,0,0,0,142,114,142,114,142,114,142,142,142,142,114,142,114,142,142,114,142,142,142,142,142,142,114,142,142,114,114,142,114,142,114,142,142,114,142,114,142,114,114,142,114,142,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,0,47,47,47,47,47,0,151,151,151,151,151,151,0,0,0,0,0,0,0,0,151,0,151,151,151,151,151,151,0,0,0,151,157,139,150,154,159,160,161,162,151,139,139,150,151,152,139,139,150,151,151,151,151,151,151,151,151,152,157,139,150,154,159,160,161,162,151,152,157,139,150,154,159,160,161,162,151,139,139,160,162,157,139,139,157,139,150,154,159,160,161,162,151,157,139,150,154,159,160,161,162,151,157,139,150,154,159,160,161,162,151,151,163,163,159,161,160,162,152,139,139,151,163,163,159,151,139,139,139,154,160,162,151,152,157,139,150,154,159,160,161,162,151,152,157,139,150,154,159,160,161,162,151,139,139,139,139,151,152,157,157,139,139,150,154,159,160,161,162,151,139,139,151,139,139,151,157,139,157,139,139,139,152,163,163,159,161,163,159,161,139,151,151,151,151,151,152,152,157,139,139,139,150,154,159,160,161,162,151,151,151,151,151,151,151,139,139,163,163,159,162,139,139,139,150,160,162,152,160,162,154,152,157,139,150,154,159,160,161,162,151,139,151,151,151,152,157,139,150,154,159,160,161,162,151,151,151,151,151,151,139,139,152,139,172,139,139,152,139,139,150,161,162,139,139,139,139,139,160,139,139,163,159,161,154,160,162,154,152,159,161,159,161,151,139,152,139,162,163,159,161,0,139,139,163,159,161,160,162,151,139,139,152,139,163,159,161,154,160,162,139,139,139,139,139,139,154,139,139,139,139,151,139,139,139,139,139,139,139,139,139,154,139,139,139,139,151,151,152,139,151,139,150,139,139,139,157,139,150,154,159,160,161,162,151,151,139,152,157,139,150,154,159,160,161,162,151,152,157,139,150,154,159,160,161,162,151,152,157,139,150,154,159,160,161,162,151,151,139,139,139,139,139,139,162,152,139,152,157,139,150,154,159,160,161,162,151,152,161,159,159,161,139,139,139,139,139,139,159,139,159,159,159,159,159,159,159,161,159,161,159,161,159,159,163,159,159,161,161,139,159,139,163,159,161,139,139,159,159,163,159,161,139,163,139,159,159,161,161,159,161,159,161,159,139,159,159,139,139,159,159,139,139,0,0,0,0,0,168,168,190,191,191,81,168,0,81,191,191,191,190,81,0,0,191,0,81,81,191,191,191,168,81,81,81,81,168,191,191,191,191,191,0,81,0,0,0,0,168,0,0,185,185,81,190,190,0,0,191,185,185,190,0,0,81,191,0,0,168,0,81,81,168,191,81,81,81,191,191,191,191,191,191,191,81,0,167,119,76,171,168,178,185,179,190,118,180,181,191,192,141,81,76,76,76,153,153,153,153,178,167,119,76,197,171,168,178,185,196,179,190,118,180,181,191,192,141,81,167,119,76,197,171,168,178,185,196,179,190,118,180,181,191,192,141,81,167,119,76,171,168,178,185,179,190,118,180,181,191,192,141,81,167,119,76,171,168,178,185,179,190,118,180,181,191,192,141,81,167,119,76,76,171,168,178,185,185,179,179,190,190,118,118,180,180,181,181,191,192,141,141,81,167,119,76,171,76,179,181,81,181,76,76,167,119,171,178,185,179,118,180,181,192,141,81,167,119,76,197,171,168,178,185,196,179,190,118,180,181,191,192,141,81,167,119,76,197,171,168,178,185,196,179,190,118,180,181,191,192,141,81,118,81,81,167,119,76,171,168,178,185,179,190,118,180,181,191,192,141,81,141,81,167,119,76,197,171,168,178,185,196,179,190,118,180,181,191,192,141,81,167,119,76,171,168,178,185,179,190,118,180,181,191,192,141,167,167,167,119,119,119,76,76,76,171,171,171,168,168,168,178,178,178,185,185,185,179,179,179,180,180,180,181,181,181,192,192,192,141,141,141,167,167,119,76,76,153,171,168,168,178,185,185,179,190,118,180,181,191,192,141,192,167,119,76,197,171,171,168,178,185,196,179,190,118,180,181,191,192,141,81,141,191,194,167,119,76,171,168,178,185,179,190,118,180,181,191,192,141,171,178,167,178,167,119,167,119,76,197,171,168,178,185,196,179,190,118,180,181,191,192,141,81,167,119,76,197,171,168,178,185,196,179,190,118,180,181,191,192,141,81,81,168,76,76,185,76,171,167,111,76,196,191,178,179,180,181,191,118,76,76,76,197,76,185,76,76,76,171,153,167,119,197,141,76,76,76,167,119,197,0,141,194,181,153,153,197,167,119,76,171,168,178,185,179,190,118,180,181,191,192,141,81,178,171,192,171,167,181,171,171,81,191,167,119,76,171,168,178,185,179,190,118,180,181,191,192,141,81,76,168,185,141,179,181,76,76,76,76,167,119,76,197,171,168,178,185,196,179,190,118,180,181,191,191,192,141,81,167,119,76,197,171,168,178,185,196,179,190,118,180,181,191,192,141,81,167,119,76,197,171,168,178,185,196,179,190,118,180,181,191,192,141,81,171,167,119,76,197,171,168,178,185,196,179,190,118,180,181,191,192,141,81,76,76,171,197,171,179,181,259,259,260,261,262,263,264,265,266,267,268,268,264,269,268,262,270,262,266,259,267,271,261,272,269,263,273,274,274,260,275,259,274,272,259,265,272,276,266,259,274,267,271,275,264,268,273,270,268,274,268,264,261,261,265,277,277,277],"f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}00000000000000000000000000{hj}{{hj}{{n{jl}}}}000{jj}{{jj}}{{A`A`}}2{{j{b{Ab}}}j}{{}j}{Adj}{Afj}{{jAh}j}{c{{n{jl}}}{{Al{{Aj{j}}}}}}``{{jc}j{{An{j}}}}4321{{jcAh}j{{An{j}}}}{{jc{Bd{{Bb{B`}}}}}j{{Bl{Bf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{jjc{Bd{{Bb{B`}}}}}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{{b{j}}{b{Cbc}}b}{{n{Cdl}}}{{Cf{{b{j}}b}{{Bh{{n{Cdl}}}}}}}}{{jc{b{{Aj{j}}}}{Bd{{Bb{B`}}}}}j{{Bl{{b{Cb{Aj{Bf}}}}}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{jCh{b{{Aj{j}}}}AhAh}j}{{ce{Bd{{Bb{B`}}}}Ah}j{{Bl{{b{Cb{Aj{Bf}}}}}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}{{Al{{Aj{j}}}}}}{jj}{{jjCjCl}j}11111{{jj}j}2>=2>=2{{jCn}j}{{cD`}j{{Al{{Aj{j}}}}}}4{cj{{An{j}}}}{{{b{Db}}}{{b{{Aj{Dd}}}}}}`{jAd}{{{b{Df}}}{{b{Dh}}}}{{{b{Dj}}}{{b{j}}}}{{{Dl{j}}}j}{{{b{Ab}}}j}{{j{Bj{Dn}}}j}`{jE`}{{jEbj}j}{{A`A`}}0{{{b{c}}}{{b{e}}}{}{}}000000000000000000000000000000000{{{b{Cbc}}}{{b{Cbe}}}{}{}}000000000000000000000000000000000?{{jcg{Dl{Ah}}}j{{An{j}}}{{An{j}}Ed}{{Al{{Aj{e}}}}}}{{jj{Ef{Ah}}{Dl{Eh}}}j}`{{{b{Ej}}{b{Ab}}}{{n{Ell}}}}{{En{Dl{j}}}{{n{jl}}}}{{{b{Df}}{b{Cb{Aj{Bf}}}}}{{n{{Bj{Bf}}l}}}}{{{b{F`}}BfBf}{{n{Bfl}}}}{{En{Dl{j}}}j}{{jCl}j}0{{jClFb}j}`{jFd}{jj}0{{jjj}j}{{jj}j}0{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Dj}}}Dj}{{{b{j}}}j}{{{b{Fn}}}Fn}{{{b{Eb}}}Eb}{{{b{{Bd{c}}}}}{{Bd{c}}}Ed}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Ch}}}Ch}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{A`}}}A`}{{{b{En}}}En}{{{b{c}}{b{Cbe}}}f{}{}}00000000000000000000000000{{{b{c}}}f{}}000000000000000000000000000000{{{b{{Aj{j}}}}}j}{{{b{Ab}}}j}{cj{{Hn{El}}}}{{eAh}{{n{jl}}}{{An{j}}Ed}{{Al{{Aj{c}}}}}}{e{{n{jl}}}{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{c{b{Ab}}Ah}j{{Al{{Aj{j}}}}}}{{Adc}j{{An{j}}}}{{Afc}j{{An{j}}}}{jj}00021{{jjI`}j}{{jAh}j}{{jceAh}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}111{{ce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}2{{IbjIdAh}j}0{{j{Dl{If}}{Bj{{Dl{El}}}}AhAh}j}{{jjIhIj}j}{Glj}{{jjIhIj{Bj{Il}}{Bj{El}}}j}0```{{}j}{{}{{Bd{{Bb{B`}}}}}}{{}{{Bd{{Bb{F`}}}}}}{{}{{Bd{{Bb{In}}}}}}{{}Gl}{{}Gn}{{}Hb}{{}Hd}{{}Hf}{{}Hh}{{}Hl}{jj}{Id{{b{c}}}{}}000000000000000{{{b{{Bd{c}}}}}b{}}111111111111111111{Id{{b{Cbc}}}{}}000000000000000000000000000000000{c{{n{Dj}}}J`}{c{{n{j}}}J`}{c{{n{Fn}}}J`}{c{{n{Eb}}}J`}{c{{n{{Bd{{Bb{Df}}}}}}}J`}{c{{n{{Bd{Bf}}}}}J`}{c{{n{{Bd{{Bb{Jb}}}}}}}J`}{c{{n{G`}}}J`}{c{{n{Gb}}}J`}{c{{n{Gd}}}J`}{c{{n{Gf}}}J`}{c{{n{Gh}}}J`}{c{{n{Gj}}}J`}{c{{n{Ch}}}J`}{c{{n{H`}}}J`}{c{{n{Hb}}}J`}{c{{n{Hd}}}J`}{c{{n{Hf}}}J`}{c{{n{Hh}}}J`}{c{{n{Hj}}}J`}{c{{n{Hl}}}J`}{c{{n{A`}}}J`}{{AfCjJd}j}{{jCjJd}j}{{jj}}{{jc}j{{An{j}}}}{Idf}000000000000000000000000000000000{jj}{Afj}1`{jJf}{{{b{Cl}}}j}{cj{{Al{{Aj{Cl}}}}}}{Gnj}{{jIfAh}j}{{{b{Dj}}{b{Dj}}}Ah}{{{b{j}}{b{j}}}Ah}:{{{b{Fn}}{b{Fn}}}Ah}{{{b{Eb}}{b{Eb}}}Ah}{{{b{{Bd{{Bb{c}}}}}}{b{{Bd{{Bb{c}}}}}}}AhJh}{{{b{{Bd{Bf}}}}{b{{Bd{Bf}}}}}Ah}{{{b{G`}}{b{G`}}}Ah}{{{b{Gb}}{b{Gb}}}Ah}{{{b{Gd}}{b{Gd}}}Ah}{{{b{Gf}}{b{Gf}}}Ah}{{{b{Gh}}{b{Gh}}}Ah}{{{b{Gj}}{b{Gj}}}Ah}{{{b{Ch}}{b{Ch}}}Ah}{{{b{H`}}{b{H`}}}Ah}{{{b{Hb}}{b{Hb}}}Ah}{{{b{Hd}}{b{Hd}}}Ah}{{{b{Hf}}{b{Hf}}}Ah}{{{b{Hh}}{b{Hh}}}Ah}{{{b{Hj}}{b{Hj}}}Ah}{{{b{Hl}}{b{Hl}}}Ah}{{{b{A`}}{b{A`}}}Ah}{{jc}j{{An{j}}}}{{{b{c}}{b{e}}}Ah{}{}}00000000000000000000000000000000000000000000000000{{JjjAh}j}0{{jJl}j}{{jjIh}j}11`{{jc}j{{Hn{El}}}}{{jc}j{{Al{{Aj{Cl}}}}}}{jj}0{{jjj}j}{{JnCj}j}{{Jn{b{Ab}}}j}{{Jn{b{{Aj{c}}}}}j{{Al{Ab}}}};;{{jK`}j}<{{}j}{Afj}77{{}{{Bd{{Bb{B`}}}}}}8{{jj}j}{{{b{Df}}{b{CbKb}}}{{n{fKd}}}}{{{b{F`}}{b{CbKb}}}{{n{fKd}}}}{{{b{Ej}}{b{CbKb}}}{{n{fKd}}}}{{{b{Kf}}{b{CbKb}}}{{n{fKd}}}}{{{b{j}}{b{CbKb}}}{{n{fKd}}}}0{{{b{Fn}}{b{CbKb}}}{{n{fKd}}}}{{{b{Eb}}{b{CbKb}}}{{n{fKd}}}}0{{{b{{Bd{c}}}}{b{CbKb}}}{{n{fKd}}}{}}{{{b{G`}}{b{CbKb}}}{{n{fKd}}}}0{{{b{Gb}}{b{CbKb}}}{{n{fKd}}}}0{{{b{Gd}}{b{CbKb}}}{{n{fKd}}}}0{{{b{Gf}}{b{CbKb}}}{{n{fKd}}}}0{{{b{Gh}}{b{CbKb}}}{{n{fKd}}}}0{{{b{Gj}}{b{CbKb}}}{{n{fKd}}}}0{{{b{Ch}}{b{CbKb}}}{{n{fKd}}}}0{{{b{Gl}}{b{CbKb}}}{{n{fKd}}}}{{{b{Gn}}{b{CbKb}}}{{n{fKd}}}}{{{b{H`}}{b{CbKb}}}{{n{fKd}}}}{{{b{Hb}}{b{CbKb}}}{{n{fKd}}}}{{{b{Hd}}{b{CbKb}}}{{n{fKd}}}}{{{b{Hf}}{b{CbKb}}}{{n{fKd}}}}{{{b{Hh}}{b{CbKb}}}{{n{fKd}}}}{{{b{Hj}}{b{CbKb}}}{{n{fKd}}}}{{{b{Hl}}{b{CbKb}}}{{n{fKd}}}}{{{b{A`}}{b{CbKb}}}{{n{fKd}}}}{{{b{En}}{b{CbKb}}}{{n{fKd}}}}{{jce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}``{{{b{Ab}}c}{{n{jl}}}{{Al{{Aj{j}}}}}}{{j{Bj{Dn}}}j}{cc{}}00000000000{Khj}{{{b{Ab}}}j}{Kjj}3{Ifj}{Klj}{Ahj}{Ehj}{Cjj}{I`j}{Knj}{Djj}{L`j}{Dnj}=={Lb{{Bd{{Bb{Df}}}}}}{Ld{{Bd{{Bb{Df}}}}}}{Ch{{Bd{{Bb{Df}}}}}}{G`{{Bd{{Bb{Df}}}}}}{Gd{{Bd{{Bb{Df}}}}}}{Gj{{Bd{{Bb{Df}}}}}}{Lf{{Bd{{Bb{Df}}}}}}{cc{}}{Gh{{Bd{{Bb{Df}}}}}}{Gb{{Bd{{Bb{Df}}}}}}{Lh{{Bd{{Bb{Df}}}}}}{Lj{{Bd{{Bb{Df}}}}}}444444{GbCh}{GhCh}{LfCh}7{G`Ch}888888{HhHf}999{ElA`}:{jA`}{{{Bb{Ab}}}A`}{{{b{Ab}}}A`}={Cl{{Bd{{Bb{B`}}}}}}``{{jc{Bd{{Bb{B`}}}}Ll}j{{Bl{Bf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}`{{AfjAh}j}{{jc}j{{An{j}}}}{{Afjj}j}{{jIdId}j}{{AdjAh}j}43{Fdj}{{{b{In}}{b{Ln}}M`{b{Dd}}{b{Dd}}}{{Bj{Dd}}}}{{{b{B`}}{b{Ln}}M`{b{{Aj{Dd}}}}}{{n{Ddl}}}}{{{b{Db}}}Id}{{{b{Df}}}{{Bj{{Bd{{Bb{B`}}}}}}}}{{{b{Kf}}{b{Ln}}}{{n{{Bb{Ln}}l}}}}99{{{b{h}}}Ah}{{{b{Dj}}{b{Cbc}}}fMb}{{{b{j}}{b{Cbc}}}fMb}{{jDnDnDnDn}j}{{{b{Fn}}{b{Cbc}}}fMb}{{{b{Eb}}{b{Cbc}}}fMb}{{{b{G`}}{b{Cbc}}}fMb}{{{b{Gb}}{b{Cbc}}}fMb}{{{b{Gd}}{b{Cbc}}}fMb}{{{b{Gf}}{b{Cbc}}}fMb}{{{b{Gh}}{b{Cbc}}}fMb}{{{b{Gj}}{b{Cbc}}}fMb}{{{b{Ch}}{b{Cbc}}}fMb}{{{b{H`}}{b{Cbc}}}fMb}{{{b{Hb}}{b{Cbc}}}fMb}{{{b{Hd}}{b{Cbc}}}fMb}{{{b{Hf}}{b{Cbc}}}fMb}{{{b{Hh}}{b{Cbc}}}fMb}{{{b{Hj}}{b{Cbc}}}fMb}{{{b{Hl}}{b{Cbc}}}fMb}{{{b{A`}}{b{Cbc}}}fMb}{{Afj}j}{{j{Bj{Id}}}j}{{j{Bj{j}}{Bj{Id}}AhAh}j}``{jj}`{cj{{Al{{Aj{Cj}}}}}}{{}Id}000000000000000000000000000000000`{{jjCjCl}j}{{jjj}j}{{jMd}j}{{jj}j}{ce{}{}}000000000000000000000000000000000{{{b{j}}}}{MfAf}{AfAf}{h{{n{{`{Mh}}l}}}}{{{b{Eb}}}Ah}{{jccMj}j{{An{j}}}}{{{b{h}}}Ah}{{{b{h}}Ah}Ah}???{{jc}j{{An{j}}}}{jj}0000000330{{AdjAh}j}{{AfjAh}j}{Jnj}{Mlj}{{jAhAh}j}{{}j}{Afj}7107{jAf}{cjMn}{{jIf}j}:;;:;;{{Mlc}j{{Bl{{b{Ab}}}{{Bh{{n{Ell}}}}}}BnC`}}{{jc{Bd{{Bb{B`}}}}}j{{Bl{Bf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{jjc{Bd{{Bb{B`}}}}}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{j{b{Cbc}}{b{Cb}}}{{n{jl}}}{{Cf{j{b{Cb}}}{{Bh{{n{jl}}}}}}}}{{{b{Db}}{Bj{{b{El}}}}}{{n{Ddl}}}}{{{b{Db}}c}{{n{Ddl}}}{{N`{{b{Cl}}}{{Bh{Cl}}}}}}{c{{Bd{{Bb{B`}}}}}{{Bl{{b{Cl}}}{{Bh{{n{Cll}}}}}}BnC`}}{c{{Bd{{Bb{B`}}}}}{{Bl{{b{{Aj{{b{Cl}}}}}}}{{Bh{{n{Cll}}}}}}BnC`}}{{jc}j{{Cf{j}{{Bh{j}}}}}}{c{{Bd{{Bb{B`}}}}}{{Bl{{b{Dd}}}{{Bh{{n{Ddl}}}}}}BnC`}}{{Ml{Bb{Bl}}}j}{c{{Bd{{Bb{B`}}}}}{{Bl{{b{{Aj{Dd}}}}}{{Bh{{n{Ddl}}}}}}BnC`}}:{{ce{Bd{{Bb{B`}}}}}j{{Bl{{b{Cb{Aj{Bf}}}}}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}{{Al{{Aj{j}}}}}}{{jc{b{{Aj{j}}}}{Bd{{Bb{B`}}}}}j{{Bl{{b{Cb{Aj{Bf}}}}}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{jCh{b{{Aj{j}}}}Ah{Bj{Nb}}}j}2{{{b{Db}}}{{n{Ddl}}}}{{jNdAh}j}1111{{{b{Ab}}}j}{Adj}{Afj}{jj}{c{{n{jl}}}{{Al{{Aj{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMl}`44`{j}{{jc}j{{An{j}}}}0;{{{b{{Aj{Dd}}}}}Db}{c{{Bd{c}}}{}}{{jjj}Gl}{{}Gn}{jA`}{{{b{Ab}}{Dl{Dd}}{Bd{{Bb{B`}}}}c}EnDf}{{{b{j}}{b{Cb{Nf{{b{j}}}}}}}f}{{j{b{Cb{Nf{j}}}}}f}>>{Cjj}?``9{{Fhc}j{{An{j}}}}{{Flc}j{{An{j}}}}{{{b{h}}}{{n{{Bb{Ab}}l}}}}{{je}j{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{je{Bj{{Nh{eCn}}}}Hh}j{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{jj}j}{jj}0{{jjI`}j}{{}j}{h{{n{{Dl{j}}l}}}}{{jc}j{{An{j}}}}{{Ml{b{Ab}}}j}05`{{j{Dl{If}}{Bj{{Dl{El}}}}AhAhAh}j}{{jId{Bj{{Dl{El}}}}AhAhAh}j}{{{b{Ab}}jNj}j}{{jjNj}j}9{{jNl{Bj{Dn}}}j}{{ce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}{{jAh}j}{{jj}}{{Jn{Dl{El}}}j}{{cj}j{{An{j}}}};{{jcc}j{{An{j}}}}{{{b{Db}}{Bj{Cl}}}{{n{Ddl}}}}{{jcc{Bj{c}}{Bj{Cl}}}j{{An{j}}}}{{j{b{{Aj{Cj}}}}Hj}j}`{Adj}{Afj}{jj}00{{jNn}j}{{jjH`}j}0{{j{Bb{Bl}}{Bd{{Bb{B`}}}}O`}j}{{jIdc}j{{Cf{{b{Cb{Od{Ob}}}}}{{Bh{{Bj{If}}}}}}BnC`Of}}{{jO`}j}{{jjOh}j}101010{{jNjIfO`}j}{{jjNjIfOh}j}{{jIdAh}j}434343{{{b{h}}}{{Dl{{Bb{Ab}}}}}}{{jL`}j}{{jEh}j}``{{}{{Bd{{Bb{B`}}}}}}{{jjAhAh{Bj{Dn}}}j}{{AfjAhAh{Bj{Dn}}}j}01{{jcOj}j{{An{j}}}}``{{{b{Dj}}c}nOl}{{{b{j}}c}nOl}{{{b{Fn}}c}nOl}{{{b{Eb}}c}nOl}{{{b{{Bd{{Bb{Df}}}}}}c}nOl}{{{b{{Bd{{Bb{Jb}}}}}}c}nOl}{{{b{{Bd{Bf}}}}c}nOl}{{{b{G`}}c}nOl}{{{b{Gb}}c}nOl}{{{b{Gd}}c}nOl}{{{b{Gf}}c}nOl}{{{b{Gh}}c}nOl}{{{b{Gj}}c}nOl}{{{b{Ch}}c}nOl}{{{b{H`}}c}nOl}{{{b{Hb}}c}nOl}{{{b{Hd}}c}nOl}{{{b{Hf}}c}nOl}{{{b{Hh}}c}nOl}{{{b{Hj}}c}nOl}{{{b{Hl}}c}nOl}{{{b{A`}}c}nOl}{{Afc}j{{An{j}}}}0{{jOn}j}1{{Adj}j}{{Afj}j}{{jj}j}{{jce}j{{An{j}}}{{An{j}}}}{jj}{{j{Bj{Dn}}}j}111{{jAh}j}{{Afjj}j}4{{AdCn}j}{{AfCn}j}{{jCn}j}{{jeD`}j{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{jjI`Ah}j}8{{AdI`}j}{{AfI`}j}{{jI`}j}{jA@`}`{{jCl}j}`{jJn}{{jj}}{{A`A`}}{{Ml{b{Ab}}}j}0{{{b{Ab}}}j}{Adj}{Afj}{jj}{c{{n{jl}}}{{Al{{Aj{j}}}}}}{{}{{Bd{{Bb{B`}}}}}}{{Afj}j}{{j{Bj{Id}}}j}44{{jjj}j}{{Ffc}Fh{{An{j}}}}{{Fjc}Fl{{An{j}}}}{{jjIhIj}j}```{{AfId}j}{{{b{j}}{b{Ln}}M`}{{n{Ddl}}}}<{Mlj}{{{b{c}}}e{}{}}00000000000000000000000000<{{{b{Db}}}{{n{Ddl}}}}{{{b{c}}}El{}}00000000{{Ad{Bj{{Bb{Bl}}}}}j}{{AfA@b{Bj{{Bb{Bl}}}}Id}j}5{{jj}j}{{jcg{Dl{Ah}}}j{{An{j}}}{{An{j}}Ed}{{Al{{Aj{e}}}}}}{c{{n{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000{{{b{Db}}c}{{n{Ddl}}}{{N`{{b{Cl}}}{{Bh{{n{Cll}}}}}}}}{{{b{Db}}c}{{n{Ddl}}}{{N`{{b{{Aj{{b{Cl}}}}}}}{{Bh{{n{Cll}}}}}}}}{{jc}{{n{jl}}}{{Cf{j}{{Bh{{n{jl}}}}}}}}{{{b{Db}}c}{{n{Ddl}}}{{N`{{b{Dd}}}{{Bh{{n{Ddl}}}}}}}}{{{b{Df}}{b{Cb{Dl{I`}}}}}{{n{fl}}}}{{{b{c}}}A@d{}}000000000000000000000000000000000`{hj}{{Afc}j{{An{j}}}}{Adj}{Afj}{jj}02100{{jAhAhElAh}j}`{{AdI`}j}{{AfI`}j}{{jI`}j}`{ce{}{}}000000000000000000000000000000000`{cFf{{An{j}}}}{{Fhc}Fj{{An{j}}}}{{Flc}Fj{{An{j}}}}`{{Glj}Gl}0{{Gnj}Gn}{{{b{Db}}Cl}{{n{Ddl}}}}{{Jn{Dl{j}}}{{n{jl}}}}{{Gnjjj}Gn}{{Gljjj}Gl}1545445454{{{b{Db}}{Bj{Cl}}}{{n{Ddl}}}}{{{b{Db}}}{{n{Ddl}}}}76{{GlIl}Gl}{{Gl{Bj{El}}}Gl}89{{jc}j{{An{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{E`Ah}j}{E`j}{{{b{c}}}{{b{e}}}{}{}}{{{b{Cbc}}}{{b{Cbe}}}{}{}}{{E`j}j}{Id{{b{c}}}{}}{Id{{b{Cbc}}}{}}{Idf}3{cc{}}87{{}Id}{ce{}{}}96{c{{n{e}}}{}{}}0{{{b{c}}}A@d{}}2``{{Jfj{Ef{Ah}}{Dl{Eh}}A@f}j}{Jfj}<;{{JfIl}j}1{{JfjIl}j}{{JfEl}j}333<;:393873333333333{{Jfj}j}44{{Jf{Bj{El}}jA@h}j}15{{Jf{b{Ab}}}j}65066666662998:6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{Cbc}}}{{b{Cbe}}}{}{}}{{{b{A@j}}}A@j}{{{b{c}}{b{Cbe}}}f{}{}}{{{b{c}}}f{}}{Id{{b{c}}}{}}{Id{{b{Cbc}}}{}}{c{{n{A@j}}}J`}{Idf}{{{b{A@j}}{b{A@j}}}Ah}{{{b{A@j}}{b{CbKb}}}{{n{fKd}}}}0{cc{}}{{{b{A@j}}{b{Cbc}}}fMb}{{}Id}{ce{}{}}{{{b{A@j}}c}nOl}{{{b{c}}}e{}{}}{{{b{c}}}El{}}{c{{n{e}}}{}{}}0{{{b{c}}}A@d{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{Cbc}}}{{b{Cbe}}}{}{}}{{{b{A@l}}}A@l}{{{b{c}}{b{Cbe}}}f{}{}}{{{b{c}}}f{}}{Id{{b{c}}}{}}{Id{{b{Cbc}}}{}}{c{{n{A@l}}}J`}{Idf}{{{b{A@l}}{b{A@l}}}Ah}{{{b{A@l}}{b{CbKb}}}{{n{fKd}}}}0{cc{}}{{{b{A@l}}{b{Cbc}}}fMb}{{}Id}{ce{}{}}{{{b{A@l}}c}nOl}{{{b{c}}}e{}{}}{{{b{c}}}El{}}{c{{n{e}}}{}{}}0{{{b{c}}}A@d{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{Cbc}}}{{b{Cbe}}}{}{}}{{{b{A@n}}}A@n}{{{b{c}}{b{Cbe}}}f{}{}}{{{b{c}}}f{}}0{Id{{b{c}}}{}}{Id{{b{Cbc}}}{}}{c{{n{A@n}}}J`}{Idf}{{{b{A@n}}{b{A@n}}}Ah}{{{b{c}}{b{e}}}Ah{}{}}00{{{b{A@n}}{b{CbKb}}}{{n{fKd}}}}0{cc{}}{{{b{A@n}}{b{Cbc}}}fMb}{{}Id}{ce{}{}}{{{b{A@n}}c}nOl}{{{b{c}}}e{}{}}{{{b{c}}}El{}}{c{{n{e}}}{}{}}0{{{b{c}}}A@d{}}5``{{}j}{c{{n{jl}}}{{Al{{Aj{j}}}}}}`0{{jjc{Bd{{Bb{B`}}}}}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{jjCjCl}j}{{cD`}j{{Al{{Aj{j}}}}}}{cj{{An{j}}}}{{{Dl{j}}}j}{{{b{Ab}}}j}{{jCl}j}{{{b{{Aj{j}}}}}j}2{c{{AAb{{Dl{AA`}}}}}{{AAh{}{{AAd{AAf}}}}}}{cj{{Hn{El}}}}{{cAAj}{{AAb{AAf}}}{{Al{{Aj{AAf}}}}}}{{eAh}{{n{jl}}}{{An{j}}Ed}{{Al{{Aj{c}}}}}}11{e{{n{jl}}}{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{c{b{Ab}}Ah}j{{Al{{Aj{j}}}}}}{{jjI`}j}{{jceAh}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}{{ce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}{{jjIhIj}j}0{Glj}{{jjIhIj{Bj{Il}}{Bj{El}}}j}0``{{{b{Cl}}}j}{cj{{Al{{Aj{Cl}}}}}}{Gnj}{{jce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}{{{b{Ab}}c}{{n{jl}}}{{Al{{Aj{j}}}}}}``{cj{{Al{{Aj{Cj}}}}}}{{jjCjCl}j}{{jjj}j}{jj}0{{jjc{Bd{{Bb{B`}}}}}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`}}{{{b{Ab}}}j}00```0````2{{jjI`}j}{{{b{Ab}}jNj}j}{{ce}j{{Bl{BfBf}{{Bh{{n{{Bj{Bf}}l}}}}}}BnC`Ed}{{Al{{Aj{j}}}}}}{{cj}j{{An{j}}}}{{jjH`}j}0``{{jjI`Ah}j}6{{jjIhIj}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{Cbc}}}{{b{Cbe}}}{}{}}0{{{b{Nd}}{b{Cb{Aj{Bf}}}}}{{n{{Bj{Bf}}l}}}}{{{b{AAl}}AA`}{{n{AA`l}}}}{{{b{AAl}}}AAl}{{{b{c}}{b{Cbe}}}f{}{}}{{{b{c}}}f{}}{Id{{b{c}}}{}}0{Id{{b{Cbc}}}{}}0{c{{n{AAl}}}J`}{Idf}0{{{b{AAl}}{b{AAl}}}Ah}{{{b{c}}{b{e}}}Ah{}{}}00{{{b{AAl}}{b{CbKb}}}{{n{fKd}}}}{cc{}}{{{AB`{AAn}}}AAl}1{{{b{Nd}}}{{Bj{{Bd{{Bb{B`}}}}}}}}{{}Id}0{ce{}{}}0{{{AB`{AAn}}{Bj{Cl}}AhAh}Nd}{{{b{AAl}}c}nOl}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Nd}}{b{Cb{Dl{I`}}}}}{{n{fl}}}}{{{b{c}}}A@d{}}066`{{A@`Ah}j}{A@`j}{{{b{c}}}{{b{e}}}{}{}}{{{b{Cbc}}}{{b{Cbe}}}{}{}}{{A@`jAh}j}{{A@`j}j}1{Id{{b{c}}}{}}{Id{{b{Cbc}}}{}}{Idf}3{{A@`jId}j}4{{A@`{b{Ab}}}{{n{jl}}}}65{cc{}}6;:{{}Id}{ce{}{}}{{A@`{b{Ab}}Ah}j}{{A@`{Bj{Cl}}{Bj{Id}}}j}:>>{{A@`IdABb}j}0{{A@`jjAh}j}0{{A@`jjAhCj}j}{A@`j}{{A@`jj}j}?;;?;??????{{A@`ClHbj}j}{{A@`j}j}{{A@`Hb}j}{{A@`{Bj{Il}}{Bj{El}}Hbj}j}{{A@`Id}j}{{A@`jAh}j}7377{c{{n{e}}}{}{}}0{{{b{c}}}A@d{}}?6`````````````````````````````````{{{b{c}}d}f{}}00000000{{AAfc}{{AAb{AA`}}}{{Bl{ABd{b{Cb{ABh{ABf}}}}{b{Cb{ABh{ABj}}}}}{{Bh{{AAb{f}}}}}}}}{{AAfAh}AAf}{{ABlc}AAf{{Al{{Aj{j}}}}}}{{}ABn}{{AC`Ah}AC`}{{{Bb{ACb}}ACd}{{AAb{AAf}}}}{{AAfAAfcc}AAf{{An{j}}}}{{ABlcACf}AAf{{Bl{AA`}{{Bh{{AAb{AA`}}}}}}BnC`}}{{ABnABn}ABn}{{{b{CbABn}}ABn}f}10{{{b{ABn}}}L`}021{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{Cbc}}}{{b{Cbe}}}{}{}}000000000{{AAfAChcD`}AAf{{Al{{Aj{j}}}}}}{AAfAAf}``{{{b{ACj}}}f}{{AAf{ACl{{b{Ab}}Cl}}Ah}AAf}{{AAfClAh}AAf}{{{b{ACj}}}ACj}{{{b{AAf}}}AAf}{{{b{ABl}}}ABl}{{{b{ACd}}}ACd}{{{b{ACn}}}ACn}{{{b{AD`}}}AD`}{{{b{ADb}}}ADb}{{{b{ADd}}}ADd}{{{b{ABn}}}ABn}{{{b{c}}{b{Cbe}}}f{}{}}00000000{{{b{c}}}f{}}000000000{{{b{ADf}}}{{Bj{{b{ADh}}}}}}0{{{b{ACn}}}{{Bj{{b{ADh}}}}}}{{{b{ADb}}}{{Bj{{b{ADh}}}}}}``{{AC`ADj}AC`}{AAf{{AAb{AA`}}}}{AAf{{AAb{ACj}}}}{ABnABn}{{{b{ADf}}{Dl{AAf}}}{{AAb{AAf}}}}0{{{b{ACn}}{Dl{AAf}}}{{AAb{AAf}}}}{{{b{ABn}}ABn}Ah}{AAfAAf}{{AAfAAf{Bj{El}}}AAf}{{}AAf}{{}ACd}{{}AD`}{{}ADd}{{}ABn}{Id{{b{c}}}{}}000000000{Id{{b{Cbc}}}{}}000000000{{{b{AAf}}}{{AAb{El}}}}000{{ABnABn}ABn}{Idf}0{{{b{CbACj}}}f}1{{AAfe}AAf{{An{A`}}}{{ADl{}{{AAd{c}}}}}}22222220{{AAf{Bj{{Dl{j}}}}}AAf}8{{{b{AAf}}Ah}{{AAb{El}}}}{{AAfe}AAf{{An{A`}}Ed}{{Al{{Aj{c}}}}}}{{{b{CbABn}}c}f{{ADl{}{{AAd{ABn}}}}}}{{{b{ACj}}}{{Bj{{AAb{AA`}}}}}}{{AAfId}{{AAb{AA`}}}}{{{b{ACj}}}{{AAb{AA`}}}}{{AAfc}AAf{{An{j}}}}0{{AAfj}AAf}{AC`AAf}{ADf{{AAb{AAf}}}}0{ACn{{AAb{AAf}}}}{ADb{{AAb{AAf}}}}210{AAfAAf}{{{b{ABn}}{b{CbKb}}}{{n{fKd}}}}0000{{AC`Ah}AC`}{cc{}}0{JbAAf}1{ABlAAf}2222222{L`{{Bj{ABn}}}}{L`ABn}00{cABn{{ADl{}{{AAd{ABn}}}}}}{{{b{Ab}}}{{Bj{ABn}}}}{{AAfAAfcc}AAf{{An{j}}}}{{{b{AAf}}}ABn}{{{b{ADf}}}Ah}0{{{b{ACn}}}Ah}`{{AAfe}ABl{{An{j}}Ed}{{Al{{Aj{c}}}}}}{{AAfjcADn}ABl{{Al{{Aj{j}}}}}}1{{ABl{Bj{Id}}}AAf}``{{AC`AE`}AC`}```{{}Id}0000000008{{{b{CbABn}}ABn}f}{{ABnABn}ABn}{{{b{ABn}}ABn}Ah}{ce{}{}}000000000{ABn}{{{b{ABn}}}Ah}0{{{b{ABn}}}{{AEb{ABn}}}}{{{b{ABn}}}{{AEd{ABn}}}}{{AAfAAfccAEf}AAf{{Al{{Aj{j}}}}}}{AAfAC`}{{AC`Ah}AC`}{AAfAAf}{AEhAAf}1{{AAfAAfcc}AAf{{An{j}}}}{{AC`c}AC`{{Al{{Aj{j}}}}}}{{AAfACh}AAf}``{{ADbAh}ADb}`{{AAfcAEj{Bj{{Bb{Kf}}}}{Bj{{b{Ab}}}}}AAf{{Bl{AA`}{{Bh{{AAb{AA`}}}}}}BnC`}}{{AAfAAlAEj{Bj{ACf}}Ah}AAf}777`{{AAfAAf{b{Ab}}}{{AAb{AAf}}}}8{{{b{ADf}}}{{Bj{Id}}}}{{{b{ACn}}}{{Bj{Id}}}}{{{b{ADb}}}{{Bj{Id}}}}````={cACn{{Al{AEl}}}}{cADb{{Al{AEl}}}}{{{Bb{{Dl{AEn}}}}}ACn}{{{Bb{{Dl{AEn}}}}}ADb}{ABnABn}{AAfAAf}>{{AAf{b{Cb{ABh{ABf}}}}{b{Cb{ABh{ABj}}}}}{{AAb{ABd}}}}`{{{b{ADf}}}{{b{{Aj{AEn}}}}}}{{{b{ACn}}}{{b{{Aj{AEn}}}}}}{{{b{ADb}}}{{b{{Aj{AEn}}}}}}`{AAf{{AAb{{Nh{AA`AA`}}}}}}{{AAfjNj}AAf}{{{b{ADf}}}Ah}{{{b{ACn}}}Ah}{{{b{ADb}}}Ah}``{{{b{CbABn}}ABn}f}{{AAfei}AAf{{Al{Ab}}}{{ADl{}{{AAd{c}}}}}{{Al{Ab}}}{{ADl{}{{AAd{g}}}}}};{{AC`c}AC`{{Al{{Aj{j}}}}}}{{AAfjcNn}ABl{{Al{{Aj{j}}}}}}{{{b{ADf}}}{{Bj{{b{AF`}}}}}}{{{b{ACn}}}{{Bj{{b{AF`}}}}}}{{{b{ADb}}}{{Bj{{b{AF`}}}}}}```{{LnAFbAh}AAf}{{cAD`}{{AAb{AAf}}}{{Al{AEl}}}}{{{Bb{{Dl{AEn}}}}AD`}{{AAb{AAf}}}}{{cADd}{{AAb{AAf}}}{{Al{AEl}}}}{{{Bb{{Dl{AEn}}}}ADd}{{AAb{AAf}}}}{{{b{CbAAf}}}{{AAb{ACf}}}}`{{{b{CbAAf}}{b{Cb{ABh{ABf}}}}{b{Cb{ABh{ABj}}}}}{{AAb{ACf}}}}{{AAfc}AAf{{Al{{Aj{j}}}}}}0{{AAfAAfcc}AAf{{An{j}}}}{{{b{CbABn}}ABnAh}f}{{{b{AAf}}{ABh{ABf}}{ABh{ABj}}}f}{{AAfc}AAf{{An{j}}}}{{AAfce}AAf{{An{j}}}{{An{j}}}}{{AAfcAFd}{{AAb{f}}}{{Al{AEl}}}}{{AAfcAFf}{{AAb{f}}}{{Al{AEl}}}}{{AAfEl{Bj{ADh}}AFf}{{AAb{f}}}}{{AAfcAFh}{{AAb{f}}}{{Al{AEl}}}}{{AAfcAFj}{{AAb{f}}}{{Al{AEl}}}}{{AAfEl{Bj{ADh}}AFj}{{AAb{f}}}}`{{AAfCjACh}AAf}{{AAfcD`}AAf{{Hn{AFl}}}}{{AAfcD`}AAf{{Al{{Aj{j}}}}}}{{AAfI`}AAf}{{ABnABn}ABn}{{{b{CbABn}}ABn}f}{{AC`c}AC`{{Al{Ab}}}}{AAfAAf}3{{AAfACh}AAf}{{ABl{Bj{Id}}}AAf}{AAf{{AAb{AFn}}}}0{{{b{AAf}}Ah}{{AAb{El}}}}{{{b{c}}}e{}{}}000000007{{AAfAChcD`}AAf{{Al{{Aj{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000{{{b{c}}}A@d{}}000000000;{{AAf{Bj{{Dl{El}}}}AG`}AAf}{{AAf{Bj{e}}AG`}AAf{{An{A`}}Ed}{{Al{{Aj{c}}}}}}10{{AAfe}AAf{{An{A`}}Ed}{{Al{{Aj{c}}}}}}{{AAfHl}AAf}`{{AC`AGb}AC`}{{AAfI`}AAf}{ce{}{}}000000000{{AC`AAf}AC`}{{ADb{Bj{AGd}}}ADb}{{ACnAh}ACn}{{ACn{Bj{ADh}}}ACn}{{ADb{Bj{ADh}}}ADb}{{AAfAh}AAf}{{AAfj}AAf}{{AAfc}AAf{{Al{{Aj{j}}}}}}022{{ACn{Bj{{b{Ab}}}}}ACn}{{AAfc}AAf{{Al{{Aj{AAf}}}}}}7{{ACn{Bj{ACf}}}ACn}{{ACnAGf}ACn}{{ACnI`}ACn}:::{{ADbAh}ADb}{{ACn{Bj{{Bb{Ab}}}}}ACn}{{ADb{Bj{{Bb{Ab}}}}}ADb}{{ACn{Bj{Id}}}ACn}?>>{{ADfc}ADf{{An{{Bj{Id}}}}}}{{ACnc}ACn{{An{{Bj{Id}}}}}}2{{ADbc}ADb{{An{{Bj{Id}}}}}}{{ADb{Bj{Id}}}ADb}?{{ACn{Bj{AGh}}}ACn}{{AAfABn}AAf}{{ADf{Bb{{Dl{AEn}}}}}ADf}{{ACn{Bb{{Dl{AEn}}}}}ACn}{{ADb{Bb{{Dl{AEn}}}}}ADb}{{AAfAh}AAf}0{{ACn{Bj{I`}}}ACn}{{ACnAh}ACn}{{ADfAh}ADf}1{{ADbAh}ADb}4{{ADfc}ADf{{An{{Bj{AF`}}}}}}{{AAf{b{Ab}}{Bj{ACh}}}AAf}{{ACn{Bj{AF`}}}ACn}{{ACnc}ACn{{An{{Bj{AF`}}}}}}{{ADb{Bj{AF`}}}ADb}{{ADbc}ADb{{An{{Bj{AF`}}}}}}{{ACn{Bj{ACf}}}ACn}{{ADb{Bj{ACf}}}ADb}{{ACnc}{{AAb{ACn}}}{{Bl{Ln}{{Bh{{AAb{Ln}}}}}}}}1{{ACnI`}ACn}>{{ACnId}ACn}0??==?{AAfAAf}{{{b{AA`}}e{Bj{i}}{Bj{m}}Ah{Bj{j}}{Bj{{b{Ab}}}}}{{AAb{AA`}}}{{Al{Ab}}}{{ADl{}{{AAd{c}}}}}{{Al{Ab}}}{{ADl{}{{AAd{g}}}}}{{Al{Ab}}}{{ADl{}{{AAd{k}}}}}}0`````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Ih}}Cj{Bj{{b{AGj}}}}}{{n{Cjl}}}}00{{{b{ACb}}}Ah}00{{{b{ACb}}}{{b{Dh}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{Cbc}}}{{b{Cbe}}}{}{}}00000000000000000{{{b{ADn}}}ADn}{{{b{Nn}}}Nn}{{{b{Ih}}}Ih}{{{b{AEf}}}AEf}{{{b{AE`}}}AE`}{{{b{AFd}}}AFd}{{{b{AGb}}}AGb}{{{b{AFf}}}AFf}{{{b{AGl}}}AGl}{{{b{Nl}}}Nl}{{{b{AFh}}}AFh}{{{b{AFj}}}AFj}{{{b{AGn}}}AGn}{{{b{AH`}}}AH`}{{{b{AAj}}}AAj}{{{b{Jb}}}Jb}{{{b{c}}{b{Cbe}}}f{}{}}000000000000000{{{b{c}}}f{}}00000000000000000000000``{{{b{Ih}}{b{Ih}}}AHb}`{{{b{c}}{b{e}}}AHb{}{}}``{{{b{Jb}}}{{n{{Bb{Ln}}l}}}}`{{{b{Ih}}}Cj}{{{b{Ih}}}Ah}{{}ADn}{{}Nn}{{}AEf}{{}AFd}{{}AGb}{{}AFf}{{}Nl}{{}AFh}{{}AFj}{{}AH`}{{}AAj}{{}Jb}{Id{{b{c}}}{}}00000000000000000{Id{{b{Cbc}}}{}}00000000000000000`{{{b{Jb}}}{{n{Ell}}}}0{c{{n{ADn}}}J`}{c{{n{Nn}}}J`}{c{{n{Ih}}}J`}{c{{n{AEf}}}J`}{c{{n{AE`}}}J`}{c{{n{AFd}}}J`}{c{{n{AGb}}}J`}{c{{n{AFf}}}J`}{c{{n{AGl}}}J`}{c{{n{Nl}}}J`}{c{{n{AFh}}}J`}{c{{n{AFj}}}J`}{c{{n{AGn}}}J`}{c{{n{AH`}}}J`}{c{{n{AAj}}}J`}{c{{n{Jb}}}J`}`{{{b{Jb}}}{{n{{`{Mh}}l}}}}{Idf}00000000000000000{{{b{ADn}}{b{ADn}}}Ah}{{{b{Nn}}{b{Nn}}}Ah}{{{b{Ih}}{b{Ih}}}Ah}{{{b{AEf}}{b{AEf}}}Ah}{{{b{AE`}}{b{AE`}}}Ah}{{{b{AFd}}{b{AFd}}}Ah}{{{b{AGb}}{b{AGb}}}Ah}{{{b{AFf}}{b{AFf}}}Ah}{{{b{AGl}}{b{AGl}}}Ah}{{{b{Nl}}{b{Nl}}}Ah}{{{b{AFh}}{b{AFh}}}Ah}{{{b{AFj}}{b{AFj}}}Ah}{{{b{AGn}}{b{AGn}}}Ah}{{{b{AH`}}{b{AH`}}}Ah}{{{b{AAj}}{b{AAj}}}Ah}{{{b{c}}{b{e}}}Ah{}{}}00000000000000000000000000000000000`{{{b{ADn}}{b{CbKb}}}{{n{fKd}}}}{{{b{Nn}}{b{CbKb}}}{{n{fKd}}}}{{{b{Ih}}{b{CbKb}}}{{n{fKd}}}}0{{{b{ACb}}{b{CbKb}}}{{n{fKd}}}}{{{b{AEf}}{b{CbKb}}}{{n{fKd}}}}{{{b{AE`}}{b{CbKb}}}{{n{fKd}}}}0{{{b{AFd}}{b{CbKb}}}{{n{fKd}}}}{{{b{AGb}}{b{CbKb}}}{{n{fKd}}}}0{{{b{AFf}}{b{CbKb}}}{{n{fKd}}}}{{{b{AGl}}{b{CbKb}}}{{n{fKd}}}}{{{b{Nl}}{b{CbKb}}}{{n{fKd}}}}{{{b{AFh}}{b{CbKb}}}{{n{fKd}}}}{{{b{AFj}}{b{CbKb}}}{{n{fKd}}}}{{{b{AGn}}{b{CbKb}}}{{n{fKd}}}}{{{b{AH`}}{b{CbKb}}}{{n{fKd}}}}{{{b{AAj}}{b{CbKb}}}{{n{fKd}}}}`{cc{}}0000{AE`AEf}1111111111111`{{{b{AGn}}}Cl}{{{b{AHd}}{Dl{Bf}}{b{ADn}}}{{n{{Nh{Bf{Dl{Bf}}AHf}}l}}}}{{{b{ADn}}{b{Cbc}}}fMb}{{{b{Nn}}{b{Cbc}}}fMb}{{{b{Ih}}{b{Cbc}}}fMb}{{{b{AEf}}{b{Cbc}}}fMb}{{{b{AE`}}{b{Cbc}}}fMb}{{{b{AFd}}{b{Cbc}}}fMb}{{{b{AGb}}{b{Cbc}}}fMb}{{{b{AFf}}{b{Cbc}}}fMb}{{{b{AGl}}{b{Cbc}}}fMb}{{{b{Nl}}{b{Cbc}}}fMb}{{{b{AFh}}{b{Cbc}}}fMb}{{{b{AFj}}{b{Cbc}}}fMb}{{{b{AGn}}{b{Cbc}}}fMb}{{{b{AH`}}{b{Cbc}}}fMb}{{{b{AAj}}{b{Cbc}}}fMb}``````{{}Id}00000000000000000{ce{}{}}00000000000000000{{{b{Jb}}}}{{{b{AE`}}}Ah}{{{b{Ih}}{Bj{{b{Ab}}}}}Ah}{{{b{Ih}}}Ah}{{{b{AGb}}{b{AE`}}}{{n{fl}}}}1``{Mnj}{Ihj}{AHhj}{AGnj}````{AGnAGn}`{{{b{Ih}}}Cj}7{{IhCj}Ih}`1{{{b{AGb}}}Ah}{Ih}:{CjIh}{AE`AEf}{{{b{ACb}}AHj}{{n{{Bj{AA`}}l}}}}````{{{b{Ab}}}Ih}`{{{b{Ih}}{b{Ih}}}{{Bj{AHb}}}}```{{JbEl}{{n{{Dl{I`}}l}}}}`{{{b{AHd}}{Dl{Bf}}{b{Nn}}}{{n{{Nh{Bf{Dl{Bf}}AHf}}l}}}}`{{{b{ACb}}AHj}{{n{AA`l}}}}{{{b{ACb}}{Bj{Id}}}{{n{{Bb{Ln}}l}}}}`{{{b{ADn}}c}nOl}{{{b{Nn}}c}nOl}{{{b{Ih}}c}nOl}{{{b{AEf}}c}nOl}{{{b{AE`}}c}nOl}{{{b{AFd}}c}nOl}{{{b{AGb}}c}nOl}{{{b{AFf}}c}nOl}{{{b{AGl}}c}nOl}{{{b{Nl}}c}nOl}{{{b{AFh}}c}nOl}{{{b{AFj}}c}nOl}{{{b{AGn}}c}nOl}{{{b{AH`}}c}nOl}{{{b{AAj}}c}nOl}{{{b{Jb}}c}nOl}`{{{b{AEf}}}Ah}````{{{b{AEf}}}{{b{Ab}}}}`{Jb{{n{AFnl}}}}{{{b{AGn}}}{{Bj{AHl}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}El{}}00`{{{b{AFf}}c}{{AHn{c}}}AI`}{{{b{AFj}}c}{{AIb{c}}}AI`}{{{b{Ih}}Cj{Bj{{b{AGj}}}}ceg}{{n{Cjl}}}{{Bl{Cj}{{Bh{Cj}}}}}{{Bl{Cj}{{Bh{AId}}}}}{{Bl{AId}{{Bh{Cj}}}}}}{{{b{Ih}}Cj{Bj{{b{AGj}}}}}{{n{Cjl}}}}00{c{{n{e}}}{}{}}0000000000000{AHl{{n{AGnl}}}}1111111111111111111111{{{b{c}}}A@d{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Ih}}}Cj}{{{b{Ih}}}Ah}{{AEfADj}AEf}`{{AEf{Bj{El}}}AEf}{{{b{AFf}}AA`c}{{n{fl}}}AI`}{{{b{AFj}}AA`c}{{n{fl}}}AI`}``````````````````````````````````````````````````````````","D":"GIb","p":[[1,"reference"],[5,"Private",3549],[1,"unit"],[5,"MetaNameSpace",5,3550],[6,"Expr",5,3551],[6,"PolarsError",3552],[6,"Result",3553],[6,"Selector",5,3554],[1,"str"],[5,"ArrayNameSpace",5,3555],[5,"ListNameSpace",5,3556],[1,"bool"],[1,"slice"],[10,"AsRef",3557],[10,"Into",3557],[10,"FunctionOutputField",5,3558],[5,"Arc",3559],[5,"SpecialEq",5,3558],[5,"Series",3560],[17,"Output"],[6,"Option",3561],[10,"Fn",3562],[10,"Send",3563],[10,"Sync",3563],[0,"mut"],[6,"VisitRecursion",3564],[10,"FnMut",3562],[6,"FunctionExpr",5,3565],[1,"i64"],[6,"DataType",3566],[5,"SortOptions",3567],[5,"SortMultipleOptions",3567],[5,"FieldsMapper",5,3568],[5,"Field",3569],[10,"SeriesUdf",5,3558],[10,"Any",3570],[6,"AggExpr",5,3551],[5,"Vec",3571],[1,"u64"],[5,"BinaryNameSpace",1718,3572],[6,"Operator",5,3551],[10,"Clone",3573],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3558],[5,"String",3574],[5,"UserDefinedFunction",5,3575],[10,"SeriesBinaryUdf",5,3558],[6,"CastOptions",3576],[5,"CategoricalNameSpace",5,3577],[5,"When",5,3578],[5,"Then",5,3578],[5,"ChainedWhen",5,3578],[5,"ChainedThen",5,3578],[6,"Excluded",5,3551],[6,"BooleanFunction",5,3579],[6,"CategoricalFunction",5,3580],[6,"TemporalFunction",5,3581],[6,"PowFunction",5,3582],[6,"StringFunction",5,3583],[6,"StructFunction",5,3584],[5,"DatetimeArgs",5,3585],[5,"DurationArgs",5,3585],[5,"RollingCovOptions",5,3586],[5,"StrptimeOptions",5,3586],[5,"JoinOptions",5,3586],[6,"WindowType",5,3586],[6,"WindowMapping",5,3586],[6,"NestedType",5,3586],[5,"UnpivotArgsDSL",5,3586],[10,"IntoVec",3587],[1,"u8"],[10,"ExprEvalExtension",5,3588],[1,"usize"],[1,"f64"],[5,"Duration",2866,3589],[6,"ClosedWindow",3590],[6,"TimeUnit",3591],[10,"BinaryUdfOutputField",5,3558],[10,"Deserializer",3592],[6,"DslPlan",2866,3593],[6,"NullBehavior",3594],[5,"DateLikeNameSpace",1740,3595],[10,"Sized",3563],[10,"ListNameSpaceExtension",5,3596],[5,"EWMOptions",3597],[5,"StructNameSpace",5,3598],[6,"FillNullStrategy",3599],[5,"Formatter",3600],[5,"Error",3600],[10,"UdfSchema",5,3601],[1,"i16"],[1,"f32"],[1,"i8"],[1,"u16"],[1,"u32"],[6,"ArrayFunction",3602],[6,"ListFunction",3603],[6,"BinaryFunction",3604],[6,"RangeFunction",3605],[6,"BusinessFunction",3606],[5,"FunctionOptions",3607],[5,"Schema",3608],[6,"Context",3593],[10,"Hasher",3609],[6,"InterpolationMethod",3610],[10,"IntoListNameSpace",5,3596],[10,"Display",3600],[6,"ClosedInterval",3611],[5,"ExprNameNameSpace",5,3612],[10,"Literal",2866,3613],[10,"FnOnce",3562],[5,"SuperTypeOptions",3614],[5,"PythonUdfExpression",2273,3615],[5,"UnitVec",3616],[1,"tuple"],[6,"QuantileInterpolOptions",3617],[5,"RankOptions",2866,3618],[5,"RollingGroupOptions",2866,3619],[5,"RollingOptionsFixedWindow",3620],[5,"Float64Type",3621],[5,"ChunkedArray",3622],[10,"Copy",3563],[5,"RollingOptionsDynamicWindow",3623],[6,"SearchSortedSide",3624],[10,"Serializer",3625],[6,"IsSorted",3626],[5,"StringNameSpace",2319,3627],[6,"ListToStructWidthStrategy",3628],[5,"TypeId",3570],[6,"Roll",3629],[6,"NonExistent",3630],[6,"RollingFunction",2089,3631],[6,"RollingFunctionBy",2122,3632],[6,"TrigonometricFunction",2154,3633],[5,"DataFrame",3634],[8,"PolarsResult",3552],[17,"Item"],[5,"LazyFrame",2386],[10,"IntoParallelIterator",3635],[5,"UnionArgs",2866,3607],[5,"PythonFunction",2273,3615],[5,"PyAny",3636],[5,"Py",3637],[1,"char"],[5,"Node",3638],[6,"IR",3639],[5,"Arena",3638],[6,"AExpr",3640],[5,"LazyGroupBy",2386],[5,"OptState",2386,3641],[5,"JoinBuilder",2386],[10,"AnonymousScan",2866,3642],[5,"ScanArgsAnonymous",2386,3643],[8,"SchemaRef",3608],[8,"IdxSize",3644],[5,"InProcessQuery",2386,3645],[8,"PlHashMap",3646],[5,"LazyCsvReader",2386,3647],[5,"ScanArgsIpc",2386,3648],[5,"LazyJsonLineReader",2386,3649],[5,"ScanArgsParquet",2386,3650],[10,"LazyFileListReader",2386,3651],[5,"CloudOptions",3652],[6,"JoinCoalesce",3653],[10,"IntoIterator",3654],[5,"DynamicGroupOptions",2866,3619],[6,"JoinType",2866,3653],[5,"Iter",3655],[5,"IterNames",3655],[5,"JoinArgs",2866,3653],[10,"IntoLazy",2386],[8,"AllowedOptimizations",2386,3641],[5,"Path",3656],[5,"PathBuf",3656],[5,"RowIndex",3657],[8,"PyObject",3637],[5,"CsvWriterOptions",2866,3658],[5,"IpcWriterOptions",2866,3659],[5,"JsonWriterOptions",2866,3660],[5,"ParquetWriteOptions",2866,3661],[8,"String",3662],[5,"IRPlan",3639],[6,"UniqueKeepStrategy",3634],[6,"JoinValidation",2866,3653],[8,"NonZeroUsize",3663],[6,"CsvEncoding",3664],[6,"NullValues",3664],[6,"Tz",3665],[6,"RankMethod",2866,3618],[6,"LiteralValue",2866,3613],[5,"AnonymousScanOptions",2866,3607],[6,"Ordering",3666],[10,"PolarsTemporalGroupby",2866,3619],[6,"GroupsProxy",3667],[5,"Null",2866,3613],[5,"AnonymousScanArgs",2866,3642],[6,"AnyValue",3668],[5,"IpcWriter",3659],[10,"Write",3669],[5,"ParquetWriter",3670],[5,"NaiveDateTime",3671],[15,"Quantile",1606],[15,"Min",1606],[15,"Max",1606],[15,"IsBetween",2013],[15,"Any",2013],[15,"All",2013],[15,"SortBy",1616],[15,"Filter",1616],[15,"Cast",1616],[15,"Sort",1616],[15,"Gather",1616],[15,"RenameAlias",1616],[15,"Ternary",1616],[15,"Function",1616],[15,"Window",1616],[15,"AnonymousFunction",1616],[15,"Slice",1616],[15,"BinaryExpr",1616],[15,"QCut",2016],[15,"Entropy",2016],[15,"Log",2016],[15,"Hist",2016],[15,"Cut",2016],[15,"Correlation",2016],[15,"Round",2016],[15,"TopK",2016],[15,"TopKBy",2016],[15,"RoundSF",2016],[15,"EwmMeanBy",2016],[15,"Clip",2016],[15,"BackwardFill",2016],[15,"ForwardFill",2016],[15,"Random",2016],[15,"GatherEvery",2016],[15,"ValueCounts",2016],[15,"Rank",2016],[15,"EwmMean",2016],[15,"EwmStd",2016],[15,"EwmVar",2016],[15,"ReplaceStrict",2016],[15,"CumCount",2016],[15,"CumSum",2016],[15,"CumProd",2016],[15,"CumMin",2016],[15,"CumMax",2016],[15,"ConcatHorizontal",2061],[15,"ConcatVertical",2061],[15,"ExtractGroups",2061],[15,"JsonDecode",2061],[15,"PadStart",2061],[15,"PadEnd",2061],[15,"SplitExact",2061],[15,"Contains",2061],[15,"Find",2061],[15,"Replace",2061],[15,"DatetimeFunction",2081],[15,"GroupBy",3491],[15,"Union",3491],[15,"Sort",3491],[15,"Cache",3491],[15,"ExtContext",3491],[15,"DataFrameScan",3491],[15,"IR",3491],[15,"Select",3491],[15,"HStack",3491],[15,"Scan",3491],[15,"MapFunction",3491],[15,"Filter",3491],[15,"Distinct",3491],[15,"Slice",3491],[15,"Sink",3491],[15,"Join",3491],[15,"HConcat",3491],[15,"PythonScan",3491],[15,"Range",3546]],"r":[[8,3551],[22,3555],[31,3558],[33,3579],[38,3580],[39,3577],[43,3578],[44,3578],[67,3585],[77,3585],[87,3551],[92,3551],[93,3588],[94,3612],[102,3568],[103,3612],[113,3565],[114,3558],[120,3558],[135,3596],[151,3586],[163,3556],[164,3596],[179,3550],[198,3586],[205,3551],[216,3582],[228,3558],[239,3586],[248,3554],[250,3558],[251,3558],[262,3558],[270,3583],[277,3586],[279,3584],[280,3598],[288,3581],[290,3578],[310,3601],[313,3586],[316,3575],[321,3578],[324,3586],[325,3586],[368,3672],[372,3673],[379,3673],[382,3674],[386,3675],[388,3676],[403,3677],[405,3677],[411,3678],[412,3679],[414,3675],[416,3578],[489,3680],[496,3679],[499,3675],[591,3673],[592,3672],[593,3672],[594,3681],[595,3681],[596,3681],[605,3682],[607,3673],[611,3673],[616,3676],[617,3585],[618,3676],[619,3676],[767,3675],[769,3672],[770,3672],[771,3585],[866,3675],[908,3673],[911,3681],[982,3675],[1028,3672],[1064,3676],[1065,3676],[1118,3679],[1120,3679],[1130,3675],[1133,3675],[1137,3613],[1147,3674],[1158,3675],[1161,3675],[1168,3679],[1172,3673],[1173,3679],[1176,3673],[1177,3679],[1185,3679],[1189,3673],[1216,3679],[1218,3675],[1231,3682],[1238,3675],[1241,3679],[1245,3673],[1249,3683],[1262,3682],[1263,3682],[1338,3682],[1346,3675],[1352,3679],[1356,3673],[1362,3578],[1365,3676],[1523,3675],[1575,3578],[1718,3572],[1739,3577],[1740,3595],[1813,3579],[1817,3580],[1864,3565],[1926,3582],[1965,3583],[1973,3584],[1978,3581],[2008,3565],[2009,3565],[2010,3565],[2011,3565],[2012,3565],[2083,3580],[2087,3582],[2093,3631],[2126,3632],[2169,3633],[2198,3585],[2199,3585],[2200,3672],[2201,3673],[2203,3673],[2204,3674],[2205,3676],[2206,3677],[2207,3677],[2208,3678],[2209,3679],[2210,3679],[2211,3673],[2212,3672],[2214,3672],[2216,3681],[2219,3681],[2220,3681],[2221,3682],[2222,3673],[2223,3673],[2224,3676],[2225,3676],[2226,3585],[2227,3676],[2228,3676],[2231,3672],[2232,3672],[2233,3585],[2234,3673],[2235,3681],[2238,3672],[2239,3676],[2240,3676],[2241,3679],[2242,3679],[2243,3674],[2244,3679],[2245,3679],[2246,3679],[2250,3679],[2255,3679],[2256,3682],[2257,3679],[2258,3673],[2259,3683],[2260,3682],[2261,3682],[2264,3682],[2265,3679],[2266,3676],[2267,3676],[2273,3615],[2274,3615],[2275,3615],[2276,3615],[2319,3627],[2380,3575],[2386,3641],[2393,3645],[2396,3647],[2397,3651],[2400,3649],[2402,3641],[2409,3643],[2410,3648],[2411,3650],[2866,3642],[2867,3642],[2868,3607],[2876,3658],[2883,3593],[2884,3589],[2886,3619],[2903,3659],[2905,3653],[2906,3653],[2907,3653],[2908,3660],[2910,3613],[2911,3613],[2917,3613],[2918,3613],[2923,3661],[2924,3619],[2927,3618],[2928,3618],[2930,3619],[2946,3607],[3351,3684]],"b":[[624,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[625,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[626,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[708,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[709,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[710,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[774,"impl-PartialEq-for-Expr"],[775,"impl-Expr"],[778,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[779,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[877,"impl-Debug-for-Expr"],[878,"impl-Display-for-Expr"],[880,"impl-Debug-for-Operator"],[881,"impl-Display-for-Operator"],[883,"impl-Debug-for-BooleanFunction"],[884,"impl-Display-for-BooleanFunction"],[885,"impl-Debug-for-CategoricalFunction"],[886,"impl-Display-for-CategoricalFunction"],[887,"impl-Debug-for-TemporalFunction"],[888,"impl-Display-for-TemporalFunction"],[889,"impl-Debug-for-PowFunction"],[890,"impl-Display-for-PowFunction"],[891,"impl-Display-for-StringFunction"],[892,"impl-Debug-for-StringFunction"],[893,"impl-Display-for-StructFunction"],[894,"impl-Debug-for-StructFunction"],[895,"impl-Display-for-FunctionExpr"],[896,"impl-Debug-for-FunctionExpr"],[925,"impl-From%3Ci16%3E-for-Expr"],[926,"impl-From%3C%26str%3E-for-Expr"],[927,"impl-From%3Cf32%3E-for-Expr"],[929,"impl-From%3Cf64%3E-for-Expr"],[930,"impl-From%3Ci8%3E-for-Expr"],[931,"impl-From%3Cbool%3E-for-Expr"],[932,"impl-From%3Ci32%3E-for-Expr"],[933,"impl-From%3Ci64%3E-for-Expr"],[934,"impl-From%3Cu8%3E-for-Expr"],[935,"impl-From%3Cu16%3E-for-Expr"],[936,"impl-From%3CAggExpr%3E-for-Expr"],[937,"impl-From%3Cu32%3E-for-Expr"],[938,"impl-From%3Cu64%3E-for-Expr"],[941,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[942,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[943,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[944,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[945,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[946,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[947,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[949,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[950,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[951,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[952,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[959,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[960,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[961,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[963,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[974,"impl-From%3CString%3E-for-Selector"],[976,"impl-From%3CExpr%3E-for-Selector"],[977,"impl-From%3CArc%3Cstr%3E%3E-for-Selector"],[978,"impl-From%3C%26str%3E-for-Selector"],[1002,"impl-Hash-for-Expr"],[1003,"impl-Expr"],[1300,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1301,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1302,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[2109,"impl-Display-for-RollingFunction"],[2110,"impl-Debug-for-RollingFunction"],[2141,"impl-Display-for-RollingFunctionBy"],[2142,"impl-Debug-for-RollingFunctionBy"],[2185,"impl-Debug-for-TrigonometricFunction"],[2186,"impl-Display-for-TrigonometricFunction"],[2434,"impl-OptState"],[2435,"impl-Flags-for-OptState"],[2572,"impl-Octal-for-OptState"],[2573,"impl-UpperHex-for-OptState"],[2574,"impl-LowerHex-for-OptState"],[2575,"impl-Debug-for-OptState"],[2576,"impl-Binary-for-OptState"],[2580,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2582,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2591,"impl-Flags-for-OptState"],[2592,"impl-OptState"],[2826,"impl-LazyFileListReader-for-LazyCsvReader"],[2827,"impl-LazyCsvReader"],[2828,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2829,"impl-LazyJsonLineReader"],[2846,"impl-LazyCsvReader"],[2847,"impl-LazyFileListReader-for-LazyCsvReader"],[2848,"impl-LazyJsonLineReader"],[2849,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3215,"impl-Display-for-Duration"],[3216,"impl-Debug-for-Duration"],[3219,"impl-Display-for-JoinType"],[3220,"impl-Debug-for-JoinType"],[3222,"impl-Debug-for-JoinValidation"],[3223,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABQKAwEEABIAGAAPACkAAgAuABUARQAIAE8ABwBYAAMAXgAAAGAAGQB7ABsAmAADAJ0ABgClAA4AtQAVAMwABADSACcA/QAJAAgBEAAaAQcAJAEYAD4BAwBDAQAARQEmAG0BAQBzAQAAdgEBAHoBAACAAQAAggEAAI0BAACQAQAAlwEBAJoBAQCfAQAAogFFAOoBAADsAQAA7gEBAPQBAAD7AVQAUwIAAG0CDQB8AloA2QIAANsCIQD+AgAAAAMAAAYDAQAJAxIAHQMyAFgDAABbAwEAYQMAAGcDAABqAyIAjgMAAJ4DAgCiAwkArgMGALYDAwDAAwIAxAMAAMsDAADPAwAA0QMCANUDAADXAwAA3AMBAOEDBQDqAwEA7QMQAAEEAQAEBAAABgQhAE8EAgBTBAEAaAQAAHAEAAB9BAAAgAQFAIkEAACMBAAAnAQAAJ8EAgCnBAIAqwQDALQEAQC4BAIAvQQAAL8EAQDFBAAAzAQAAM4EAQDVBAAA1wQAAN8EAQDlBAAA5wQAAOkEAADuBAIACAUFAA8FFwAwBQAANwUAAD4FAABDBQAARQUBAEgFAABOBQAAUwUAAFUFAABXBQIAXgUbAHsFCQCJBUMAzwUAANEFIwAABgAAAgYAAAQGIwArBgEAMAYAAD0GAABBBgEARgYTAF0GAQBgBgEAYwYBAGYGBgBuBkgAuAYDAL0GAgDCBgIAyAYDANAGAQDZBgIA3wYAAOEGAADuBgAA/QYDAAUHOgFBCAEARAgbAGEIAQBkCCcAjQgBAJAIBgCbCAAAqQgAALYIAQC9CAEAyAgCAMwIAwDVCAMA3QgeAP0IAAD/CAIABAkLABEJAwAYCQIAHgkAACMJAgAoCQEASAkDAFoJAwBhCQEAagkCAG4JCQB8CQAAhAkAAIcJFACdCQEAogkbAMIJAQDGCQAAygkAAM4JGADsCQMA8QkGAAgKAAAKCgEADQoEABUKAAAXCgAAIAoAACcKAgAvCgEAMgoMAE0KAABWCgEAWwoBAF4KAABgCgAAZAoBAGoKAwBvCgMAdgoEAH8KAwCLCgMAkAoAAJQKAQCXCgAAmgoAAKMKAACvCgEAsgoIALwKHgDdCgAA3woAAOIKAQDlCgkA8AoAAPIKAQD7CgEABAsBAAsLAAANCwAADwsAABMLAQAgCwAAIgsAADELBwA8CwAAPwsBAEILAABECwMASgsAAE0LAABRCwIAWAsAAFoLBgBkCwIAaAsAAGsLCQB2CwIAewsAAH0LAACDCxMAmgtiAAEMiwCODBMApwwAALUMAAC3DBEAygwAAM0MEQDxDAIA9QwAAPcMAAD6DAMAAQ0FAAgNAQAMDQAADw0CABMNAQAXDQAAGQ0BAB4NFQA1DagA"}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","size_bytes","size_bytes","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","clone_to_uninit","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[238,"polars_ops::prelude"],[240,"polars_ops::series"],[293,"polars_ops::chunked_array::binary"],[294,"polars_core::datatypes"],[295,"polars_ops::chunked_array::binary::namespace"],[296,"polars_ops::chunked_array::scatter"],[297,"polars_utils::index"],[298,"polars_core::series"],[299,"polars_error"],[300,"core::marker"],[301,"core::option"],[302,"core::iter::traits::collect"],[303,"polars_ops::chunked_array::list::namespace"],[304,"polars_core::datatypes::aliases"],[305,"polars_core::chunked_array::ops::sort::options"],[306,"polars_core::frame"],[307,"dyn_clone::sealed"],[308,"polars_ops::frame::join::hash_join"],[309,"polars_ops::frame::join::args"],[310,"alloc::string"],[311,"polars_ops::frame::join::cross_join"],[312,"core::fmt"],[313,"core::convert"],[314,"core::hash"],[315,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[316,"polars_arrow::array::primitive"],[317,"core::result"],[318,"core::any"],[319,"polars_ops::series::ops::arg_min_max"],[320,"polars_ops::series::ops"],[321,"polars_core::chunked_array::ops::search_sorted"],[322,"polars_ops::series::ops::various"],[323,"polars_ops::frame::join::general"],[324,"polars_ops::series::ops::clip"],[325,"polars_ops::series::ops::horizontal"],[326,"polars_ops::series::ops::index"],[327,"polars_ops::series::ops::negate"],[328,"polars_ops::series::ops::not"],[329,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,4,4,0,0,0,17,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,27,0,0,0,28,0,0,36,37,0,0,37,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,37,0,33,36,37,38,0,32,32,0,32,32,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,36,36,37,38,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,44,33,36,37,38,47,47,47,47,33,33,36,37,38,44,33,36,37,38,37,38,44,33,44,38,33,0,33,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,0,0,55,0,55,55,0,0,0,55,53,53,54,55,55,0,0,0,55,55,55,55,0,0,55,55,55,55,56,56,55,55,55,55,55,55,55,55,55,0,56,56,0,0,0,0,0,0,0,55,55,55,55,56,56],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{Ad}}}}}{{Af{Bd}}}}0{{{d{Bf}}C`Bj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{Ad}}}{{Af{Bd}}}}0{{{d{Bf}}C`Cb}Bd}0{{{d{Bf}}Cd}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Cf}}}{{d{Bl}}}}```{{{d{Ch}}}{{d{Cj}}}}````````````````````````{{{d{c}}Cl}Cn{}}000{{Cj{d{{l{{d{Bh}}}}}}{d{{l{{d{Bh}}}}}}{Al{{d{Bh}}}}{d{Cj}}}Cj}{{{d{D`}}{d{{l{Ab}}}}BjBj}Cj}0`{{{d{D`}}{d{Cj}}{d{Ad}}{d{Ad}}Db}{{Af{Cj}}}}0{{{d{Bh}}{d{Bh}}}Dd}{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cn{}{}}000{{{d{c}}}Cn{}}00000{{{d{Dh}}{d{Dj}}}Bj}`{{{d{Dn}}{d{Cj}}{Al{{d{Bh}}}}{Al{{E`{C`Cb}}}}}{{Af{Cj}}}}0{{{d{Dn}}{d{Cj}}{Al{{E`{C`Cb}}}}Bj}{{Af{{E`{CjCj}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{Cb{{d{c}}}{}}000{Cb{{d{Dfc}}}{}}000{CbCn}000{{{d{Db}}{d{Db}}}Bj}{{{d{Dh}}{d{Dh}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{c}}{d{e}}}Bj{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{cc{}}{DjDb}111{{{d{Eh}}{d{Cj}}ee}{{Af{Cj}}}{{Ej{Bh}}}{{An{}{{Aj{c}}}}}}{{{d{Db}}{d{Dfc}}}CnEl}{{{d{Dh}}{d{Dfc}}}CnEl}{{{d{Dj}}{d{Dfc}}}CnEl}{{{d{Dl}}{d{Dfc}}}CnEl}{{{d{En}}{d{Ad}}DlBj}{{Af{{E`{F`Bj}}}}}}0{{{d{En}}{d{Ad}}DlBj}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}Cb}0007{ce{}{}}000{{{d{Dj}}}Bj}{{{d{Dl}}{d{Dj}}}{{Af{Cn}}}}{{{d{Eh}}{d{Cj}}eeDb}{{Af{Cj}}}{{Ej{Bh}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dl}}}Bj}={{{d{Cj}}{d{Cj}}Bj}{{Af{Fd}}}}{{{d{Db}}}Bj}`{{{d{Db}}}{{d{Bh}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Ff{e}}}{}{}}0000000{{{d{c}}}Fh{}}000`{{DbDh}Db}{{Db{Al{Dd}}}Db}`````````{{{d{c}}Cl}Cn{}}{{{d{Fj}}}{{Al{Cb}}}}0{{{d{Fl}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fn}}}Fn}{{{d{c}}{d{Dfe}}}Cn{}{}}{{{d{c}}}Cn{}}0{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}Cb}{{Af{Bn}}}}{{}Fn}{Cb{{d{c}}}{}}{Cb{{d{Dfc}}}{}}{CbCn}{{{d{G`}}{d{Bh}}}{{Af{Cn}}}}0{{{d{Fn}}{d{Fn}}}Bj}{{{d{c}}{d{e}}}Bj{}{}}00{{{d{Fn}}{d{DfEd}}}{{Ff{CnGb}}}}{cc{}}{{{d{Fn}}{d{Dfc}}}CnEl}{{}Cb}{ce{}{}}{{{d{Ad}}}Bj}{{{d{G`}}Cd}{{Af{Bj}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{C`{d{Bh}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Ff{e}}}{}{}}0{{{d{c}}}Fh{}}{{{d{G`}}BjBjDdBj}{{Af{Cj}}}}0","D":"El","p":[[10,"AsBinary",4,293],[1,"reference"],[8,"BinaryChunked",294],[10,"BinaryNameSpaceImpl",4,295],[1,"u8"],[1,"slice"],[8,"BooleanChunked",294],[10,"ChunkedSet",4,296],[8,"IdxSize",297],[5,"Series",298],[8,"PolarsResult",299],[10,"Copy",300],[17,"Item"],[6,"Option",301],[10,"IntoIterator",302],[8,"UInt32Chunked",294],[10,"AsList",25],[8,"ListChunked",294],[10,"ListNameSpaceImpl",25,303],[1,"str"],[1,"bool"],[8,"StringChunked",294],[8,"IdxCa",304],[1,"i64"],[1,"usize"],[5,"SortOptions",305],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",306],[5,"Private",307],[1,"unit"],[10,"JoinDispatch",80,308],[5,"JoinArgs",80,309],[5,"String",310],[0,"mut"],[6,"JoinCoalesce",80,309],[6,"JoinType",80,309],[6,"JoinValidation",80,309],[10,"CrossJoin",80,311],[1,"tuple"],[8,"ChunkJoinOptIds",80,309],[5,"Formatter",312],[8,"Result",312],[10,"DataFrameJoinOps",80],[10,"AsRef",313],[10,"Hasher",314],[10,"SeriesJoin",80,315],[8,"InnerJoinIds",80,309],[5,"PrimitiveArray",316],[8,"LeftJoinIds",80,309],[6,"Result",317],[5,"TypeId",318],[10,"ArgAgg",240,319],[10,"SeriesSealed",240,320],[6,"SearchSortedSide",240,321],[10,"SeriesMethods",240,322],[5,"Error",312]],"r":[[4,293],[5,295],[6,296],[26,303],[80,309],[81,309],[84,311],[88,309],[89,309],[90,309],[91,308],[93,309],[94,309],[97,309],[103,315],[108,323],[111,323],[114,323],[146,308],[238,80],[239,76],[241,319],[244,321],[245,322],[246,320],[253,324],[254,324],[255,324],[260,325],[261,326],[277,326],[280,325],[281,325],[282,325],[283,327],[284,328],[285,329],[286,325]],"b":[[177,"impl-Debug-for-JoinType"],[178,"impl-Display-for-JoinType"],[179,"impl-Display-for-JoinValidation"],[180,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPcAEgAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABsAjgAnALcAAAC8AAwAzgABANEAAADTAB4A8wAFAPsAAgABARAAEwEBABkBCgA="}],\
["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNNNOMNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","check_lengths","check_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","flags","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","into","into","into","is_groups_sensitive","register","register","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::plans::options"],[122,"polars_plan::plans"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,22,19,21,22,19,21,19,19,19,19,21,19,21,19,19,21,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,22,19,21,19,13,22,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{ce{}{}}00{{{b{Bf}}}Bh}{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",32],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",32,121],[1,"bool"],[6,"Context",32,122],[5,"DefaultFunctionRegistry",32],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[24,127],[33,122],[36,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsACgACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABIAPAASAFMABABdAA4A"}],\
["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[58,"polars_time::chunkedarray::string::infer"],[84,"polars_time::prelude"],[294,"polars_time::series"],[315,"chrono::naive::datetime"],[316,"polars_time::windows::duration"],[317,"polars_time::windows::group_by"],[318,"polars_core::datatypes::time_unit"],[319,"polars_arrow::legacy::time_zone"],[320,"core::option"],[321,"polars_core::chunked_array::logical::datetime"],[322,"polars_error"],[323,"polars_time::round"],[324,"polars_core::datatypes"],[325,"chrono::naive::time"],[326,"polars_core::chunked_array::logical::time"],[327,"polars_time::truncate"],[328,"polars_time::upsample"],[329,"polars_core::frame"],[330,"alloc::string"],[331,"polars_core::utils"],[332,"dyn_clone::sealed"],[333,"polars_time::chunkedarray::string::patterns"],[334,"core::fmt"],[335,"core::hash"],[336,"core::result"],[337,"core::any"],[338,"core::clone"],[339,"polars_time::windows::bounds"],[340,"polars_time::windows::window"],[341,"core::cmp"],[342,"polars_core::datatypes::dtype"],[343,"polars_core::frame::group_by::proxy"],[344,"alloc::vec"],[345,"core::ops::function"],[346,"polars_core::series"],[347,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,5,0,0,0,0,44,4,0,12,0,0,16,17,17,0,0,0,25,25,25,25,25,0,0,25,23,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,5,0,0,0,42,43,0,43,0,5,42,43,5,5,42,43,0,43,0,43,43,43,0,43,41,4,5,42,43,44,4,4,4,47,41,4,5,42,43,44,47,41,4,5,42,43,44,41,4,5,42,43,44,41,4,5,42,43,44,41,41,4,4,5,5,42,42,43,43,44,44,4,4,4,4,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,0,0,4,5,42,43,4,4,4,5,5,5,42,42,42,43,43,43,41,4,4,5,42,43,47,41,4,5,42,43,44,44,44,44,44,0,0,4,5,42,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,4,4,4,4,4,4,4,4,4,4,44,47,44,4,4,4,44,44,44,41,4,5,42,43,44,4,4,4,44,4,44,4,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,43,4,4,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"```````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}```{{{d{Ah}}{d{Aj}}{A`{{d{n}}}}}{{Ad{Ah}}}}`{{{d{b}}AlAlhj}{{Ad{An}}}}{{{d{B`}}{A`{{d{n}}}}{d{Aj}}}{{Ad{B`}}}}{{{d{Bb}}c{d{b}}h}{{Ad{Bd}}}{{Bh{Bf}}}}0``````````{{{d{c}}Bj}Bl{}}{{{d{Bn}}}{{d{Aj}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{Cb}}}Cb}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}0{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{{{d{Cb}}{d{Cb}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cb}}{d{C`Cf}}}Ch}{cc{}}{{{d{Cb}}{d{C`c}}}BlCj}`{{}Cd}{ce{}{}}{{{d{Cb}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}0{{{d{c}}}Cn{}}````{{{d{c}}Bj}Bl{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{{D`{c}}}}}{{D`{c}}}{DbDd}}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{cc{}}{{{d{b}}}{{A`{Cb}}}}{{}Cd}{ce{}{}}`{{{d{C`{D`{c}}}}{d{b}}}A`Dd}{{{d{C`Df}}{d{{Dj{Dh}}}}{A`{l}}}{{A`{c}}}{}}`{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}{{c{A`{l}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}1{{{d{c}}}Cn{}}````````````````````````{{{d{c}}Bj}Bl{}}00000{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}{{d{e}}}{}{}}000000{{{d{C`c}}}{{d{C`e}}}{}{}}000000{{{d{Eb}}}Eb}{{{d{h}}}h}{{{d{j}}}j}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{{d{c}}{d{C`e}}}Bl{}{}}00000{{{d{c}}}Bl{}}00000000000{{{d{h}}{d{h}}}Ej}{{{d{c}}{d{e}}}Ej{}{}}{{{d{h}}}E`}{{{d{h}}}Af}{{}Ef}{Cd{{d{c}}}{}}000000{Cd{{d{C`c}}}{}}000000{CdBl}000000{{h{d{El}}{d{b}}}{{Ad{Bl}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{Bl}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Ed}}{d{Ed}}}Af}{{{d{Ef}}{d{Ef}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Eb}}{d{C`Cf}}}Ch}{{{d{h}}{d{C`Cf}}}Ch}0{{{d{j}}{d{C`Cf}}}Ch}{{{d{Ed}}{d{C`Cf}}}Ch}{{{d{Ef}}{d{C`Cf}}}Ch}{cc{}}000000{{{d{Eh}}E`j{A`{{d{n}}}}}{{Ad{Eb}}}}00{{{d{Eh}}Ebjl{A`{{d{n}}}}Ef}{{Ad{En}}}}{{hh{d{{Dj{E`}}}}jl{A`{n}}}{{Ad{F`}}}}{{Eh{d{{Dj{E`}}}}jl{d{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{d{h}}{d{C`c}}}BlCj}{{{d{j}}{d{C`c}}}BlCj}{{{d{Ed}}{d{C`c}}}BlCj}{{{d{Ef}}{d{C`c}}}BlCj}{{}Cd}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}E`}1{{hE`}h}1{hc{}}3{E`h}{{hhh}Eh}{{{d{C`En}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{Ej}}}}{{{d{Eh}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bf{}}{{{d{h}}E`{A`{{d{n}}}}ceg}{{Ad{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{f}}}}}{{Fj{f}{{Fh{E`}}}}}}{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}0000000000000{{{d{c}}}Cn{}}000000{{{d{Ef}}}{{A`{Fl}}}}?{{{d{h}}}Af}``{{{d{Fn}}}{{d{G`}}}}{{{d{Gb}}}{{Ad{Gd}}}}{{{d{Gb}}}{{Ad{Gf}}}}0{{{d{Gb}}}{{Ad{Gh}}}}22112{{{d{Gb}}}{{Ad{Gj}}}}322{{{d{Gb}}{d{b}}}{{Ad{G`}}}}0334","D":"Gd","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",315],[5,"Duration",84,316],[6,"ClosedWindow",84,317],[6,"TimeUnit",318],[6,"Tz",319],[6,"Option",320],[8,"DatetimeChunked",321],[8,"PolarsResult",322],[1,"bool"],[10,"PolarsRound",0,323],[8,"StringChunked",324],[5,"NaiveTime",325],[8,"TimeChunked",326],[10,"PolarsTruncate",0,327],[10,"PolarsUpsample",0,328],[5,"DataFrame",329],[5,"String",330],[10,"IntoVec",331],[5,"Private",332],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,333],[1,"usize"],[5,"Formatter",334],[8,"Result",334],[10,"Hasher",335],[6,"Result",336],[5,"TypeId",337],[5,"DatetimeInfer",58],[10,"Clone",338],[10,"PolarsNumericType",324],[10,"StrpTimeParser",58],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",58],[1,"i64"],[5,"Bounds",84,339],[6,"Label",84,317],[6,"StartBy",84,317],[5,"Window",84,340],[6,"Ordering",341],[6,"DataType",342],[5,"BoundsIter",84,340],[8,"GroupsSlice",343],[8,"TimeZone",342],[5,"Vec",344],[1,"tuple"],[17,"Output"],[10,"Fn",345],[1,"u32"],[10,"AsSeries",294],[5,"Series",346],[10,"TemporalMethods",294],[8,"Int32Chunked",324],[8,"Int8Chunked",324],[8,"BooleanChunked",324],[8,"Int16Chunked",324]],"r":[[1,317],[2,316],[5,323],[6,327],[7,328],[9,340],[11,347],[12,347],[18,347],[22,24],[30,333],[85,339],[86,340],[87,317],[90,316],[92,317],[100,317],[102,294],[106,340],[181,316],[182,316],[216,317],[217,317]],"b":[[200,"impl-Debug-for-Duration"],[201,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAEBFwAAAAkADQAFABQAAAAXABkAMgACADYAEQBJAAEATAATAGEACQBsAGEA1QAAANcAAQDbAAoA7QABAPEAAgD1AAAA+AACAPwAAQABAQgACwEAAA0BAAAPARoALgEAAA=="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCQQCCRKMMRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMFNNNNNNNNNNNNNNNNNHHHHFKNNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNHHKNNNNMMFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","foreign_vec","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","drop","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","ForeignVec","borrow","borrow_mut","deref","deref","deref_mut","drop","drop","fmt","from","from","from_foreign","get_vec","init","into","try_from","try_into","type_id","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","enumerate_idx","enumerate_u32","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","MemReader","MemSlice","Mmap","advise","advise_range","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_mmap","from_mmap","from_reader","from_slice","from_slice","from_vec","from_vec","init","init","init","into","into","into","lock","make_mut","map","new","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","to_owned","to_vec","total_len","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::aliases"],[68,"polars_utils::arena"],[132,"polars_utils::atomic"],[153,"polars_utils::binary_search"],[155,"polars_utils::cache"],[192,"polars_utils::cell"],[212,"polars_utils::clmul"],[216,"polars_utils::contention_pool"],[231,"polars_utils::cpuid"],[233,"polars_utils::fixedringbuffer"],[256,"polars_utils::float"],[262,"polars_utils::floor_divmod"],[264,"polars_utils::foreign_vec"],[282,"polars_utils::functions"],[286,"polars_utils::hashing"],[320,"polars_utils::idx_vec"],[364,"polars_utils::index"],[430,"polars_utils::io"],[433,"polars_utils::itertools"],[441,"polars_utils::itertools::enumerate_idx"],[467,"polars_utils::mem"],[469,"polars_utils::min_max"],[476,"polars_utils::mmap"],[554,"polars_utils::nulls"],[559,"polars_utils::ord"],[561,"polars_utils::partitioned"],[580,"polars_utils::priority"],[605,"polars_utils::slice"],[619,"polars_utils::sort"],[621,"polars_utils::sync"],[646,"polars_utils::sys"],[660,"polars_utils::total_ord"],[712,"polars_utils::unwrap"],[714,"polars_utils::vec"],[728,"num_traits"],[729,"core::cmp"],[730,"core::marker"],[731,"core::fmt"],[732,"core::clone"],[733,"core::option"],[734,"core::hash"],[735,"core::default"],[736,"core::ops::function"],[737,"core::result"],[738,"core::any"],[739,"core::borrow"],[740,"alloc::vec"],[741,"alloc::sync"],[742,"core::convert"],[743,"core::ops::range"],[744,"core::iter::traits::collect"],[745,"core::slice::iter"],[746,"polars_error"],[747,"std::path"],[748,"std::io::error"],[749,"std::fs"],[750,"core::iter::traits::iterator"],[751,"core::ops::arith"],[752,"num_traits::cast"],[753,"num_traits::identities"],[754,"core::iter::traits::exact_size"],[755,"core::iter::traits::double_ended"],[756,"memmap2"],[757,"memmap2::advice"],[758,"polars_utils::mmap::private"],[759,"bytes::bytes"],[760,"std::io"],[761,"hashbrown::map"],[762,"core::mem::maybe_uninit"],[763,"core::slice::index"],[764,"rayon_core::thread_pool"]],"if":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}````````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}00{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{{{Al{{Aj{c}}}}{Al{AhBh}}}Bjl}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}D`}{{{Al{D`}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{c{{Eb{c}}}{}}{Edc{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}6{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Eh{c}}}}}cCb}>={Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb}<<;{{}Bf}0`{{{Al{{Ej{c}}}}}{{El{{Al{{Db{c}}}}{Al{{Db{c}}}}}}}{}}:9{{{Al{{Ej{c}}}}}Ab{}}987{{{Al{Ah{Ej{c}}}}}B`{}}{{{Al{Ah{Ej{c}}}}cAb}Abj}8{{}Ab}{ce{}{}}{{{Al{{Ej{c}}}}}Bf{}}05{Ab{{Ej{c}}}{}}{{{Al{Ah{Ej{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Ej{c}}}}c}{{Bn{B`}}}{}}8{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`<<{{{Al{En}}}Bf}=0`{{F`F`}{{El{F`F`}}}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Fb{ce}}}}}{{Al{{Db{e}}}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Fb{ce}}}}}B`{}{}}{AbB`}{{{Al{{Fb{ce}}}}{Al{AhBh}}}Bj{}l}{cc{}}{{{Fd{c}}}{{Fb{ec}}}{}{}}{{Abc}{{Fb{ce}}}{}{}}{{{Al{Ah{Fb{ce}}}}}{{Bn{{Al{Ah{Fd{e}}}}}}}{}{}}{{}Ab}{ce{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Ff{c}}e}{{Ff{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fd{c}}}Bb{{Fh{{Db{c}}}}}}{{AbAb{Fj{Ab}}}{{Fj{Ab}}}}{{{Ff{c}}g}{{Ch{{Ff{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Fl}}}Fl}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Fn}}}Ef}{{{Al{Fl}}}Ef}{AbB`}{{{Al{Fl}}{Al{Fl}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fl}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fl}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fl}}}Bf}{{{Bn{{Al{{Db{G`}}}}}}Ef}Fl}2{{{Al{c}}}e{}{}}{{{Al{Fl}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Flc{}}``{{{Al{Ah{Gb{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{Gb{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Gb{c}}}}}Ab{}}{{{Al{{Gb{c}}}}}{{Gb{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{Gb{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{Gb{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{Ah{Gb{c}}}}}B`{}}{{{Al{{Gb{c}}}}{Al{{Gb{c}}}}}BfGd}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Gb{c}}}}e}B`{}{{Gh{}{{Gf{c}}}}}}{{{Al{{Gb{c}}}}{Al{AhBh}}}Bjl}{{{Al{{Db{c}}}}}{{Gb{c}}}Bb}{{{Fd{c}}}{{Gb{c}}}{}}{cc{}}{e{{Gb{c}}}{}{{Gh{}{{Gf{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Gb{c}}}}}Bf{}}{{{Al{{Gb{c}}}}}{{Gj{c}}}{}}{{{Al{Ah{Gb{c}}}}}{{Gl{c}}}{}}{{{Al{{Gb{c}}}}}Ab{}}{{}{{Gb{c}}}{}}{{{Al{Ah{Gb{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Gb{c}}}}c}B`{}}0{{{Al{Ah{Gb{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{Gb{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{Gn}}}}Gn}{{H`{B`}}}}{{{Al{Hb}}}Hb}{{{Al{Hd}}}Hd}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}000{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hb}}{Al{Hb}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hd{{El{GnGn}}}}{{{Al{Hb}}{Al{AhBh}}}Bj}{{{Al{Hd}}{Al{AhBh}}}Bj}{cc{}}{GnHb}1{{{Al{{Hf{}{{Gf{c}}}}}}Ab}cHh}0{{{Al{Hb}}}Gn}{{}Ab}0`{{{Al{AhHd}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hj}}}Bf}{{{Al{Hd}}}Bf}{{{Al{Hb}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hj}}}Ab}{{}Hb}{{}Hd}{{{Al{Hl}}}Ab}{{GnGn}Hd}{{HnEf}Gn}{{{Al{Hb}}}{{Bn{Gn}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{{{Al{I`}}Ib}Id}{{{Al{I`}}}{{H`{If}}}}0`{IhBf}{Ih{{Fd{c}}}{}}`{Ih{{Ij{IhGn}}}}{Ih{{Ij{IhCn}}}}{Ih{{Ch{ce}}}{}{}}{Ih{{Ch{{Fd{c}}e}}}{}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Ij{ce}}}}}{{Ij{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{{Ij{ce}}}AbIl{{In{}{{Cd{}}}}J`JbJdj}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Ij{ce}}}}{Al{AhBh}}}Bjll}{cc{}}{{}Ab}{ce{}{}}0{{{Al{{Ij{ce}}}}}AbJf{{In{}{{Cd{}}}}J`JbJdj}}{c{{Ij{ce}}}{}Jh}{{{Al{Ah{Ij{ce}}}}}{{Bn{g}}}Il{{In{}{{Cd{}}}}J`JbJdj}{}}{{{Al{Ah{Ij{ce}}}}}{{Bn{{El{e}}}}}{JfJj}{{In{}{{Cd{}}}}J`JbJdj}}{{{Al{Ah{Ij{ce}}}}Ab}{{Bn{g}}}Il{{In{}{{Cd{}}}}J`JbJdj}{}}{{{Al{Ah{Ij{ce}}}}Ab}{{Bn{{El{e}}}}}{JfJj}{{In{}{{Cd{}}}}J`JbJdj}}{{{Al{{Ij{ce}}}}}{{El{Ab{Bn{Ab}}}}}Il{{In{}{{Cd{}}}}J`JbJdj}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{G`B`}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{JlJl}Jl}000{{{Al{Jl}}{Al{Jl}}}Bf}0```{{{Al{Jn}}K`}{{Ch{B`Ib}}}}{{{Al{Jn}}K`AbAb}{{Ch{B`Ib}}}}{{{Al{Jn}}}{{Al{{Db{G`}}}}}}{{{Al{c}}}{{Al{e}}}{}{}}00{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}00{{{Al{Kb}}}Kb}{{{Al{Kd}}}Kd}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}0{{}Kb}{Ab{{Al{c}}}{}}8{{{Al{Kb}}}{{Al{c}}}{}}11{Ab{{Al{Ahc}}}{}}00{AbB`}00{{{Al{Jn}}{Al{AhBh}}}{{Ch{B`Kf}}}}{{{Al{Kb}}{Al{AhBh}}}Bj}{{{Al{Kd}}{Al{AhBh}}}Bj}{cc{}}00{KbKd}{KhKb}{KhKd}{{{Ff{Jn}}}Kb}{{{Ff{Jn}}}Kd}{c{{Kj{Kd}}}Kl}{{{Al{{Db{G`}}}}}Kb}{{{Al{{Db{G`}}}}}Kd}{{{Fd{G`}}}Kb}{{{Fd{G`}}}Kd}{{}Ab}00{ce{}{}}00{{{Al{Jn}}}{{Ch{B`Ib}}}}{Jn{{Ch{KnIb}}}}{c{{Ch{JnIb}}}L`}>{{{Al{Kd}}}Ab}{{{Al{Kb}}}B`}{{{Al{AhKd}}{Al{Ah{Db{G`}}}}}{{Kj{Ab}}}}{{{Al{AhKd}}Ab}Kb}3{{{Al{AhJn}}AbLb}{{Ch{B`Ib}}}}{{{Al{AhKd}}Ld}{{Kj{Ef}}}}{{{Al{Kb}}{Fj{Ab}}}Kb}{{{Al{c}}}e{}{}}0{Kb{{Fd{G`}}}}8{c{{Ch{e}}}{}{}}00000{{{Al{c}}}Cl{}}00=```{{{Al{{Hh{}{{Lf{c}}}}}}}Bf{}}{{{Hh{}{{Lf{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEn}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Lh{ceg}}}}}{{Al{{Db{{Lj{ceg}}}}}}}{}{}{}}{{{Al{Ah{Lh{ceg}}}}}{{Al{Ah{Fd{{Lj{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fd{{Lj{ceg}}}}}{{Lh{ceg}}}{}{}{}}{{{Al{{Lh{ceg}}}}Ef}{{Ll{ceg}}}{}{}{}}{{{Al{{Lh{ceg}}}}Ef}{{El{{Ll{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Lh{ceg}}}}Ef}{{El{{Ln{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Lh{ceg}}}}Ef}{{Ln{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{M`{ce}}}}}{{M`{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{M`{ce}}}}{Al{{M`{ce}}}}}Bd{DdDj}{}}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{M`{ce}}}}{Al{{M`{ce}}}}}BfDj{}}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{{M`{ce}}}}{Al{AhBh}}}Bjll}{cc{}}{{}Ab}{ce{}{}}{{{Al{{M`{ce}}}}{Al{{M`{ce}}}}}{{Bn{Bd}}}{DdDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Mb}}}{{Al{{Db{{Md{c}}}}}}}{}}{{{Al{Mf}}e}Al{}{{Mh{{Db{c}}}}}}{{{Al{AhMf}}e}{{Al{Ah}}}{}{{Mh{{Db{c}}}}}}{{{Al{Mj}}}Bf}{{{Al{{Db{G`}}}}}Ef}{{{Al{Ml}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Mn}}{Fj{Ab}}}Mn}0{{e{Al{Ah{Fd{G`}}}}Ab}{{Al{Ah{Db{g}}}}}{N`j}{{Gh{}{{Gf{c}}}}}{J`j}}{{{Al{Nb}}{Al{{Db{{El{GnGn}}}}}}{Al{Ah{Fd{Gn}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Nd{c}}}}}{{Nd{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Nd{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{Nd{c}}}}{Al{AhBh}}}Bjl}{{}{{Nd{c}}}{}}{cc{}}1{{{Al{{Nd{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{Nd{c}}}}}Bf{}}55{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Nf}}}Ef}:87443```````21{NhNh}{NjNj}{{{Al{{Nl{c}}}}}{{Nl{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Nl{c}}}}{Al{{Nl{c}}}}}BdN`}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Nl{c}}}}}EfFn}{AbB`}{{{Al{{Nl{c}}}}{Al{{Nl{c}}}}}BfNn}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Nl{c}}}}{Al{{Nl{c}}}}}BfN`}0{{{Al{{Nl{c}}}}{Al{Ahe}}}B`O`C`}{{}Ab}{ce{}{}}{{{Al{{Nl{c}}}}}BfHh}447{{{Al{{Nl{c}}}}{Al{{Nl{c}}}}}{{Bn{Bd}}}N`}2{{{Al{c}}}e{}{}}{{{Al{{Of{}{{Ob{c}}{Od{e}}}}}}}c{}{}}{{{Al{N`}}{Al{N`}}}Bd}{{{Al{Nn}}{Al{Nn}}}Bf}{{{Al{N`}}{Al{N`}}}Bf}0{{{Al{O`}}{Al{Ahc}}}B`C`}{{{Al{{Db{O`}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Nl{c}}}eHh{}}`{Ohc{}}``````{{{Al{{Ol{}{{Oj{c}}}}}}g}{{Fd{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Ol{}{{Oj{c}}}}g}{{Fd{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhOn}}Abc}B`j}{{{Al{Ah{Fd{c}}}}{Al{Ah{Fd{e}}}}g}B`{}{}{{Cj{ce}{{Cd{{Bn{{El{ce}}}}}}}}}}{A@`{{El{AbAb}}}}{{{Al{AhA@b}}c}B`{}}{{{Al{A@`}}}{{El{AbAb}}}}{{AbNj}A@d}","D":"Od","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",728],[10,"PartialOrd",729],[10,"Copy",730],[10,"Debug",731],[10,"Send",730],[10,"Sync",730],[1,"usize"],[8,"PlHashMap",50],[8,"PlHashSet",50],[0,"mut"],[5,"Arena",68],[1,"reference"],[5,"Node",68],[1,"unit"],[10,"Clone",732],[6,"Ordering",729],[1,"bool"],[5,"Formatter",731],[8,"Result",731],[1,"array"],[6,"Option",733],[10,"Hasher",734],[10,"Default",735],[17,"Output"],[10,"FnOnce",736],[6,"Result",737],[10,"FnMut",736],[5,"TypeId",738],[1,"u32"],[5,"SyncCounter",132],[1,"slice"],[10,"Ord",729],[5,"FastFixedCache",155],[10,"Hash",734],[10,"Eq",729],[5,"FastCachedFunc",155],[10,"Sized",730],[10,"Borrow",739],[5,"SyncUnsafeCell",192],[1,"never"],[1,"u64"],[5,"LowContentionPool",216],[5,"FixedRingBuffer",233],[1,"tuple"],[10,"IsFloat",256],[10,"FloorDivMod",262],[5,"ForeignVec",264],[5,"Vec",740],[5,"Arc",741],[10,"AsRef",742],[5,"Range",743],[5,"BytesHash",286],[10,"DirtyHash",286],[1,"u8"],[5,"UnitVec",320],[10,"PartialEq",729],[17,"Item"],[10,"IntoIterator",744],[5,"Iter",745],[5,"IterMut",745],[8,"IdxSize",364],[8,"PolarsResult",746],[5,"NullableIdxSize",364],[5,"ChunkId",364],[10,"Indexable",364],[10,"IsNull",554],[10,"Bounded",364],[10,"NullCount",364],[10,"ToIdx",364],[5,"Path",747],[5,"Error",748],[6,"PolarsError",746],[5,"File",749],[10,"Itertools",433],[5,"EnumerateIdx",441],[10,"Iterator",750],[10,"Add",751],[10,"FromPrimitive",752],[10,"AddAssign",751],[10,"One",753],[10,"ExactSizeIterator",754],[10,"Zero",753],[10,"DoubleEndedIterator",755],[10,"MinMax",469],[5,"Mmap",476,756],[6,"Advice",757],[5,"MemSlice",476,758],[5,"MemReader",476],[5,"Error",731],[5,"Bytes",759],[8,"Result",748],[10,"Read",760],[5,"MmapMut",756],[10,"MmapAsRawDesc",756],[5,"RemapOptions",756],[6,"SeekFrom",760],[17,"Inner"],[5,"PartitionedHashMap",561],[5,"HashMap",761],[5,"RawEntryBuilder",761],[5,"RawEntryBuilderMut",761],[5,"Priority",580],[10,"Slice2Uninit",605],[20,"MaybeUninit",762],[10,"GetSaferUnchecked",605],[10,"SliceIndex",763],[10,"SortedSlice",605],[10,"Extrema",605],[10,"SliceAble",605],[10,"TotalOrd",660],[5,"ThreadPool",764],[5,"SyncPtr",621],[5,"MemInfo",646],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",660],[10,"TotalEq",660],[10,"TotalHash",660],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",660],[10,"UnwrapUncheckedRelease",712],[17,"ItemIn"],[10,"ConvertVec",714],[10,"ResizeFaster",714],[10,"IntoRawParts",714],[10,"PushUnchecked",714],[10,"CapacityByFactor",714],[10,"InitHashMaps",50],[8,"PlIndexMap",50],[8,"PlIndexSet",50]],"r":[[0,364],[1,364],[477,758],[478,756]],"b":[[344,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[345,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAF4CUAAAAAgACgBaAGcAAABpAAEAbAACAHEAEwCGAAoAkgAAAJUABACdAA8ArwAFALcACQDCAAEAxQACAMoAAADNAAAA0gAMAOAAAQDjAAYA7AAGAPUAAAD3AAMA/QADAAIBBgAKAQcAEwEAABYBAAAYAQYAIAEQADIBAgA2AQsAQwEXAFwBAQBfAQYAZwEoAJEBAACTAQAAlQEEAJwBFQCzAQAAtQECALsBCQDGAQAAyAECAMwBBwDWAQYA4gEbAAECAAAEAgIACwICABQCAQAXAgIAGwIAAB0CAQAgAgkAKwIEADICBQA5AgIAPQIHAEYCDwBXAgAAWQIKAGYCBABsAgAAbwIHAHgCAgB8AgIAgAIAAIICBQCJAgQAkAIAAJICAwCaAgMAoAINAK8CAwC0AhUAywIEANECAgDVAgAA1wIBAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
